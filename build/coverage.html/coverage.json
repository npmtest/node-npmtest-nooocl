{"/home/travis/build/npmtest/node-npmtest-nooocl/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_nooocl */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/lib.npmtest_nooocl.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/lib.npmtest_nooocl.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_nooocl */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_nooocl = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_nooocl = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":64},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-nooocl && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_nooocl */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_nooocl","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_nooocl.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_nooocl.rollup.js'] =","            local.assetsDict['/assets.npmtest_nooocl.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_nooocl.__dirname + '/lib.npmtest_nooocl.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}}},"branchMap":{},"code":["/*jslint node:true,nomen:true,vars:true,plusplus:true,white:true,unparam:true*/","/*jshint onevar:true*/","'use strict';","module.exports = require('./lib');",""],"l":{"4":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}},"2":{"start":{"line":18,"column":0},"end":{"line":46,"column":2}}},"branchMap":{},"code":["/*","License: [MIT](../LICENSE)","","Copyright (c) 2014 Gábor Mező aka [unbornchikken](https://github.com/unbornchikken)","*/","","/*","# NOOOCL API index","","Public definitions of the NOOOCL library.","*/","","\"use strict\";","","var fastcall = require(\"fastcall\");","","// ## Exported stuff","module.exports = {","    // ### [CLHost](clHost.html)","    // This is the entry point of interacting OpenCL runtime in NOOOCL.","    CLHost: require(\"./clHost\"),","","    // ### [CLPlatform](clPlatform.html)","    // Represents an OpenCL platform.","    CLPlatform: require(\"./clPlatform\"),","","    // ### [CLDevice](clDevice.html)","    // Represents an OpenCL device.","    CLDevice: require(\"./clDevice\"),","","    // ### [CLContext](clContext.html)","    // Represents an OpenCL context.","    CLContext: require(\"./clContext\"),","","    CLBuffer: require(\"./clBuffer\"),","    CLCommandQueue: require(\"./clCommandQueue\"),","    CLUserEvent: require(\"./clUserEvent\"),","    NDRange: require(\"./ndRange\"),","    CLProgram: require(\"./clProgram\"),","    CLKernel: require(\"./clKernel\"),","    CLImage2D: require(\"./clImage2D\"),","    CLImage3D: require(\"./clImage3D\"),","    CLSampler: require(\"./clSampler\"),","    CLError: require(\"./clError\"),","    scope: fastcall.scope","};","","/*","## Additional stuff","","### [CLWrapper](clWrapper.html)","Base class of OpenCL wrapper classes.","*/"],"l":{"15":1,"18":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clHost.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clHost.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"CLHost","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":25}}},"2":{"name":"(anonymous_2)","line":72,"loc":{"start":{"line":72,"column":13},"end":{"line":72,"column":25}}},"3":{"name":"(anonymous_3)","line":85,"loc":{"start":{"line":85,"column":13},"end":{"line":85,"column":25}}},"4":{"name":"(anonymous_4)","line":93,"loc":{"start":{"line":93,"column":19},"end":{"line":93,"column":31}}},"5":{"name":"(anonymous_5)","line":99,"loc":{"start":{"line":99,"column":19},"end":{"line":99,"column":31}}},"6":{"name":"(anonymous_6)","line":110,"loc":{"start":{"line":110,"column":32},"end":{"line":110,"column":44}}}},"statementMap":{"1":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}},"2":{"start":{"line":29,"column":0},"end":{"line":29,"column":29}},"3":{"start":{"line":30,"column":0},"end":{"line":30,"column":29}},"4":{"start":{"line":31,"column":0},"end":{"line":31,"column":41}},"5":{"start":{"line":32,"column":0},"end":{"line":32,"column":35}},"6":{"start":{"line":33,"column":0},"end":{"line":33,"column":23}},"7":{"start":{"line":34,"column":0},"end":{"line":34,"column":31}},"8":{"start":{"line":42,"column":0},"end":{"line":61,"column":1}},"9":{"start":{"line":43,"column":4},"end":{"line":43,"column":119}},"10":{"start":{"line":47,"column":4},"end":{"line":47,"column":27}},"11":{"start":{"line":51,"column":4},"end":{"line":51,"column":19}},"12":{"start":{"line":52,"column":4},"end":{"line":60,"column":5}},"13":{"start":{"line":53,"column":8},"end":{"line":53,"column":29}},"14":{"start":{"line":55,"column":9},"end":{"line":60,"column":5}},"15":{"start":{"line":56,"column":8},"end":{"line":56,"column":29}},"16":{"start":{"line":59,"column":8},"end":{"line":59,"column":55}},"17":{"start":{"line":65,"column":0},"end":{"line":68,"column":2}},"18":{"start":{"line":70,"column":0},"end":{"line":89,"column":3}},"19":{"start":{"line":73,"column":12},"end":{"line":73,"column":40}},"20":{"start":{"line":76,"column":12},"end":{"line":76,"column":69}},"21":{"start":{"line":78,"column":12},"end":{"line":78,"column":36}},"22":{"start":{"line":79,"column":12},"end":{"line":79,"column":23}},"23":{"start":{"line":86,"column":12},"end":{"line":86,"column":49}},"24":{"start":{"line":93,"column":0},"end":{"line":95,"column":2}},"25":{"start":{"line":94,"column":4},"end":{"line":94,"column":53}},"26":{"start":{"line":99,"column":0},"end":{"line":101,"column":2}},"27":{"start":{"line":100,"column":4},"end":{"line":100,"column":53}},"28":{"start":{"line":110,"column":0},"end":{"line":125,"column":2}},"29":{"start":{"line":111,"column":4},"end":{"line":111,"column":10}},"30":{"start":{"line":112,"column":4},"end":{"line":112,"column":38}},"31":{"start":{"line":113,"column":4},"end":{"line":113,"column":31}},"32":{"start":{"line":114,"column":4},"end":{"line":114,"column":65}},"33":{"start":{"line":117,"column":4},"end":{"line":117,"column":85}},"34":{"start":{"line":119,"column":4},"end":{"line":119,"column":28}},"35":{"start":{"line":120,"column":4},"end":{"line":120,"column":23}},"36":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"37":{"start":{"line":122,"column":8},"end":{"line":122,"column":67}},"38":{"start":{"line":124,"column":4},"end":{"line":124,"column":21}},"39":{"start":{"line":127,"column":0},"end":{"line":127,"column":24}}},"branchMap":{"1":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":9},"end":{"line":55,"column":9}},{"start":{"line":55,"column":9},"end":{"line":55,"column":9}}]}},"code":["/*","License: [MIT](../LICENSE)","","Copyright (c) 2014 Gábor Mező aka [unbornchikken](https://github.com/unbornchikken)","*/","","/*","# CLHost class","","This is the entry point of interacting OpenCL runtime in NOOOCL.","","**base:** Object","","**Properties:**","- [supportedVersions (static)](#supportedversions)","- [version](#version)","- [cl](#cl)","- [platformsCount](#platformscount)","","**Methods:**","- [constructor](#constructor)","- [createV11 (static)](#createv11)","- [createV12 (static)](#createv12)","- [getPlatforms](#getplatforms)","*/","","\"use strict\";","var _ = require(\"lodash\");","var CL11 = require(\"./cl11\");","var CL12 = require(\"./cl12\");","var CLPlatform = require(\"./clPlatform\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var assert = require(\"assert\");","","/*","## constructor","","**arguments:**","- **version:** version of the OpenCL runtime, can be number value of 1.1 or 1.2.","*/","function CLHost(version) {","    assert(_.includes(_.values(CLHost.supportedVersions), version), \"Argument 'version' is invalid or not supported.\");","","    // ## version","    // version of the OpenCL runtime, can be number value of 1.1 or 1.2.","    this.version = version;","","    // ## cl","    // instance of the [CL11](cl11.html) or [CL12](cl12.html) class, depending the version of the OpenCL runtime.","    this.cl = null;","    if (version === CLHost.supportedVersions.cl11) {","        this.cl = new CL11();","    }","    else if (version === CLHost.supportedVersions.cl12) {","        this.cl = new CL12();","    }","    else {","        throw new Error(\"Unknown version: \" + version);","    }","}","","// ## supportedVersions","// Object defining the supported OpenCL runtime versions of the NOOOCL library","CLHost.supportedVersions = {","    cl11: 1.1,","    cl12: 1.2","};","","Object.defineProperties(CLHost.prototype, {","    _nPlatformsCount: {","        get: function () {","            var num = ref.alloc(\"uint\");","","            // _OpenCL API:_ [clGetPlatformIDs](https://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/clGetPlatformIDs.html)","            var err = this.cl.imports.clGetPlatformIDs(0, null, num);","","            this.cl.checkError(err);","            return num;","        }","    },","    // ## platformsCount","    // Number of OpenCL platforms available.","    platformsCount: {","        get: function () {","            return this._nPlatformsCount.deref();","        }","    }","});","","// ## createV11","// Creates a host instance for the OpenCL 1.1 runtime.","CLHost.createV11 = function () {","    return new CLHost(CLHost.supportedVersions.cl11);","};","","// ## createV12","// Creates a host instance for the OpenCL 1.2 runtime if it is supported by the actual hardware.","CLHost.createV12 = function () {","    return new CLHost(CLHost.supportedVersions.cl12);","};","","/* ## getPlatforms","Returns OpenCL platforms available.","","**Result:**","","Array of [CLPlatform](clPlatform.html) instances.","*/","CLHost.prototype.getPlatforms = function () {","    var i;","    var count = this._nPlatformsCount;","    var nCount = count.deref();","    var plaformIds = new (this.cl.types.PlatformIdArray)(nCount);","","    // _OpenCL API:_ [clGetPlatformIDs](https://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/clGetPlatformIDs.html)","    var err = this.cl.imports.clGetPlatformIDs(plaformIds.length, plaformIds, count);","","    this.cl.checkError(err);","    var platforms = [];","    for (i = 0; i < nCount; i++) {","        platforms.push(new CLPlatform(this.cl, plaformIds.get(i)));","    }","    return platforms;","};","","module.exports = CLHost;",""],"l":{"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"42":1,"43":0,"47":0,"51":0,"52":0,"53":0,"55":0,"56":0,"59":0,"65":1,"70":1,"73":0,"76":0,"78":0,"79":0,"86":0,"93":1,"94":0,"99":1,"100":0,"110":1,"111":0,"112":0,"113":0,"114":0,"117":0,"119":0,"120":0,"121":0,"122":0,"124":0,"127":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/cl11.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/cl11.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"CL11","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":16}}},"2":{"name":"(anonymous_2)","line":707,"loc":{"start":{"line":707,"column":28},"end":{"line":707,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":23}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"8":{"start":{"line":11,"column":0},"end":{"line":701,"column":1}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":23}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":21}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":23}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":167}},"13":{"start":{"line":16,"column":4},"end":{"line":700,"column":11}},"14":{"start":{"line":703,"column":0},"end":{"line":703,"column":19}},"15":{"start":{"line":705,"column":0},"end":{"line":705,"column":17}},"16":{"start":{"line":707,"column":0},"end":{"line":716,"column":2}},"17":{"start":{"line":708,"column":4},"end":{"line":715,"column":5}},"18":{"start":{"line":709,"column":8},"end":{"line":711,"column":9}},"19":{"start":{"line":710,"column":12},"end":{"line":710,"column":30}},"20":{"start":{"line":712,"column":8},"end":{"line":714,"column":9}},"21":{"start":{"line":713,"column":12},"end":{"line":713,"column":35}},"22":{"start":{"line":718,"column":0},"end":{"line":718,"column":22}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":52},"end":{"line":15,"column":60}},{"start":{"line":15,"column":63},"end":{"line":15,"column":166}}]},"2":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":97},"end":{"line":15,"column":149}},{"start":{"line":15,"column":152},"end":{"line":15,"column":166}}]},"3":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":4},"end":{"line":708,"column":4}},{"start":{"line":708,"column":4},"end":{"line":708,"column":4}}]},"4":{"line":709,"type":"if","locations":[{"start":{"line":709,"column":8},"end":{"line":709,"column":8}},{"start":{"line":709,"column":8},"end":{"line":709,"column":8}}]},"5":{"line":712,"type":"if","locations":[{"start":{"line":712,"column":8},"end":{"line":712,"column":8}},{"start":{"line":712,"column":8},"end":{"line":712,"column":8}}]}},"code":["\"use strict\";","","var _ = require(\"lodash\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var ffi = fastcall.ffi;","var types = require(\"./types\");","var defs = require(\"./clDefines\");","var CLError = require(\"./clError\");","","function CL11() {","    this.types = types;","    this.defs = defs;","    this.version = 1.1;","    this.libName = (process.platform === \"win32\") ? \"OpenCL\" : (process.platform === \"darwin\") ? \"/System/Library/Frameworks/OpenCL.framework/OpenCL\" : \"libOpenCL.so\";","    this.imports = new ffi.Library(this.libName,","        {","            /* Platform APIs */","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetPlatformIDs(cl_uint          /* num_entries */,","            //                 cl_platform_id * /* platforms */,","            //                cl_uint *        /* num_platforms */) CL_API_SUFFIX__VERSION_1_0;","            clGetPlatformIDs: [ref.types.int, [ref.types.uint, types.PlatformIdArray, ref.refType(ref.types.uint)]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetPlatformInfo(cl_platform_id   /* platform */,","            //                  cl_platform_info /* param_name */,","            //                  size_t           /* param_value_size */,","            //                  void *           /* param_value */,","            //                  size_t *         /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetPlatformInfo: [ref.types.int, [types.PlatformId, types.PlatformInfo, ref.types.size_t, \"pointer\", ref.refType(ref.types.size_t)]],","","            /* Device APIs */","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetDeviceIDs(cl_platform_id   /* platform */,","            //               cl_device_type   /* device_type */,","            //               cl_uint          /* num_entries */,","            //               cl_device_id *   /* devices */,","            //               cl_uint *        /* num_devices */) CL_API_SUFFIX__VERSION_1_0;","            clGetDeviceIDs: [ref.types.int, [types.PlatformId, types.DeviceType, ref.types.uint, types.DeviceIdArray, ref.refType(ref.types.uint)]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetDeviceInfo(cl_device_id    /* device */,","            //                cl_device_info  /* param_name */,","            //               size_t          /* param_value_size */,","            //               void *          /* param_value */,","            //               size_t *        /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetDeviceInfo: [ref.types.int, [types.PlatformId, types.DeviceInfo, ref.types.size_t, \"pointer\", ref.refType(ref.types.size_t)]],","","            /* Context APIs  */","            //extern CL_API_ENTRY cl_context CL_API_CALL","            //clCreateContext(const cl_context_properties * /* properties */,","            //                cl_uint                 /* num_devices */,","            //                const cl_device_id *    /* devices */,","            //                void (CL_CALLBACK * /* pfn_notify */)(const char *, const void *, size_t, void *),","            //                void *                  /* user_data */,","            //                cl_int *                /* errcode_ret */) CL_API_SUFFIX__VERSION_1_0;","            clCreateContext: [\"pointer\", [types.ContextProperties, ref.types.uint, types.DeviceIdArray, ref.refType(types.CreateContextNotify), \"pointer\", types.ErrorCodeRet]],","","            //extern CL_API_ENTRY cl_context CL_API_CALL","            //clCreateContextFromType(const cl_context_properties * /* properties */,","            //                        cl_device_type          /* device_type */,","            //                        void (CL_CALLBACK *     /* pfn_notify*/ )(const char *, const void *, size_t, void *),","            //                        void *                  /* user_data */,","            //                        cl_int *                /* errcode_ret */) CL_API_SUFFIX__VERSION_1_0;","            clCreateContextFromType: [\"pointer\", [types.ContextProperties, types.DeviceType, ref.refType(types.CreateContextNotify), \"pointer\", types.ErrorCodeRet]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clRetainContext(cl_context /* context */) CL_API_SUFFIX__VERSION_1_0;","            clRetainContext: [\"int\", [types.Context]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clReleaseContext(cl_context /* context */) CL_API_SUFFIX__VERSION_1_0;","            clReleaseContext: [\"int\", [types.Context]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetContextInfo(cl_context         /* context */,","            //                 cl_context_info    /* param_name */,","            //                 size_t             /* param_value_size */,","            //                 void *             /* param_value */,","            //                 size_t *           /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetContextInfo: [\"int\", [types.Context, types.ContextInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","            /* Command Queue APIs */","            //extern CL_API_ENTRY cl_command_queue CL_API_CALL","            //clCreateCommandQueue(cl_context                     /* context */,","            //                     cl_device_id                   /* device */,","            //                     cl_command_queue_properties    /* properties */,","            //                     cl_int *                       /* errcode_ret */) CL_API_SUFFIX__VERSION_1_0;","            clCreateCommandQueue: [types.CommandQueue, [types.Context, types.DeviceId, types.CommandQueueProperties, ref.refType(\"int\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clRetainCommandQueue(cl_command_queue /* command_queue */) CL_API_SUFFIX__VERSION_1_0;","            clRetainCommandQueue: [\"int\", [types.CommandQueue]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clReleaseCommandQueue(cl_command_queue /* command_queue */) CL_API_SUFFIX__VERSION_1_0;","            clReleaseCommandQueue: [\"int\", [types.CommandQueue]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetCommandQueueInfo(cl_command_queue      /* command_queue */,","            //                      cl_command_queue_info /* param_name */,","            //                      size_t                /* param_value_size */,","            //                      void *                /* param_value */,","            //                      size_t *              /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetCommandQueueInfo: [\"int\", [types.CommandQueue, types.CommandQueueInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","            /* Memory Object APIs */","            //extern CL_API_ENTRY cl_mem CL_API_CALL","            //clCreateBuffer(cl_context   /* context */,","            //               cl_mem_flags /* flags */,","            //               size_t       /* size */,","            //               void *       /* host_ptr */,","            //               cl_int *     /* errcode_ret */) CL_API_SUFFIX__VERSION_1_0;","            clCreateBuffer: [types.Mem, [types.Context, types.MemFlags, \"size_t\", \"pointer\", ref.refType(\"int\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clRetainMemObject(cl_mem /* memobj */) CL_API_SUFFIX__VERSION_1_0;","            clRetainMemObject: [\"int\", [types.Mem]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clReleaseMemObject(cl_mem /* memobj */) CL_API_SUFFIX__VERSION_1_0;","            clReleaseMemObject: [\"int\", [types.Mem]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetSupportedImageFormats(cl_context           /* context */,","            //                           cl_mem_flags         /* flags */,","            //                           cl_mem_object_type   /* image_type */,","            //                           cl_uint              /* num_entries */,","            //                           cl_image_format *    /* image_formats */,","            //                           cl_uint *            /* num_image_formats */) CL_API_SUFFIX__VERSION_1_0;","            clGetSupportedImageFormats: [\"int\", [types.Context, types.MemFlags, types.MemObjectType, \"uint\", types.ImageFormatArray, ref.refType(\"uint\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetMemObjectInfo(cl_mem           /* memobj */,","            //                   cl_mem_info      /* param_name */,","            //                   size_t           /* param_value_size */,","            //                   void *           /* param_value */,","            //                   size_t *         /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetMemObjectInfo: [\"int\", [types.Mem, types.MemInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetImageInfo(cl_mem           /* image */,","            //               cl_image_info    /* param_name */,","            //               size_t           /* param_value_size */,","            //               void *           /* param_value */,","            //               size_t *         /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetImageInfo: [\"int\", [types.Mem, types.ImageInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","            /* Sampler APIs */","            //extern CL_API_ENTRY cl_sampler CL_API_CALL","            //clCreateSampler(cl_context          /* context */,","            //                cl_bool             /* normalized_coords */,","            //                cl_addressing_mode  /* addressing_mode */,","            //                cl_filter_mode      /* filter_mode */,","            //                cl_int *            /* errcode_ret */) CL_API_SUFFIX__VERSION_1_0;","            clCreateSampler: [types.Sampler, [types.Context, types.Bool, types.AddressingMode, types.FilterMode, ref.refType(\"int\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clRetainSampler(cl_sampler /* sampler */) CL_API_SUFFIX__VERSION_1_0;","            clRetainSampler: [\"int\", [types.Sampler]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clReleaseSampler(cl_sampler /* sampler */) CL_API_SUFFIX__VERSION_1_0;","            clReleaseSampler: [\"int\", [types.Sampler]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetSamplerInfo(cl_sampler         /* sampler */,","            //                 cl_sampler_info    /* param_name */,","            //                 size_t             /* param_value_size */,","            //                 void *             /* param_value */,","            //                 size_t *           /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetSamplerInfo: [\"int\", [types.Sampler, types.SamplerInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","            /* Program Object APIs  */","            //extern CL_API_ENTRY cl_program CL_API_CALL","            //clCreateProgramWithSource(cl_context        /* context */,","            //                          cl_uint           /* count */,","            //                          const char **     /* strings */,","            //                          const size_t *    /* lengths */,","            //                          cl_int *          /* errcode_ret */) CL_API_SUFFIX__VERSION_1_0;","            clCreateProgramWithSource: [types.Program, [types.Context, \"uint\", types.StringArray, types.SizeTArray, ref.refType(\"int\")]],","","            //extern CL_API_ENTRY cl_program CL_API_CALL","            //clCreateProgramWithBinary(cl_context                     /* context */,","            //                          cl_uint                        /* num_devices */,","            //                          const cl_device_id *           /* device_list */,","            //                          const size_t *                 /* lengths */,","            //                          const unsigned char **         /* binaries */,","            //                          cl_int *                       /* binary_status */,","            //                          cl_int *                       /* errcode_ret */) CL_API_SUFFIX__VERSION_1_0;","            clCreateProgramWithBinary: [types.Program, [types.Context, \"uint\", types.DeviceIdArray, types.SizeTArray, types.Binaries, ref.refType(\"int\"), ref.refType(\"int\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clRetainProgram(cl_program /* program */) CL_API_SUFFIX__VERSION_1_0;","            clRetainProgram: [\"int\", [types.Program]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clReleaseProgram(cl_program /* program */) CL_API_SUFFIX__VERSION_1_0;","            clReleaseProgram: [\"int\", [types.Program]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clBuildProgram(cl_program           /* program */,","            //              cl_uint              /* num_devices */,","            //              const cl_device_id * /* device_list */,","            //              const char *         /* options */,","            //              void (CL_CALLBACK *  /* pfn_notify */)(cl_program /* program */, void * /* user_data */),","            //              void *               /* user_data */) CL_API_SUFFIX__VERSION_1_0;","            clBuildProgram: [\"int\", [types.Program, \"uint\", types.DeviceIdArray, \"string\", types.BuildProgramNotify, \"pointer\"]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetProgramInfo(cl_program         /* program */,","            //                 cl_program_info    /* param_name */,","            //                 size_t             /* param_value_size */,","            //                 void *             /* param_value */,","            //                 size_t *           /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetProgramInfo: [\"int\", [types.Program, types.ProgramInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetProgramBuildInfo(cl_program            /* program */,","            //                      cl_device_id          /* device */,","            //                      cl_program_build_info /* param_name */,","            //                      size_t                /* param_value_size */,","            //                      void *                /* param_value */,","            //                      size_t *              /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetProgramBuildInfo: [\"int\", [types.Program, types.DeviceId, types.ProgramBuildInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","            /* Kernel Object APIs */","            //extern CL_API_ENTRY cl_kernel CL_API_CALL","            //clCreateKernel(cl_program      /* program */,","            //               const char *    /* kernel_name */,","            //               cl_int *        /* errcode_ret */) CL_API_SUFFIX__VERSION_1_0;","            clCreateKernel: [types.Kernel, [types.Program, \"string\", ref.refType(\"int\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clCreateKernelsInProgram(cl_program     /* program */,","            //                         cl_uint        /* num_kernels */,","            //                         cl_kernel *    /* kernels */,","            //                         cl_uint *      /* num_kernels_ret */) CL_API_SUFFIX__VERSION_1_0;","            clCreateKernelsInProgram: [\"int\", [types.Program, \"uint\", types.KernelArray, ref.refType(\"uint\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clRetainKernel(cl_kernel    /* kernel */) CL_API_SUFFIX__VERSION_1_0;","            clRetainKernel: [\"int\", [types.Kernel]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clReleaseKernel(cl_kernel   /* kernel */) CL_API_SUFFIX__VERSION_1_0;","            clReleaseKernel: [\"int\", [types.Kernel]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clSetKernelArg(cl_kernel    /* kernel */,","            //               cl_uint      /* arg_index */,","            //               size_t       /* arg_size */,","            //               const void * /* arg_value */) CL_API_SUFFIX__VERSION_1_0;","            clSetKernelArg: [\"int\", [types.Kernel, \"uint\", \"size_t\", \"pointer\"]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetKernelInfo(cl_kernel       /* kernel */,","            //                cl_kernel_info  /* param_name */,","            //                size_t          /* param_value_size */,","            //                void *          /* param_value */,","            //                size_t *        /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetKernelInfo: [\"int\", [types.Kernel, types.KernelInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetKernelWorkGroupInfo(cl_kernel                  /* kernel */,","            //                         cl_device_id               /* device */,","            //                         cl_kernel_work_group_info  /* param_name */,","            //                         size_t                     /* param_value_size */,","            //                         void *                     /* param_value */,","            //                         size_t *                   /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetKernelWorkGroupInfo: [\"int\", [types.Kernel, types.DeviceId, types.KernelWorkGroupInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","            /* Event Object APIs */","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clWaitForEvents(cl_uint             /* num_events */,","            //                const cl_event *    /* event_list */) CL_API_SUFFIX__VERSION_1_0;","            clWaitForEvents: [\"int\", [\"uint\", types.EventArray]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetEventInfo(cl_event         /* event */,","            //               cl_event_info    /* param_name */,","            //               size_t           /* param_value_size */,","            //               void *           /* param_value */,","            //               size_t *         /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            clGetEventInfo: [\"int\", [types.Event, types.EventInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clRetainEvent(cl_event /* event */) CL_API_SUFFIX__VERSION_1_0;","            clRetainEvent: [\"int\", [types.Event]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clReleaseEvent(cl_event /* event */) CL_API_SUFFIX__VERSION_1_0;","            clReleaseEvent: [\"int\", [types.Event]],","","            /* Profiling APIs */","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clGetEventProfilingInfo(cl_event            /* event */,","            //                        cl_profiling_info   /* param_name */,","            //                        size_t              /* param_value_size */,","            //                        void *              /* param_value */,","            //                        size_t *            /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_0;","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clReleaseEvent(cl_event /* event */) CL_API_SUFFIX__VERSION_1_0;","            clGetEventProfilingInfo: [\"int\", [types.Event, types.ProfilingInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","            /* Flush and Finish APIs */","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clFlush(cl_command_queue /* command_queue */) CL_API_SUFFIX__VERSION_1_0;","            clFlush: [\"int\", [types.CommandQueue]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clFinish(cl_command_queue /* command_queue */) CL_API_SUFFIX__VERSION_1_0;","            clFinish: [\"int\", [types.CommandQueue]],","","            /* Enqueued Commands APIs */","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueReadBuffer(cl_command_queue    /* command_queue */,","            //                   cl_mem              /* buffer */,","            //                    cl_bool             /* blocking_read */,","            //                    size_t              /* offset */,","            //                    size_t              /* size */,","            //                    void *              /* ptr */,","            //                    cl_uint             /* num_events_in_wait_list */,","            //                    const cl_event *    /* event_wait_list */,","            //                    cl_event *          /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueReadBuffer: [\"int\", [types.CommandQueue, types.Mem, types.Bool, \"size_t\", \"size_t\", \"pointer\", \"uint\", types.EventArray, types.EventRef]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueWriteBuffer(cl_command_queue   /* command_queue */,","            //                     cl_mem             /* buffer */,","            //                     cl_bool            /* blocking_write */,","            //                     size_t             /* offset */,","            //                     size_t             /* size */,","            //                     const void *       /* ptr */,","            //                     cl_uint            /* num_events_in_wait_list */,","            //                     const cl_event *   /* event_wait_list */,","            //                     cl_event *         /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueWriteBuffer: [\"int\", [types.CommandQueue, types.Mem, types.Bool, \"size_t\", \"size_t\", \"pointer\", \"uint\", types.EventArray, types.EventRef]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueCopyBuffer(cl_command_queue    /* command_queue */,","            //                    cl_mem              /* src_buffer */,","            //                    cl_mem              /* dst_buffer */,","            //                    size_t              /* src_offset */,","            //                    size_t              /* dst_offset */,","            //                    size_t              /* size */,","            //                    cl_uint             /* num_events_in_wait_list */,","            //                   const cl_event *    /* event_wait_list */,","            //                    cl_event *          /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueCopyBuffer: [\"int\", [types.CommandQueue, types.Mem, types.Mem, \"size_t\", \"size_t\", \"size_t\", \"uint\", types.EventArray, types.EventRef]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueReadImage(cl_command_queue     /* command_queue */,","            //                   cl_mem               /* image */,","            //                   cl_bool              /* blocking_read */,","            //                   const size_t *       /* origin[3] */,","            //                   const size_t *       /* region[3] */,","            //                   size_t               /* row_pitch */,","            //                   size_t               /* slice_pitch */,","            //                   void *               /* ptr */,","            //                   cl_uint              /* num_events_in_wait_list */,","            //                   const cl_event *     /* event_wait_list */,","            //                   cl_event *           /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueReadImage: [\"int\", [types.CommandQueue, types.Mem, types.Bool, types.SizeTArray, types.SizeTArray, \"size_t\", \"size_t\", \"pointer\", \"uint\", types.EventArray, types.EventRef]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL/","            //clEnqueueWriteImage(cl_command_queue    /* command_queue */,","            //                    cl_mem              /* image */,","            //                    cl_bool             /* blocking_write */,","            //                    const size_t *      /* origin[3] */,","            //                    const size_t *      /* region[3] */,","            //                    size_t              /* input_row_pitch */,","            //                    size_t              /* input_slice_pitch */,","            //                    const void *        /* ptr */,","            //                    cl_uint             /* num_events_in_wait_list */,","            //                   const cl_event *    /* event_wait_list */,","            //                    cl_event *          /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueWriteImage: [\"int\", [types.CommandQueue, types.Mem, types.Bool, types.SizeTArray, types.SizeTArray, \"size_t\", \"size_t\", \"pointer\", \"uint\", types.EventArray, types.EventRef]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueCopyImage(cl_command_queue     /* command_queue */,","            //                   cl_mem               /* src_image */,","            //                   cl_mem               /* dst_image */,","            //                   const size_t *       /* src_origin[3] */,","            //                   const size_t *       /* dst_origin[3] */,","            //                   const size_t *       /* region[3] */,","            //                   cl_uint              /* num_events_in_wait_list */,","            //                   const cl_event *     /* event_wait_list */,","            //                   cl_event *           /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueCopyImage: [\"int\", [types.CommandQueue, types.Mem, types.Mem, types.SizeTArray, types.SizeTArray, types.SizeTArray, \"uint\", types.EventArray, types.EventRef]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueCopyImageToBuffer(cl_command_queue /* command_queue */,","            //                           cl_mem           /* src_image */,","            //                           cl_mem           /* dst_buffer */,","            //                           const size_t *   /* src_origin[3] */,","            //                           const size_t *   /* region[3] */,","            //                           size_t           /* dst_offset */,","            //                           cl_uint          /* num_events_in_wait_list */,","            //                           const cl_event * /* event_wait_list */,","            //                           cl_event *       /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueCopyImageToBuffer: [\"int\", [types.CommandQueue, types.Mem, types.Mem, types.SizeTArray, types.SizeTArray, \"size_t\", \"uint\", types.EventArray, types.EventRef]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueCopyBufferToImage(cl_command_queue /* command_queue */,","            //                           cl_mem           /* src_buffer */,","            //                           cl_mem           /* dst_image */,","            //                           size_t           /* src_offset */,","            //                           const size_t *   /* dst_origin[3] */,","            //                           const size_t *   /* region[3] */,","            //                           cl_uint          /* num_events_in_wait_list */,","            //                           const cl_event * /* event_wait_list */,","            //                           cl_event *       /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueCopyBufferToImage: [\"int\", [types.CommandQueue, types.Mem, types.Mem, \"size_t\", types.SizeTArray, types.SizeTArray, \"uint\", types.EventArray, types.EventRef]],","","            //extern CL_API_ENTRY void * CL_API_CALL","            //clEnqueueMapBuffer(cl_command_queue /* command_queue */,","            //                   cl_mem           /* buffer */,","            //                   cl_bool          /* blocking_map */,","            //                   cl_map_flags     /* map_flags */,","            //                   size_t           /* offset */,","            //                   size_t           /* size */,","            //                   cl_uint          /* num_events_in_wait_list */,","            //                   const cl_event * /* event_wait_list */,","            //                   cl_event *       /* event */,","            //                   cl_int *         /* errcode_ret */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueMapBuffer: [\"pointer\", [types.CommandQueue, types.Mem, types.Bool, types.MapFlags, \"size_t\", \"size_t\", \"uint\", types.EventArray, types.EventRef, ref.refType(\"int\")]],","","            //extern CL_API_ENTRY void * CL_API_CALL","            //clEnqueueMapImage(cl_command_queue  /* command_queue */,","            //                  cl_mem            /* image */,","            //                  cl_bool           /* blocking_map */,","            //                  cl_map_flags      /* map_flags */,","            //                  const size_t *    /* origin[3] */,","            //                  const size_t *    /* region[3] */,","            //                  size_t *          /* image_row_pitch */,","            //                  size_t *          /* image_slice_pitch */,","            //                  cl_uint           /* num_events_in_wait_list */,","            //                  const cl_event *  /* event_wait_list */,","            //                  cl_event *        /* event */,","            //                  cl_int *          /* errcode_ret */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueMapImage: [\"pointer\", [types.CommandQueue, types.Mem, types.Bool, types.MapFlags, types.SizeTArray, types.SizeTArray, ref.refType(\"size_t\"), ref.refType(\"size_t\"), \"uint\", types.EventArray, types.EventRef, ref.refType(\"int\")]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueUnmapMemObject(cl_command_queue /* command_queue */,","            //                        cl_mem           /* memobj */,","            //                        void *           /* mapped_ptr */,","            //                        cl_uint          /* num_events_in_wait_list */,","            //                        const cl_event *  /* event_wait_list */,","            //                        cl_event *        /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueUnmapMemObject: [\"int\", [types.CommandQueue, types.Mem, \"pointer\", \"uint\", types.EventArray, types.EventRef]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueNDRangeKernel(cl_command_queue /* command_queue */,","            //                       cl_kernel        /* kernel */,","            //                       cl_uint          /* work_dim */,","            //                       const size_t *   /* global_work_offset */,","            //                       const size_t *   /* global_work_size */,","            //                       const size_t *   /* local_work_size */,","            //                       cl_uint          /* num_events_in_wait_list */,","            //                       const cl_event * /* event_wait_list */,","            //                       cl_event *       /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueNDRangeKernel: [\"int\", [types.CommandQueue, types.Kernel, \"uint\", types.SizeTArray, types.SizeTArray, types.SizeTArray, \"uint\", types.EventArray, types.EventRef]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueTask(cl_command_queue  /* command_queue */,","            //              cl_kernel         /* kernel */,","            //              cl_uint           /* num_events_in_wait_list */,","            //              const cl_event *  /* event_wait_list */,","            //              cl_event *        /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueTask: [\"int\", [types.CommandQueue, types.Kernel, \"uint\", types.EventArray, types.EventRef]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueNativeKernel(cl_command_queue  /* command_queue */,","            //\t\t\t\t\t  void (CL_CALLBACK * /*user_func*/)(void *),","            //                      void *            /* args */,","            //                      size_t            /* cb_args */,","            //                      cl_uint           /* num_mem_objects */,","            //                      const cl_mem *    /* mem_list */,","            //                      const void **     /* args_mem_loc */,","            //                      cl_uint           /* num_events_in_wait_list */,","            //                      const cl_event *  /* event_wait_list */,","            //                      cl_event *        /* event */) CL_API_SUFFIX__VERSION_1_0;","            clEnqueueNativeKernel: [\"int\", [types.CommandQueue, types.EnqueueNativeKernelUserFunc, \"pointer\", \"size_t\", \"uint\", types.MemArray, ref.refType(\"pointer\"), \"uint\", types.EventArray, types.EventRef]],","","            /*1.1*/","            //extern CL_API_ENTRY cl_mem CL_API_CALL","            //clCreateSubBuffer(cl_mem                   /* buffer */,","            //                  cl_mem_flags             /* flags */,","            //                  cl_buffer_create_type    /* buffer_create_type */,","            //                  const void *             /* buffer_create_info */,","            //                  cl_int *                 /* errcode_ret */) CL_API_SUFFIX__VERSION_1_1;","            clCreateSubBuffer: [types.Mem, [types.Mem, types.MemFlags, types.BufferCreateType, \"pointer\", types.ErrorCodeRet]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clSetMemObjectDestructorCallback(  cl_mem /* memobj */,","            //                                    void (CL_CALLBACK * /*pfn_notify*/)( cl_mem /* memobj */, void* /*user_data*/),","            //                                    void * /*user_data */ )             CL_API_SUFFIX__VERSION_1_1;","            clSetMemObjectDestructorCallback: [\"int\", [types.Mem, types.SetEventCallbackCallback, \"pointer\"]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clSetUserEventStatus(cl_event   /* event */,","            //                    cl_int     /* execution_status */) CL_API_SUFFIX__VERSION_1_1;","            clSetUserEventStatus: [\"int\", [types.Event, \"int\"]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clSetEventCallback( cl_event    /* event */,","            //                    cl_int      /* command_exec_callback_type */,","            //                    void (CL_CALLBACK * /* pfn_notify */)(cl_event, cl_int, void *),","            //                    void *      /* user_data */) CL_API_SUFFIX__VERSION_1_1;","            clSetEventCallback: [\"int\", [types.Event, \"int\", types.SetEventCallbackCallback, \"pointer\"]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueReadBufferRect(cl_command_queue    /* command_queue */,","            //                        cl_mem              /* buffer */,","            //                        cl_bool             /* blocking_read */,","            //                        const size_t *      /* buffer_offset */,","            //                        const size_t *      /* host_offset */,","            //                        const size_t *      /* region */,","            //                        size_t              /* buffer_row_pitch */,","            //                        size_t              /* buffer_slice_pitch */,","            //                        size_t              /* host_row_pitch */,","            //                        size_t              /* host_slice_pitch */,","            //                        void *              /* ptr */,","            //                        cl_uint             /* num_events_in_wait_list */,","            //                        const cl_event *    /* event_wait_list */,","            //                        cl_event *          /* event */) CL_API_SUFFIX__VERSION_1_1;","            clEnqueueReadBufferRect: [","                \"int\",","                [","                    types.CommandQueue,","                    types.Mem,","                    types.Bool,","                    ref.refType(\"size_t\"),","                    ref.refType(\"size_t\"),","                    ref.refType(\"size_t\"),","                    \"size_t\",","                    \"size_t\",","                    \"size_t\",","                    \"size_t\",","                    \"pointer\",","                    \"uint\",","                    types.EventArray,","                    types.EventRef","                ]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueWriteBufferRect(cl_command_queue    /* command_queue */,","            //                         cl_mem              /* buffer */,","            //                         cl_bool             /* blocking_write */,","            //                         const size_t *      /* buffer_offset */,","            //                         const size_t *      /* host_offset */,","            //                         const size_t *      /* region */,","            //                         size_t              /* buffer_row_pitch */,","            //                         size_t              /* buffer_slice_pitch */,","            //                         size_t              /* host_row_pitch */,","            //                         size_t              /* host_slice_pitch */,","            //                         const void *        /* ptr */,","            //                         cl_uint             /* num_events_in_wait_list */,","            //                         const cl_event *    /* event_wait_list */,","            //                         cl_event *          /* event */) CL_API_SUFFIX__VERSION_1_1;","            clEnqueueWriteBufferRect: [","                \"int\",","                [","                    types.CommandQueue,","                    types.Mem,","                    types.Bool,","                    ref.refType(\"size_t\"),","                    ref.refType(\"size_t\"),","                    ref.refType(\"size_t\"),","                    \"size_t\",","                    \"size_t\",","                    \"size_t\",","                    \"size_t\",","                    \"pointer\",","                    \"uint\",","                    types.EventArray,","                    types.EventRef","                ]],","","            //extern CL_API_ENTRY cl_int CL_API_CALL","            //clEnqueueCopyBufferRect(cl_command_queue    /* command_queue */,","            //                        cl_mem              /* src_buffer */,","            //                        cl_mem              /* dst_buffer */,","            //                        const size_t *      /* src_origin */,","            //                        const size_t *      /* dst_origin */,","            //                        const size_t *      /* region */,","            //                        size_t              /* src_row_pitch */,","            //                        size_t              /* src_slice_pitch */,","            //                        size_t              /* dst_row_pitch */,","            //                        size_t              /* dst_slice_pitch */,","            //                        cl_uint             /* num_events_in_wait_list */,","            //                        const cl_event *    /* event_wait_list */,","            //                        cl_event *          /* event */) CL_API_SUFFIX__VERSION_1_1;","            clEnqueueCopyBufferRect: [","                \"int\",","                [","                    types.CommandQueue,","                    types.Mem,","                    types.Mem,","                    types.Bool,","                    ref.refType(\"size_t\"),","                    ref.refType(\"size_t\"),","                    ref.refType(\"size_t\"),","                    \"size_t\",","                    \"size_t\",","                    \"size_t\",","                    \"size_t\",","                    \"uint\",","                    types.EventArray,","                    types.EventRef","                ]],","","            //extern CL_API_ENTRY cl_event CL_API_CALL","            //clCreateUserEvent(cl_context    /* context */,","            //                 cl_int *      /* errcode_ret */) CL_API_SUFFIX__VERSION_1_1;","            clCreateUserEvent: [types.Event, [types.Context, ref.refType(\"int\")]],","","            /*","             cl_int clGetGLObjectInfo (\tcl_mem memobj,","                 cl_gl_object_type *gl_object_type,","                 GLuint *gl_object_name)","             */","            clGetGLObjectInfo: [\"int\", [ref.refType(\"uint\"), ref.refType(\"uint\")]],","","            /*","            cl_int clEnqueueWaitForEvents (","                cl_command_queue command_queue,","                cl_uint num_events,","                const cl_event *event_list)","            */","            clEnqueueWaitForEvents: [\"int\", [types.CommandQueue, \"uint\", types.EventArray]],","","            /*","             cl_int clEnqueueMarker (","                cl_command_queue command_queue,","                cl_event *event)","             */","            clEnqueueMarker: [\"int\", [types.CommandQueue, types.EventRef]],","","            /*","             cl_int clEnqueueBarrier (","             cl_command_queue command_queue,","             cl_event *event)","             */","            clEnqueueBarrier: [\"int\", [types.CommandQueue, types.EventRef]],","","            /*","             cl_mem clCreateImage2D (","                 cl_context context,","                 cl_mem_flags flags,","                 const cl_image_format *image_format,","                 size_t image_width,","                 size_t image_height,","                 size_t image_row_pitch,","                 void *host_ptr,","                 cl_int *errcode_ret)","             */","            clCreateImage2D: [types.Mem,","                [","                    types.Context,","                    types.MemFlags,","                    types.ImageFormatRef,","                    \"size_t\",","                    \"size_t\",","                    \"size_t\",","                    \"pointer\",","                    types.ErrorCodeRet","                ]","            ],","","            /*","             cl_mem clCreateImage3D (","                 cl_context context,","                 cl_mem_flags flags,","                 const cl_image_format *image_format,","                 size_t image_width,","                 size_t image_height,","                 size_t image_depth,","                 size_t image_row_pitch,","                 size_t image_slice_pitch,","                 void *host_ptr,","                 cl_int *errcode_ret)","             */","            clCreateImage3D: [types.Mem,","                [","                    types.Context,","                    types.MemFlags,","                    types.ImageFormatRef,","                    \"size_t\",","                    \"size_t\",","                    \"size_t\",","                    \"size_t\",","                    \"size_t\",","                    \"pointer\",","                    types.ErrorCodeRet","                ]","            ]","        });","}","","CL11.types = types;","","CL11.defs = defs;","","CL11.prototype.checkError = function (err) {","    if (err) {","        if (_.isFunction(err.deref)) {","            err = err.deref();","        }","        if (err < 0) {","            throw new CLError(err);","        }","    }","};","","module.exports = CL11;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"703":1,"705":1,"707":1,"708":0,"709":0,"710":0,"712":0,"713":0,"718":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/types.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/types.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":35}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":23}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":23}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"6":{"start":{"line":23,"column":0},"end":{"line":26,"column":3}},"7":{"start":{"line":28,"column":0},"end":{"line":43,"column":3}},"8":{"start":{"line":45,"column":0},"end":{"line":48,"column":3}},"9":{"start":{"line":50,"column":0},"end":{"line":125,"column":2}},"10":{"start":{"line":127,"column":0},"end":{"line":127,"column":23}}},"branchMap":{},"code":["/*"," License: [MIT](../LICENSE)",""," Copyright (c) 2014 Gábor Mező aka [unbornchikken](https://github.com/unbornchikken)"," */","","/*"," # types object",""," Required ref types for communicating with the OpenCL C API.",""," **base:** Object"," */","","\"use strict\";","","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var ffi = fastcall.ffi;","var StructType = fastcall.StructType;","var ArrayType = fastcall.ArrayType;","","var ImageFormat = new StructType({","    imageChannelOrder: \"uint\",","    imageChannelDataType: \"uint\"","});","","var ImageDesc = new StructType({","    // _imageType_","    // - CL_MEM_OBJECT_BUFFER","    // - CL_MEM_OBJECT_IMAGE2D","    // - CL_MEM_OBJECT_IMAGE3D","    imageType: \"uint\",","    imageWidth: \"size_t\",","    imageHeight: \"size_t\",","    imageDepth: \"size_t\",","    imageArraySize: \"size_t\",","    imageRowPitch: \"size_t\",","    imageSlicePitch: \"size_t\",","    numMipLevels: \"uint\",","    numSamples: \"uint\",","    buffer: ref.refType(\"void\")","});","","var BufferRegion = new StructType({","    origin: \"size_t\",","    size: \"size_t\"","});","","var types = {","    ImageFormat: ImageFormat,","    ImageFormatArray: new ArrayType(ImageFormat),","    ImageFormatRef: ref.refType(ImageFormat),","    ImageDesc: ImageDesc,","    ImageDescRef: ref.refType(ImageDesc),","    BufferRegion: BufferRegion,","    Bool: ref.types.uint,","    SizeTArray: new ArrayType(\"size_t\"),","    StringArray: new ArrayType(\"string\"),","    ErrorCode: ref.types.int,","    ErrorCodeRet: ref.refType(\"int\"),","    Bitfield: ref.types.uint64,","    DeviceType: ref.types.uint64,","    PlatformInfo: ref.types.uint,","    DeviceInfo: ref.types.uint,","    DeviceFpConfig: ref.types.uint64,","    DeviceMemCacheType: ref.types.uint,","    DeviceLocalMemType: ref.types.uint,","    DeviceExecCapabilities: ref.types.uint64,","    CommandQueueProperties: ref.types.uint64,","    DevicePartitionProperties: new ArrayType(\"int\"),","    DeviceAffinityDomain: ref.types.uint64,","    ContextProperties: new ArrayType(\"size_t\"),","    ContextInfo: ref.types.uint,","    CommandQueueInfo: ref.types.uint,","    ChannelOrder: ref.types.uint,","    ChannelType: ref.types.uint,","    MemFlags: ref.types.uint64,","    MemObjectType: ref.types.uint,","    MemInfo: ref.types.uint,","    MemMigrationFlags: ref.types.uint64,","    ImageInfo: ref.types.uint,","    BufferCreateType: ref.types.uint,","    AddressingMode: ref.types.uint,","    FilterMode: ref.types.uint,","    SamplerInfo: ref.types.uint,","    MapFlags: ref.types.uint64,","    ProgramInfo: ref.types.uint,","    ProgramBuildInfo: ref.types.uint,","    ProgramBinaryType: ref.types.uint,","    BuildStatus: ref.types.int,","    KernelInfo: ref.types.uint,","    KernelArgInfo: ref.types.uint,","    KernelArgAddressQualifier: ref.types.uint,","    KernelArgAccessQualifier: ref.types.uint,","    KernelArgTypeQualifier: ref.types.uint64,","    KernelWorkGroupInfo: ref.types.uint,","    EventInfo: ref.types.uint,","    CommandType: ref.types.uint,","    CommandExecutionStatus: ref.types.uint,","    ProfilingInfo: ref.types.uint,","    Mem: ref.refType(\"void\"),","    MemArray: new ArrayType(ref.refType(\"void\")),","    PlatformId: ref.refType(\"void\"),","    PlatformIdArray: new ArrayType(ref.refType(\"void\")),","    DeviceId: ref.refType(\"void\"),","    DeviceIdArray: new ArrayType(ref.refType(\"void\")),","    CommandQueue: ref.refType(\"void\"),","    Context: ref.refType(\"void\"),","    Sampler: ref.refType(\"void\"),","    Program: ref.refType(\"void\"),","    ProgramArray: new ArrayType(ref.refType(\"void\")),","    Kernel: ref.refType(\"void\"),","    KernelArray: new ArrayType(ref.refType(\"void\")),","    Event: ref.refType(\"void\"),","    EventRef: ref.refType(ref.refType(\"void\")),","    EventArray: new ArrayType(ref.refType(\"void\")),","    Binary: new ArrayType(\"byte\"),","    Binaries: new ArrayType(ref.refType(\"void\")),","    CreateContextNotify: ffi.Function(\"void\", [ \"pointer\", \"pointer\" ]),","    BuildProgramNotify: ffi.Function(\"void\", [ \"pointer\", \"pointer\" ]),","    EnqueueNativeKernelUserFunc: ffi.Function(\"void\", [ \"pointer\" ]),","    SetEventCallbackCallback: ffi.Function(\"void\", [ \"pointer\", \"int\", \"pointer\" ]),","    MemObjectDestructorCallback: ffi.Function(\"void\", [ \"pointer\", \"pointer\" ])","};","","module.exports = types;",""],"l":{"17":1,"18":1,"19":1,"20":1,"21":1,"23":1,"28":1,"45":1,"50":1,"127":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clDefines.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clDefines.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":442,"column":2}},"2":{"start":{"line":444,"column":0},"end":{"line":444,"column":27}}},"branchMap":{},"code":["/*","License: [MIT](../LICENSE)","","Copyright (c) 2014 Gábor Mező aka [unbornchikken](https://github.com/unbornchikken)","*/","","/*","# clDefines object","","Defined constants of the OpenCL SDK.","","**base:** Object","*/","","\"use strict\";","","var clDefines = {","    /* ###Errors */","    CL_SUCCESS: 0,","    CL_DEVICE_NOT_FOUND: -1,","    CL_DEVICE_NOT_AVAILABLE: -2,","    CL_COMPILER_NOT_AVAILABLE: -3,","    CL_MEM_OBJECT_ALLOCATION_FAILURE: -4,","    CL_OUT_OF_RESOURCES: -5,","    CL_OUT_OF_HOST_MEMORY: -6,","    CL_PROFILING_INFO_NOT_AVAILABLE: -7,","    CL_MEM_COPY_OVERLAP: -8,","    CL_IMAGE_FORMAT_MISMATCH: -9,","    CL_IMAGE_FORMAT_NOT_SUPPORTED: -10,","    CL_BUILD_PROGRAM_FAILURE: -11,","    CL_MAP_FAILURE: -12,","    CL_MISALIGNED_SUB_BUFFER_OFFSET: -13,","    CL_EXEC_STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST: -14,","    CL_COMPILE_PROGRAM_FAILURE: -15,","    CL_LINKER_NOT_AVAILABLE: -16,","    CL_LINK_PROGRAM_FAILURE: -17,","    CL_DEVICE_PARTITION_FAILED: -18,","    CL_KERNEL_ARG_INFO_NOT_AVAILABLE: -19,","    CL_INVALID_VALUE: -30,","    CL_INVALID_DEVICE_TYPE: -31,","    CL_INVALID_PLATFORM: -32,","    CL_INVALID_DEVICE: -33,","    CL_INVALID_CONTEXT: -34,","    CL_INVALID_QUEUE_PROPERTIES: -35,","    CL_INVALID_COMMAND_QUEUE: -36,","    CL_INVALID_HOST_PTR: -37,","    CL_INVALID_MEM_OBJECT: -38,","    CL_INVALID_IMAGE_FORMAT_DESCRIPTOR: -39,","    CL_INVALID_IMAGE_SIZE: -40,","    CL_INVALID_SAMPLER: -41,","    CL_INVALID_BINARY: -42,","    CL_INVALID_BUILD_OPTIONS: -43,","    CL_INVALID_PROGRAM: -44,","    CL_INVALID_PROGRAM_EXECUTABLE: -45,","    CL_INVALID_KERNEL_NAME: -46,","    CL_INVALID_KERNEL_DEFINITION: -47,","    CL_INVALID_KERNEL: -48,","    CL_INVALID_ARG_INDEX: -49,","    CL_INVALID_ARG_VALUE: -50,","    CL_INVALID_ARG_SIZE: -51,","    CL_INVALID_KERNEL_ARGS: -52,","    CL_INVALID_WORK_DIMENSION: -53,","    CL_INVALID_WORK_GROUP_SIZE: -54,","    CL_INVALID_WORK_ITEM_SIZE: -55,","    CL_INVALID_GLOBAL_OFFSET: -56,","    CL_INVALID_EVENT_WAIT_LIST: -57,","    CL_INVALID_EVENT: -58,","    CL_INVALID_OPERATION: -59,","    CL_INVALID_GL_OBJECT: -60,","    CL_INVALID_BUFFER_SIZE: -61,","    CL_INVALID_MIP_LEVEL: -62,","    CL_INVALID_GLOBAL_WORK_SIZE: -63,","    CL_INVALID_PROPERTY: -64,","    CL_INVALID_IMAGE_DESCRIPTOR: -65,","    CL_INVALID_COMPILER_OPTIONS: -66,","    CL_INVALID_LINKER_OPTIONS: -67,","    CL_INVALID_DEVICE_PARTITION_COUNT: -68,","    /* ###OpenCL Version */","    CL_VERSION_1_0: 1,","    CL_VERSION_1_1: 1,","    CL_VERSION_1_2: 1,","    /* ###cl_bool */","    CL_FALSE: 0,","    CL_TRUE: 1,","    CL_BLOCKING: 1,","    CL_NON_BLOCKING: 0,","    /* ###cl_platform_info */","    CL_PLATFORM_PROFILE: 0x0900,","    CL_PLATFORM_VERSION: 0x0901,","    CL_PLATFORM_NAME: 0x0902,","    CL_PLATFORM_VENDOR: 0x0903,","    CL_PLATFORM_EXTENSIONS: 0x0904,","    /* ### cl_device_type - Bitfield */","    CL_DEVICE_TYPE_DEFAULT: (1 << 0),","    CL_DEVICE_TYPE_CPU: (1 << 1),","    CL_DEVICE_TYPE_GPU: (1 << 2),","    CL_DEVICE_TYPE_ACCELERATOR: (1 << 3),","    CL_DEVICE_TYPE_CUSTOM: (1 << 4),","    CL_DEVICE_TYPE_ALL: 0xFFFFFFFF,","    /* ### cl_device_info */","    CL_DEVICE_TYPE: 0x1000,","    CL_DEVICE_VENDOR_ID: 0x1001,","    CL_DEVICE_MAX_COMPUTE_UNITS: 0x1002,","    CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS: 0x1003,","    CL_DEVICE_MAX_WORK_GROUP_SIZE: 0x1004,","    CL_DEVICE_MAX_WORK_ITEM_SIZES: 0x1005,","    CL_DEVICE_PREFERRED_VECTOR_WIDTH_CHAR: 0x1006,","    CL_DEVICE_PREFERRED_VECTOR_WIDTH_SHORT: 0x1007,","    CL_DEVICE_PREFERRED_VECTOR_WIDTH_INT: 0x1008,","    CL_DEVICE_PREFERRED_VECTOR_WIDTH_LONG: 0x1009,","    CL_DEVICE_PREFERRED_VECTOR_WIDTH_FLOAT: 0x100A,","    CL_DEVICE_PREFERRED_VECTOR_WIDTH_DOUBLE: 0x100B,","    CL_DEVICE_MAX_CLOCK_FREQUENCY: 0x100C,","    CL_DEVICE_ADDRESS_BITS: 0x100D,","    CL_DEVICE_MAX_READ_IMAGE_ARGS: 0x100E,","    CL_DEVICE_MAX_WRITE_IMAGE_ARGS: 0x100F,","    CL_DEVICE_MAX_MEM_ALLOC_SIZE: 0x1010,","    CL_DEVICE_IMAGE2D_MAX_WIDTH: 0x1011,","    CL_DEVICE_IMAGE2D_MAX_HEIGHT: 0x1012,","    CL_DEVICE_IMAGE3D_MAX_WIDTH: 0x1013,","    CL_DEVICE_IMAGE3D_MAX_HEIGHT: 0x1014,","    CL_DEVICE_IMAGE3D_MAX_DEPTH: 0x1015,","    CL_DEVICE_IMAGE_SUPPORT: 0x1016,","    CL_DEVICE_MAX_PARAMETER_SIZE: 0x1017,","    CL_DEVICE_MAX_SAMPLERS: 0x1018,","    CL_DEVICE_MEM_BASE_ADDR_ALIGN: 0x1019,","    CL_DEVICE_MIN_DATA_TYPE_ALIGN_SIZE: 0x101A,","    CL_DEVICE_SINGLE_FP_CONFIG: 0x101B,","    CL_DEVICE_GLOBAL_MEM_CACHE_TYPE: 0x101C,","    CL_DEVICE_GLOBAL_MEM_CACHELINE_SIZE: 0x101D,","    CL_DEVICE_GLOBAL_MEM_CACHE_SIZE: 0x101E,","    CL_DEVICE_GLOBAL_MEM_SIZE: 0x101F,","    CL_DEVICE_MAX_CONSTANT_BUFFER_SIZE: 0x1020,","    CL_DEVICE_MAX_CONSTANT_ARGS: 0x1021,","    CL_DEVICE_LOCAL_MEM_TYPE: 0x1022,","    CL_DEVICE_LOCAL_MEM_SIZE: 0x1023,","    CL_DEVICE_ERROR_CORRECTION_SUPPORT: 0x1024,","    CL_DEVICE_PROFILING_TIMER_RESOLUTION: 0x1025,","    CL_DEVICE_ENDIAN_LITTLE: 0x1026,","    CL_DEVICE_AVAILABLE: 0x1027,","    CL_DEVICE_COMPILER_AVAILABLE: 0x1028,","    CL_DEVICE_EXECUTION_CAPABILITIES: 0x1029,","    CL_DEVICE_QUEUE_PROPERTIES: 0x102A,","    CL_DEVICE_NAME: 0x102B,","    CL_DEVICE_VENDOR: 0x102C,","    CL_DRIVER_VERSION: 0x102D,","    CL_DEVICE_PROFILE: 0x102E,","    CL_DEVICE_VERSION: 0x102F,","    CL_DEVICE_EXTENSIONS: 0x1030,","    CL_DEVICE_PLATFORM: 0x1031,","    CL_DEVICE_DOUBLE_FP_CONFIG: 0x1032,","    /* 0x1033 reserved for CL_DEVICE_HALF_FP_CONFIG */","    CL_DEVICE_PREFERRED_VECTOR_WIDTH_HALF: 0x1034,","    CL_DEVICE_HOST_UNIFIED_MEMORY: 0x1035,","    CL_DEVICE_NATIVE_VECTOR_WIDTH_CHAR: 0x1036,","    CL_DEVICE_NATIVE_VECTOR_WIDTH_SHORT: 0x1037,","    CL_DEVICE_NATIVE_VECTOR_WIDTH_INT: 0x1038,","    CL_DEVICE_NATIVE_VECTOR_WIDTH_LONG: 0x1039,","    CL_DEVICE_NATIVE_VECTOR_WIDTH_FLOAT: 0x103A,","    CL_DEVICE_NATIVE_VECTOR_WIDTH_DOUBLE: 0x103B,","    CL_DEVICE_NATIVE_VECTOR_WIDTH_HALF: 0x103C,","    CL_DEVICE_OPENCL_C_VERSION: 0x103D,","    CL_DEVICE_LINKER_AVAILABLE: 0x103E,","    CL_DEVICE_BUILT_IN_KERNELS: 0x103F,","    CL_DEVICE_IMAGE_MAX_BUFFER_SIZE: 0x1040,","    CL_DEVICE_IMAGE_MAX_ARRAY_SIZE: 0x1041,","    CL_DEVICE_PARENT_DEVICE: 0x1042,","    CL_DEVICE_PARTITION_MAX_SUB_DEVICES: 0x1043,","    CL_DEVICE_PARTITION_PROPERTIES: 0x1044,","    CL_DEVICE_PARTITION_AFFINITY_DOMAIN: 0x1045,","    CL_DEVICE_PARTITION_TYPE: 0x1046,","    CL_DEVICE_REFERENCE_COUNT: 0x1047,","    CL_DEVICE_PREFERRED_INTEROP_USER_SYNC: 0x1048,","    CL_DEVICE_PRINTF_BUFFER_SIZE: 0x1049,","    CL_DEVICE_IMAGE_PITCH_ALIGNMENT: 0x104A,","    CL_DEVICE_IMAGE_BASE_ADDRESS_ALIGNMENT: 0x104B,","    /* ### cl_device_fp_config - Bitfield */","    CL_FP_DENORM: (1 << 0),","    CL_FP_INF_NAN: (1 << 1),","    CL_FP_ROUND_TO_NEAREST: (1 << 2),","    CL_FP_ROUND_TO_ZERO: (1 << 3),","    CL_FP_ROUND_TO_INF: (1 << 4),","    CL_FP_FMA: (1 << 5),","    CL_FP_SOFT_FLOAT: (1 << 6),","    CL_FP_CORRECTLY_ROUNDED_DIVIDE_SQRT: (1 << 7),","    /* ### cl_device_mem_cache_type */","    CL_NONE: 0x0,","    CL_READ_ONLY_CACHE: 0x1,","    CL_READ_WRITE_CACHE: 0x2,","    /* ### cl_device_local_mem_type */","    CL_LOCAL: 0x1,","    CL_GLOBAL: 0x2,","    /* ### cl_device_exec_capabilities - Bitfield */","    CL_EXEC_KERNEL: (1 << 0),","    CL_EXEC_NATIVE_KERNEL: (1 << 1),","    /* ### cl_command_queue_properties - Bitfield */","    CL_QUEUE_OUT_OF_ORDER_EXEC_MODE_ENABLE: (1 << 0),","    CL_QUEUE_PROFILING_ENABLE: (1 << 1),","    /* ### cl_context_info  */","    CL_CONTEXT_REFERENCE_COUNT: 0x1080,","    CL_CONTEXT_DEVICES: 0x1081,","    CL_CONTEXT_PROPERTIES: 0x1082,","    CL_CONTEXT_NUM_DEVICES: 0x1083,","    /* ### cl_context_properties */","    CL_CONTEXT_PLATFORM: 0x1084,","    CL_CONTEXT_INTEROP_USER_SYNC: 0x1085,","    /* ### cl_device_partition_property */","    CL_DEVICE_PARTITION_EQUALLY: 0x1086,","    CL_DEVICE_PARTITION_BY_COUNTS: 0x1087,","    CL_DEVICE_PARTITION_BY_COUNTS_LIST_END: 0x0,","    CL_DEVICE_PARTITION_BY_AFFINITY_DOMAIN: 0x1088,","    /* ### cl_device_affinity_domain */","    CL_DEVICE_AFFINITY_DOMAIN_NUMA: (1 << 0),","    CL_DEVICE_AFFINITY_DOMAIN_L4_CACHE: (1 << 1),","    CL_DEVICE_AFFINITY_DOMAIN_L3_CACHE: (1 << 2),","    CL_DEVICE_AFFINITY_DOMAIN_L2_CACHE: (1 << 3),","    CL_DEVICE_AFFINITY_DOMAIN_L1_CACHE: (1 << 4),","    CL_DEVICE_AFFINITY_DOMAIN_NEXT_PARTITIONABLE: (1 << 5),","    /* ### cl_command_queue_info */","    CL_QUEUE_CONTEXT: 0x1090,","    CL_QUEUE_DEVICE: 0x1091,","    CL_QUEUE_REFERENCE_COUNT: 0x1092,","    CL_QUEUE_PROPERTIES: 0x1093,","    /* ### cl_mem_flags - Bitfield */","    CL_MEM_READ_WRITE: (1 << 0),","    CL_MEM_WRITE_ONLY: (1 << 1),","    CL_MEM_READ_ONLY: (1 << 2),","    CL_MEM_USE_HOST_PTR: (1 << 3),","    CL_MEM_ALLOC_HOST_PTR: (1 << 4),","    CL_MEM_COPY_HOST_PTR: (1 << 5),","    CL_MEM_HOST_WRITE_ONLY: (1 << 7),","    CL_MEM_HOST_READ_ONLY: (1 << 8),","    CL_MEM_HOST_NO_ACCESS: (1 << 9),","    /* ### cl_mem_migration_flags - Bitfield */","    CL_MIGRATE_MEM_OBJECT_HOST: (1 << 0),","    CL_MIGRATE_MEM_OBJECT_CONTENT_UNDEFINED: (1 << 1),","    /* ### cl_channel_order */","    CL_R: 0x10B0,","    CL_A: 0x10B1,","    CL_RG: 0x10B2,","    CL_RA: 0x10B3,","    CL_RGB: 0x10B4,","    CL_RGBA: 0x10B5,","    CL_BGRA: 0x10B6,","    CL_ARGB: 0x10B7,","    CL_INTENSITY: 0x10B8,","    CL_LUMINANCE: 0x10B9,","    CL_Rx: 0x10BA,","    CL_RGx: 0x10BB,","    CL_RGBx: 0x10BC,","    CL_DEPTH: 0x10BD,","    CL_DEPTH_STENCIL: 0x10BE,","    /* ### cl_channel_type */","    CL_SNORM_INT8: 0x10D0,","    CL_SNORM_INT16: 0x10D1,","    CL_UNORM_INT8: 0x10D2,","    CL_UNORM_INT16: 0x10D3,","    CL_UNORM_SHORT_565: 0x10D4,","    CL_UNORM_SHORT_555: 0x10D5,","    CL_UNORM_INT_101010: 0x10D6,","    CL_SIGNED_INT8: 0x10D7,","    CL_SIGNED_INT16: 0x10D8,","    CL_SIGNED_INT32: 0x10D9,","    CL_UNSIGNED_INT8: 0x10DA,","    CL_UNSIGNED_INT16: 0x10DB,","    CL_UNSIGNED_INT32: 0x10DC,","    CL_HALF_FLOAT: 0x10DD,","    CL_FLOAT: 0x10DE,","    CL_UNORM_INT24: 0x10DF,","    /* ### cl_mem_object_type */","    CL_MEM_OBJECT_BUFFER: 0x10F0,","    CL_MEM_OBJECT_IMAGE2D: 0x10F1,","    CL_MEM_OBJECT_IMAGE3D: 0x10F2,","    CL_MEM_OBJECT_IMAGE2D_ARRAY: 0x10F3,","    CL_MEM_OBJECT_IMAGE1D: 0x10F4,","    CL_MEM_OBJECT_IMAGE1D_ARRAY: 0x10F5,","    CL_MEM_OBJECT_IMAGE1D_BUFFER: 0x10F6,","    /* ### cl_mem_info */","    CL_MEM_TYPE: 0x1100,","    CL_MEM_FLAGS: 0x1101,","    CL_MEM_SIZE: 0x1102,","    CL_MEM_HOST_PTR: 0x1103,","    CL_MEM_MAP_COUNT: 0x1104,","    CL_MEM_REFERENCE_COUNT: 0x1105,","    CL_MEM_CONTEXT: 0x1106,","    CL_MEM_ASSOCIATED_MEMOBJECT: 0x1107,","    CL_MEM_OFFSET: 0x1108,","    /* ### cl_image_info */","    CL_IMAGE_FORMAT: 0x1110,","    CL_IMAGE_ELEMENT_SIZE: 0x1111,","    CL_IMAGE_ROW_PITCH: 0x1112,","    CL_IMAGE_SLICE_PITCH: 0x1113,","    CL_IMAGE_WIDTH: 0x1114,","    CL_IMAGE_HEIGHT: 0x1115,","    CL_IMAGE_DEPTH: 0x1116,","    CL_IMAGE_ARRAY_SIZE: 0x1117,","    CL_IMAGE_BUFFER: 0x1118,","    CL_IMAGE_NUM_MIP_LEVELS: 0x1119,","    CL_IMAGE_NUM_SAMPLES: 0x111A,","    /* ### cl_addressing_mode */","    CL_ADDRESS_NONE: 0x1130,","    CL_ADDRESS_CLAMP_TO_EDGE: 0x1131,","    CL_ADDRESS_CLAMP: 0x1132,","    CL_ADDRESS_REPEAT: 0x1133,","    CL_ADDRESS_MIRRORED_REPEAT: 0x1134,","    /* ### cl_filter_mode */","    CL_FILTER_NEAREST: 0x1140,","    CL_FILTER_LINEAR: 0x1141,","    /* ### cl_sampler_info */","    CL_SAMPLER_REFERENCE_COUNT: 0x1150,","    CL_SAMPLER_CONTEXT: 0x1151,","    CL_SAMPLER_NORMALIZED_COORDS: 0x1152,","    CL_SAMPLER_ADDRESSING_MODE: 0x1153,","    CL_SAMPLER_FILTER_MODE: 0x1154,","    /* ### cl_map_flags - Bitfield */","    CL_MAP_READ: (1 << 0),","    CL_MAP_WRITE: (1 << 1),","    CL_MAP_WRITE_INVALIDATE_REGION: (1 << 2),","    /* ### cl_program_info */","    CL_PROGRAM_REFERENCE_COUNT: 0x1160,","    CL_PROGRAM_CONTEXT: 0x1161,","    CL_PROGRAM_NUM_DEVICES: 0x1162,","    CL_PROGRAM_DEVICES: 0x1163,","    CL_PROGRAM_SOURCE: 0x1164,","    CL_PROGRAM_BINARY_SIZES: 0x1165,","    CL_PROGRAM_BINARIES: 0x1166,","    CL_PROGRAM_NUM_KERNELS: 0x1167,","    CL_PROGRAM_KERNEL_NAMES: 0x1168,","    /* ### cl_program_build_info */","    CL_PROGRAM_BUILD_STATUS: 0x1181,","    CL_PROGRAM_BUILD_OPTIONS: 0x1182,","    CL_PROGRAM_BUILD_LOG: 0x1183,","    CL_PROGRAM_BINARY_TYPE: 0x1184,","    /* ### cl_program_binary_type */","    CL_PROGRAM_BINARY_TYPE_NONE: 0x0,","    CL_PROGRAM_BINARY_TYPE_COMPILED_OBJECT: 0x1,","    CL_PROGRAM_BINARY_TYPE_LIBRARY: 0x2,","    CL_PROGRAM_BINARY_TYPE_EXECUTABLE: 0x4,","    /* ### cl_build_status */","    CL_BUILD_SUCCESS: 0,","    CL_BUILD_NONE: -1,","    CL_BUILD_ERROR: -2,","    CL_BUILD_IN_PROGRESS: -3,","    /* ### cl_kernel_info */","    CL_KERNEL_FUNCTION_NAME: 0x1190,","    CL_KERNEL_NUM_ARGS: 0x1191,","    CL_KERNEL_REFERENCE_COUNT: 0x1192,","    CL_KERNEL_CONTEXT: 0x1193,","    CL_KERNEL_PROGRAM: 0x1194,","    CL_KERNEL_ATTRIBUTES: 0x1195,","    /* ### cl_kernel_arg_info */","    CL_KERNEL_ARG_ADDRESS_QUALIFIER: 0x1196,","    CL_KERNEL_ARG_ACCESS_QUALIFIER: 0x1197,","    CL_KERNEL_ARG_TYPE_NAME: 0x1198,","    CL_KERNEL_ARG_TYPE_QUALIFIER: 0x1199,","    CL_KERNEL_ARG_NAME: 0x119A,","    /* ### cl_kernel_arg_address_qualifier */","    CL_KERNEL_ARG_ADDRESS_GLOBAL: 0x119B,","    CL_KERNEL_ARG_ADDRESS_LOCAL: 0x119C,","    CL_KERNEL_ARG_ADDRESS_CONSTANT: 0x119D,","    CL_KERNEL_ARG_ADDRESS_PRIVATE: 0x119E,","    /* ### cl_kernel_arg_access_qualifier */","    CL_KERNEL_ARG_ACCESS_READ_ONLY: 0x11A0,","    CL_KERNEL_ARG_ACCESS_WRITE_ONLY: 0x11A1,","    CL_KERNEL_ARG_ACCESS_READ_WRITE: 0x11A2,","    CL_KERNEL_ARG_ACCESS_NONE: 0x11A3,","    /* ### cl_kernel_arg_type_qualifer */","    CL_KERNEL_ARG_TYPE_NONE: 0,","    CL_KERNEL_ARG_TYPE_CONST: (1 << 0),","    CL_KERNEL_ARG_TYPE_RESTRICT: (1 << 1),","    CL_KERNEL_ARG_TYPE_VOLATILE: (1 << 2),","    /* ### cl_kernel_work_group_info */","    CL_KERNEL_WORK_GROUP_SIZE: 0x11B0,","    CL_KERNEL_COMPILE_WORK_GROUP_SIZE: 0x11B1,","    CL_KERNEL_LOCAL_MEM_SIZE: 0x11B2,","    CL_KERNEL_PREFERRED_WORK_GROUP_SIZE_MULTIPLE: 0x11B3,","    CL_KERNEL_PRIVATE_MEM_SIZE: 0x11B4,","    CL_KERNEL_GLOBAL_WORK_SIZE: 0x11B5,","    /* ### cl_event_info  */","    CL_EVENT_COMMAND_QUEUE: 0x11D0,","    CL_EVENT_COMMAND_TYPE: 0x11D1,","    CL_EVENT_REFERENCE_COUNT: 0x11D2,","    CL_EVENT_COMMAND_EXECUTION_STATUS: 0x11D3,","    CL_EVENT_CONTEXT: 0x11D4,","    /* ### cl_command_type */","    CL_COMMAND_NDRANGE_KERNEL: 0x11F0,","    CL_COMMAND_TASK: 0x11F1,","    CL_COMMAND_NATIVE_KERNEL: 0x11F2,","    CL_COMMAND_READ_BUFFER: 0x11F3,","    CL_COMMAND_WRITE_BUFFER: 0x11F4,","    CL_COMMAND_COPY_BUFFER: 0x11F5,","    CL_COMMAND_READ_IMAGE: 0x11F6,","    CL_COMMAND_WRITE_IMAGE: 0x11F7,","    CL_COMMAND_COPY_IMAGE: 0x11F8,","    CL_COMMAND_COPY_IMAGE_TO_BUFFER: 0x11F9,","    CL_COMMAND_COPY_BUFFER_TO_IMAGE: 0x11FA,","    CL_COMMAND_MAP_BUFFER: 0x11FB,","    CL_COMMAND_MAP_IMAGE: 0x11FC,","    CL_COMMAND_UNMAP_MEM_OBJECT: 0x11FD,","    CL_COMMAND_MARKER: 0x11FE,","    CL_COMMAND_ACQUIRE_GL_OBJECTS: 0x11FF,","    CL_COMMAND_RELEASE_GL_OBJECTS: 0x1200,","    CL_COMMAND_READ_BUFFER_RECT: 0x1201,","    CL_COMMAND_WRITE_BUFFER_RECT: 0x1202,","    CL_COMMAND_COPY_BUFFER_RECT: 0x1203,","    CL_COMMAND_USER: 0x1204,","    CL_COMMAND_BARRIER: 0x1205,","    CL_COMMAND_MIGRATE_MEM_OBJECTS: 0x1206,","    CL_COMMAND_FILL_BUFFER: 0x1207,","    CL_COMMAND_FILL_IMAGE: 0x1208,","    /* ### command execution status */","    CL_COMPLETE: 0x0,","    CL_RUNNING: 0x1,","    CL_SUBMITTED: 0x2,","    CL_QUEUED: 0x3,","    /* ### cl_buffer_create_type  */","    CL_BUFFER_CREATE_TYPE_REGION: 0x1220,","    /* ### cl_profiling_info  */","    CL_PROFILING_COMMAND_QUEUED: 0x1280,","    CL_PROFILING_COMMAND_SUBMIT: 0x1281,","    CL_PROFILING_COMMAND_START: 0x1282,","    CL_PROFILING_COMMAND_END: 0x1283,","","    CL_DEVICE_COMPUTE_CAPABILITY_MAJOR_NV: 0x4000,","    CL_DEVICE_COMPUTE_CAPABILITY_MINOR_NV: 0x4001,","    CL_DEVICE_REGISTERS_PER_BLOCK_NV: 0x4002,","    CL_DEVICE_WARP_SIZE_NV: 0x4003,","    CL_DEVICE_GPU_OVERLAP_NV: 0x4004,","    CL_DEVICE_KERNEL_EXEC_TIMEOUT_NV: 0x4005,","    CL_DEVICE_INTEGRATED_MEMORY_NV: 0x4006,","","    CL_DEVICE_GLOBAL_FREE_MEMORY_AMD: 0x4039,","    CL_DEVICE_SIMD_PER_COMPUTE_UNIT_AMD: 0x4040,","    CL_DEVICE_SIMD_WIDTH_AMD: 0x4041,","    CL_DEVICE_SIMD_INSTRUCTION_WIDTH_AMD: 0x4042,","    CL_DEVICE_WAVEFRONT_WIDTH_AMD: 0x4043,","    CL_DEVICE_GLOBAL_MEM_CHANNELS_AMD: 0x4044,","    CL_DEVICE_GLOBAL_MEM_CHANNEL_BANKS_AMD: 0x4045,","    CL_DEVICE_GLOBAL_MEM_CHANNEL_BANK_WIDTH_AMD: 0x4046,","    CL_DEVICE_LOCAL_MEM_SIZE_PER_COMPUTE_UNIT_AMD: 0x4047,","    CL_DEVICE_LOCAL_MEM_BANKS_AMD: 0x4048","};","","module.exports = clDefines;",""],"l":{"17":1,"444":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clError.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clError.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"CLError","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":49},"end":{"line":10,"column":67}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"4":{"start":{"line":7,"column":0},"end":{"line":21,"column":1}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":21}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":43}},"7":{"start":{"line":10,"column":4},"end":{"line":12,"column":8}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":37}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":36}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":26}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":67}},"12":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":47}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":21}},"15":{"start":{"line":20,"column":4},"end":{"line":20,"column":22}},"16":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}},"17":{"start":{"line":25,"column":0},"end":{"line":25,"column":25}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":15},"end":{"line":13,"column":22}},{"start":{"line":13,"column":26},"end":{"line":13,"column":35}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]}},"code":["\"use strict\";","","var util = require(\"util\");","var defs = require(\"./clDefines\");","var _ = require(\"lodash\");","","function CLError(code, message) {","    Error.call(this);","    Error.captureStackTrace(this, CLError);","    var typeKey = _.first(_.filter(_.keys(defs), function (defKey) {","        return defs[defKey] === code;","    }));","    var type = typeKey || \"UNKNOWN\";","    this.name = \"CLError\";","    this.message = \"OpenCL Error Code: \" + code + \" Type: \" + type;","    if (message) {","        this.message += \" Message: \" + message;","    }","    this.code = code;","    this._type = type;","}","","util.inherits(CLError, Error);","","module.exports = CLError;",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":0,"9":0,"10":0,"11":0,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"23":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/cl12.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/cl12.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"CL12","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":16}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":23}},"7":{"start":{"line":10,"column":0},"end":{"line":143,"column":1}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":20}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":27}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":23}},"11":{"start":{"line":14,"column":4},"end":{"line":142,"column":16}},"12":{"start":{"line":145,"column":0},"end":{"line":145,"column":26}},"13":{"start":{"line":147,"column":0},"end":{"line":147,"column":22}}},"branchMap":{},"code":["\"use strict\";","","var util = require(\"util\");","var CL11 = require(\"./cl11\");","var _ = require(\"lodash\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var ffi = fastcall.ffi;","","function CL12() {","    CL11.call(this);","    var types = this.types;","    this.version = 1.2;","    _.extend(","        this.imports,","        new ffi.Library(this.libName,","            {","                //   extern CL_API_ENTRY cl_int CL_API_CALL/","                //clCreateSubDevices(cl_device_id                         /* in_device */,","                //                   const cl_device_partition_property * /* properties */,","                //                   cl_uint                              /* num_devices */,","                //                 cl_device_id *                       /* out_devices */,","                //                   cl_uint *                            /* num_devices_ret */) CL_API_SUFFIX__VERSION_1_2;","                clCreateSubDevices: [\"int\", [\"pointer\", types.DevicePartitionProperties, \"uint\", ref.refType(types.DeviceId), types.ErrorCodeRet]],","","                //extern CL_API_ENTRY cl_int CL_API_CALL","                //clRetainDevice(cl_device_id /* device */) CL_API_SUFFIX__VERSION_1_2;","                clRetainDevice: [\"int\", [\"pointer\"]],","","","                //extern CL_API_ENTRY cl_int CL_API_CALL","                //clReleaseDevice(cl_device_id /* device */) CL_API_SUFFIX__VERSION_1_2;","                clReleaseDevice: [\"int\", [\"pointer\"]],","","                //extern CL_API_ENTRY cl_mem CL_API_CALL","                //clCreateImage(cl_context              /* context */,","                //              cl_mem_flags            /* flags */,","                //              const cl_image_format * /* image_format */,","                //              const cl_image_desc *   /* image_desc */,","                //              void *                  /* host_ptr */,","                //              cl_int *                /* errcode_ret */) CL_API_SUFFIX__VERSION_1_2;","                clCreateImage: [types.Mem, [\"pointer\", types.MemFlags, types.ImageFormatRef, types.ImageDescRef, \"pointer\", types.ErrorCodeRet]],","","                //extern CL_API_ENTRY cl_int CL_API_CALL","                //clCompileProgram(cl_program           /* program */,","                //                 cl_uint              /* num_devices */,","                //                 const cl_device_id * /* device_list */,","                //                 const char *         /* options */,","                //                 cl_uint              /* num_input_headers */,","                //                 const cl_program *   /* input_headers */,","                //                 const char **        /* header_include_names */,","                //                 void (CL_CALLBACK *  /* pfn_notify */)(cl_program /* program */, void * /* user_data */),","                //                 void *               /* user_data */) CL_API_SUFFIX__VERSION_1_2;","                clCompileProgram: [\"int\", [types.Program, \"uint\", types.DeviceIdArray, \"string\", \"uint\", types.ProgramArray, types.StringArray, types.BuildProgramNotify, \"pointer\"]],","","                //extern CL_API_ENTRY cl_program CL_API_CALL/","                //clLinkProgram(cl_context           /* context */,","                //              cl_uint              /* num_devices */,","                //              const cl_device_id * /* device_list */,","                //              const char *         /* options */,","                //              cl_uint              /* num_input_programs */,","                //              const cl_program *   /* input_programs */,","                //              void (CL_CALLBACK *  /* pfn_notify */)(cl_program /* program */, void * /* user_data */),","                //              void *               /* user_data */,","                //              cl_int *             /* errcode_ret */ ) CL_API_SUFFIX__VERSION_1_2;","                clLinkProgram: [types.Program, [types.Context, \"uint\", types.DeviceIdArray, \"string\", \"uint\", types.ProgramArray, types.BuildProgramNotify, types.ErrorCodeRet, \"pointer\"]],","","                //extern CL_API_ENTRY cl_int CL_API_CALL","                //clUnloadPlatformCompiler(cl_platform_id /* platform */) CL_API_SUFFIX__VERSION_1_2;","                clUnloadPlatformCompiler: [\"int\", [types.PlatformId]],","","                //extern CL_API_ENTRY cl_int CL_API_CALL","                //clEnqueueFillBuffer(cl_command_queue   /* command_queue */,","                //                    cl_mem             /* buffer */,","                //                    const void *       /* pattern */,","                //                    size_t             /* pattern_size */,","                //                    size_t             /* offset */,","                //                    size_t             /* size */,","                //                    cl_uint            /* num_events_in_wait_list */,","                //                    const cl_event *   /* event_wait_list */,","                //                    cl_event *         /* event */) CL_API_SUFFIX__VERSION_1_2;","                clEnqueueFillBuffer: [\"int\", [types.CommandQueue, types.Mem, \"pointer\", \"size_t\", \"size_t\", \"size_t\", \"uint\", types.EventArray, types.EventRef]],","","","                //extern CL_API_ENTRY cl_int CL_API_CALL","                //clEnqueueFillImage(cl_command_queue   /* command_queue */,","                //                   cl_mem             /* image */,","                //                   const void *       /* fill_color */,","                //                   const size_t *     /* origin[3] */,","                //                   const size_t *     /* region[3] */,","                //                   cl_uint            /* num_events_in_wait_list */,","                //                   const cl_event *   /* event_wait_list */,","                //                   cl_event *         /* event */) CL_API_SUFFIX__VERSION_1_2;","                clEnqueueFillImage: [\"int\", [types.CommandQueue, types.Mem, \"pointer\", types.SizeTArray, types.SizeTArray, \"uint\", types.EventArray, types.EventRef]],","","                //extern CL_API_ENTRY cl_int CL_API_CALL","                //clEnqueueMigrateMemObjects(cl_command_queue       /* command_queue */,","                //                           cl_uint                /* num_mem_objects */,","                //                           const cl_mem *         /* mem_objects */,","                //                           cl_mem_migration_flags /* flags */,","                //                           cl_uint                /* num_events_in_wait_list */,","                //                           const cl_event *       /* event_wait_list */,","                //                           cl_event *             /* event */) CL_API_SUFFIX__VERSION_1_2;","                clEnqueueMigrateMemObjects: [\"int\", [types.CommandQueue, \"uint\", types.MemArray, types.MemMigrationFlags, \"uint\", types.EventArray, types.EventRef]],","","","                //extern CL_API_ENTRY cl_int CL_API_CALL","                //clEnqueueMarkerWithWaitList(cl_command_queue /* command_queue */,","                //                            cl_uint           /* num_events_in_wait_list */,","                //                            const cl_event *  /* event_wait_list */,","                //                            cl_event *        /* event */) CL_API_SUFFIX__VERSION_1_2;","                clEnqueueMarkerWithWaitList: [\"int\", [types.CommandQueue, \"uint\", types.EventArray, types.EventRef]],","","                //extern CL_API_ENTRY cl_int CL_API_CALL","                //clEnqueueBarrierWithWaitList(cl_command_queue /* command_queue */,","                //                             cl_uint           /* num_events_in_wait_list */,","                //                             const cl_event *  /* event_wait_list */,","                //                             cl_event *        /* event */) CL_API_SUFFIX__VERSION_1_2;","                clEnqueueBarrierWithWaitList: [\"int\", [types.CommandQueue, \"uint\", types.EventArray, types.EventRef]],","","                //extern CL_API_ENTRY void * CL_API_CALL","                //clGetExtensionFunctionAddressForPlatform(cl_platform_id /* platform */,","                //                                         const char *   /* func_name */) CL_API_SUFFIX__VERSION_1_2;","                clGetExtensionFunctionAddressForPlatform: [\"pointer\", [types.PlatformId, \"string\"]],","","                //extern CL_API_ENTRY cl_int CL_API_CALL","                //clGetKernelArgInfo(cl_kernel       /* kernel */,","                //                   cl_uint         /* arg_indx */,","                //                   cl_kernel_arg_info  /* param_name */,","                //                   size_t          /* param_value_size */,","                //                   void *          /* param_value */,","                //                   size_t *        /* param_value_size_ret */) CL_API_SUFFIX__VERSION_1_2;","                clGetKernelArgInfo: [\"int\", [types.Kernel, \"uint\", types.KernelArgInfo, \"size_t\", \"pointer\", ref.refType(\"size_t\")]],","","                //extern CL_API_ENTRY cl_program CL_API_CALL","                //clCreateProgramWithBuiltInKernels(cl_context            /* context */,","                //                                  cl_uint               /* num_devices */,","                //                                  const cl_device_id *  /* device_list */,","                //                                  const char *          /* kernel_names */,","                //                                  cl_int *              /* errcode_ret */) CL_API_SUFFIX__VERSION_1_2;","                clCreateProgramWithBuiltInKernels: [types.Program, [types.Context, \"uint\", types.DeviceIdArray, \"string\", types.ErrorCodeRet]]","            }));","}","","util.inherits(CL12, CL11);","","module.exports = CL12;"],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":0,"12":0,"13":0,"14":0,"145":1,"147":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clPlatform.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clPlatform.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":1,"44":0,"45":0,"46":1,"47":0,"48":0,"49":1,"50":0,"51":0,"52":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"CLPlatform","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":32}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":13},"end":{"line":55,"column":25}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":13},"end":{"line":63,"column":25}}},"4":{"name":"(anonymous_4)","line":71,"loc":{"start":{"line":71,"column":13},"end":{"line":71,"column":25}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":13},"end":{"line":79,"column":25}}},"6":{"name":"(anonymous_6)","line":87,"loc":{"start":{"line":87,"column":13},"end":{"line":87,"column":25}}},"7":{"name":"(anonymous_7)","line":103,"loc":{"start":{"line":103,"column":34},"end":{"line":103,"column":56}}},"8":{"name":"(anonymous_8)","line":141,"loc":{"start":{"line":141,"column":34},"end":{"line":141,"column":46}}},"9":{"name":"(anonymous_9)","line":152,"loc":{"start":{"line":152,"column":34},"end":{"line":152,"column":46}}},"10":{"name":"(anonymous_10)","line":163,"loc":{"start":{"line":163,"column":34},"end":{"line":163,"column":46}}},"11":{"name":"(anonymous_11)","line":174,"loc":{"start":{"line":174,"column":36},"end":{"line":174,"column":48}}}},"statementMap":{"1":{"start":{"line":31,"column":0},"end":{"line":31,"column":39}},"2":{"start":{"line":32,"column":0},"end":{"line":32,"column":27}},"3":{"start":{"line":33,"column":0},"end":{"line":33,"column":37}},"4":{"start":{"line":34,"column":0},"end":{"line":34,"column":37}},"5":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"6":{"start":{"line":43,"column":4},"end":{"line":43,"column":43}},"7":{"start":{"line":46,"column":0},"end":{"line":46,"column":37}},"8":{"start":{"line":48,"column":0},"end":{"line":92,"column":3}},"9":{"start":{"line":56,"column":12},"end":{"line":56,"column":36}},"10":{"start":{"line":57,"column":12},"end":{"line":57,"column":70}},"11":{"start":{"line":64,"column":12},"end":{"line":64,"column":36}},"12":{"start":{"line":65,"column":12},"end":{"line":65,"column":72}},"13":{"start":{"line":72,"column":12},"end":{"line":72,"column":36}},"14":{"start":{"line":73,"column":12},"end":{"line":73,"column":73}},"15":{"start":{"line":80,"column":12},"end":{"line":80,"column":36}},"16":{"start":{"line":81,"column":12},"end":{"line":81,"column":73}},"17":{"start":{"line":88,"column":12},"end":{"line":88,"column":36}},"18":{"start":{"line":89,"column":12},"end":{"line":89,"column":76}},"19":{"start":{"line":103,"column":0},"end":{"line":133,"column":2}},"20":{"start":{"line":104,"column":4},"end":{"line":104,"column":28}},"21":{"start":{"line":105,"column":4},"end":{"line":105,"column":33}},"22":{"start":{"line":106,"column":4},"end":{"line":106,"column":21}},"23":{"start":{"line":107,"column":4},"end":{"line":107,"column":27}},"24":{"start":{"line":109,"column":4},"end":{"line":109,"column":84}},"25":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"26":{"start":{"line":111,"column":8},"end":{"line":111,"column":23}},"27":{"start":{"line":113,"column":4},"end":{"line":113,"column":28}},"28":{"start":{"line":115,"column":4},"end":{"line":115,"column":24}},"29":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"30":{"start":{"line":117,"column":8},"end":{"line":117,"column":23}},"31":{"start":{"line":120,"column":4},"end":{"line":120,"column":57}},"32":{"start":{"line":122,"column":4},"end":{"line":122,"column":86}},"33":{"start":{"line":123,"column":4},"end":{"line":123,"column":28}},"34":{"start":{"line":125,"column":4},"end":{"line":131,"column":5}},"35":{"start":{"line":126,"column":8},"end":{"line":126,"column":63}},"36":{"start":{"line":127,"column":8},"end":{"line":127,"column":42}},"37":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"38":{"start":{"line":129,"column":12},"end":{"line":129,"column":33}},"39":{"start":{"line":132,"column":4},"end":{"line":132,"column":19}},"40":{"start":{"line":141,"column":0},"end":{"line":144,"column":2}},"41":{"start":{"line":142,"column":4},"end":{"line":142,"column":28}},"42":{"start":{"line":143,"column":4},"end":{"line":143,"column":60}},"43":{"start":{"line":152,"column":0},"end":{"line":155,"column":2}},"44":{"start":{"line":153,"column":4},"end":{"line":153,"column":28}},"45":{"start":{"line":154,"column":4},"end":{"line":154,"column":60}},"46":{"start":{"line":163,"column":0},"end":{"line":166,"column":2}},"47":{"start":{"line":164,"column":4},"end":{"line":164,"column":28}},"48":{"start":{"line":165,"column":4},"end":{"line":165,"column":60}},"49":{"start":{"line":174,"column":0},"end":{"line":177,"column":2}},"50":{"start":{"line":175,"column":4},"end":{"line":175,"column":28}},"51":{"start":{"line":176,"column":4},"end":{"line":176,"column":68}},"52":{"start":{"line":179,"column":0},"end":{"line":179,"column":28}}},"branchMap":{"1":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"2":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"3":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":8}},{"start":{"line":128,"column":8},"end":{"line":128,"column":8}}]}},"code":["/*","License: [MIT](../LICENSE)","","Copyright (c) 2014 Gábor Mező aka [unbornchikken](https://github.com/unbornchikken)","*/","","/*","# CLPlatform class","","Represents an OpenCL platform.","","**base:** [CLWrapper](clWrapper.html)","","**Properties:**","- [name](#name)","- [vendor](#vendor)","- [clVersion](#clversion)","- [profile](#profile)","- [extensions](#extensions)","","**Methods:**","- [constructor](#constructor)","- [getDevices](#getdevices)","- [allDevices](#alldevices)","- [cpuDevices](#cpudevices)","- [accelDevices](#acceldevices)","*/","","\"use strict\";","","var CLWrapper = require(\"./clWrapper\");","var util = require(\"util\");","var CLDevice = require(\"./clDevice\");","var clPredef = require(\"./clPredef\");","","/* ## constructor","","**arguments:**","- **cl:**: object of type [CL11](cl11.html)","- **handle:**: OpenCL handle"," */","function CLPlatform(cl, handle) {","    CLWrapper.call(this, cl, handle, null);","}","","util.inherits(CLPlatform, CLWrapper);","","Object.defineProperties(CLPlatform.prototype, {","    _classInfoFunction: {","        value: \"clGetPlatformInfo\"","    },","    // ## name","    // The name of the platform.","    name: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_PLATFORM_NAME);","        }","    },","    // ## vendor","    // Platform\"s vendor.","    vendor: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_PLATFORM_VENDOR);","        }","    },","    // ## clVersion","    // Platform\"s version.","    clVersion: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_PLATFORM_VERSION);","        }","    },","    // ## profile","    // Platform\"s profile..","    profile: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_PLATFORM_PROFILE);","        }","    },","    // ## extensions","    // Available extensions.","    extensions: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_PLATFORM_EXTENSIONS);","        }","    }","});","","/* ## getDevices","","**arguments:**","- **deviceType**: combination of the CL_DEVICE_TYPE_* flags","","** result: **","","Array of [CLDevice](clDevice.html) instances.","*/","CLPlatform.prototype.getDevices = function (deviceType) {","    this._throwIfReleased();","    var i, device, devNumVersion;","    var devices = [];","    var num = clPredef.num;","    // _OpenCL API_: [clGetDeviceIDs](https://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/clGetDeviceIDs.html)","    var err = this.cl.imports.clGetDeviceIDs(this.handle, deviceType, 0, null, num);","    if (err === this.cl.defs.CL_DEVICE_NOT_FOUND) {","        return devices;","    }","    this.cl.checkError(err);","","    var n = num.deref();","    if (!n) {","        return devices;","    }","","    var deviceIDs = new (this.cl.types.DeviceIdArray)(n);","    // _OpenCL API_: [clGetDeviceIDs](https://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/clGetDeviceIDs.html)","    err = this.cl.imports.clGetDeviceIDs(this.handle, deviceType, n, deviceIDs, null);","    this.cl.checkError(err);","","    for (i = 0; i < n; i++) {","        device = new CLDevice(this.cl, deviceIDs.get(i), this);","        devNumVersion = device.numVersion;","        if (devNumVersion >= this.cl.version) {","            devices.push(device);","        }","    }","    return devices;","};","","/* ## allDevices","","**returns:**","","Array of all available devices ([CLDevice](clDevice.html) instances)."," */","CLPlatform.prototype.allDevices = function () {","    this._throwIfReleased();","    return this.getDevices(this.cl.defs.CL_DEVICE_TYPE_ALL);","};","","/* ## cpuDevices","","**returns:**","","Array of CPU devices ([CLDevice](clDevice.html) instances)."," */","CLPlatform.prototype.cpuDevices = function () {","    this._throwIfReleased();","    return this.getDevices(this.cl.defs.CL_DEVICE_TYPE_CPU);","};","","/* ## gpuDevices","","**returns:**","","Array of GPU devices ([CLDevice](clDevice.html) instances)."," */","CLPlatform.prototype.gpuDevices = function () {","    this._throwIfReleased();","    return this.getDevices(this.cl.defs.CL_DEVICE_TYPE_GPU);","};","","/* ## accelDevices","","**returns:**","","Array of accelerator devices ([CLDevice](clDevice.html) instances)."," */","CLPlatform.prototype.accelDevices = function () {","    this._throwIfReleased();","    return this.getDevices(this.cl.defs.CL_DEVICE_TYPE_ACCELERATOR);","};","","module.exports = CLPlatform;",""],"l":{"31":1,"32":1,"33":1,"34":1,"42":1,"43":0,"46":1,"48":1,"56":0,"57":0,"64":0,"65":0,"72":0,"73":0,"80":0,"81":0,"88":0,"89":0,"103":1,"104":0,"105":0,"106":0,"107":0,"109":0,"110":0,"111":0,"113":0,"115":0,"116":0,"117":0,"120":0,"122":0,"123":0,"125":0,"126":0,"127":0,"128":0,"129":0,"132":0,"141":1,"142":0,"143":0,"152":1,"153":0,"154":0,"163":1,"164":0,"165":0,"174":1,"175":0,"176":0,"179":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clWrapper.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clWrapper.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":1,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"fnMap":{"1":{"name":"CLWrapper","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":48}}},"2":{"name":"(anonymous_2)","line":63,"loc":{"start":{"line":63,"column":13},"end":{"line":63,"column":25}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":13},"end":{"line":70,"column":25}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":29},"end":{"line":76,"column":45}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":26},"end":{"line":80,"column":44}}},"6":{"name":"(anonymous_6)","line":84,"loc":{"start":{"line":84,"column":39},"end":{"line":84,"column":51}}},"7":{"name":"(anonymous_7)","line":90,"loc":{"start":{"line":90,"column":30},"end":{"line":90,"column":57}}},"8":{"name":"(anonymous_8)","line":111,"loc":{"start":{"line":111,"column":30},"end":{"line":111,"column":42}}},"9":{"name":"(anonymous_9)","line":115,"loc":{"start":{"line":115,"column":31},"end":{"line":115,"column":70}}},"10":{"name":"(anonymous_10)","line":119,"loc":{"start":{"line":119,"column":35},"end":{"line":119,"column":88}}},"11":{"name":"(anonymous_11)","line":123,"loc":{"start":{"line":123,"column":8},"end":{"line":123,"column":20}}},"12":{"name":"(anonymous_12)","line":137,"loc":{"start":{"line":137,"column":32},"end":{"line":137,"column":92}}},"13":{"name":"(anonymous_13)","line":141,"loc":{"start":{"line":141,"column":8},"end":{"line":141,"column":20}}},"14":{"name":"(anonymous_14)","line":155,"loc":{"start":{"line":155,"column":36},"end":{"line":155,"column":75}}},"15":{"name":"(anonymous_15)","line":159,"loc":{"start":{"line":159,"column":8},"end":{"line":159,"column":20}}},"16":{"name":"(anonymous_16)","line":193,"loc":{"start":{"line":193,"column":37},"end":{"line":193,"column":66}}},"17":{"name":"(anonymous_17)","line":197,"loc":{"start":{"line":197,"column":8},"end":{"line":197,"column":20}}},"18":{"name":"(anonymous_18)","line":199,"loc":{"start":{"line":199,"column":33},"end":{"line":199,"column":49}}},"19":{"name":"(anonymous_19)","line":201,"loc":{"start":{"line":201,"column":19},"end":{"line":201,"column":35}}},"20":{"name":"(anonymous_20)","line":210,"loc":{"start":{"line":210,"column":37},"end":{"line":210,"column":97}}},"21":{"name":"(anonymous_21)","line":214,"loc":{"start":{"line":214,"column":8},"end":{"line":214,"column":20}}},"22":{"name":"(anonymous_22)","line":249,"loc":{"start":{"line":249,"column":38},"end":{"line":249,"column":88}}},"23":{"name":"(anonymous_23)","line":253,"loc":{"start":{"line":253,"column":8},"end":{"line":253,"column":20}}},"24":{"name":"(anonymous_24)","line":255,"loc":{"start":{"line":255,"column":33},"end":{"line":255,"column":49}}},"25":{"name":"(anonymous_25)","line":257,"loc":{"start":{"line":257,"column":19},"end":{"line":257,"column":35}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":26}},"2":{"start":{"line":27,"column":0},"end":{"line":27,"column":35}},"3":{"start":{"line":28,"column":0},"end":{"line":28,"column":44}},"4":{"start":{"line":29,"column":0},"end":{"line":29,"column":23}},"5":{"start":{"line":30,"column":0},"end":{"line":30,"column":35}},"6":{"start":{"line":31,"column":0},"end":{"line":31,"column":35}},"7":{"start":{"line":32,"column":0},"end":{"line":32,"column":29}},"8":{"start":{"line":33,"column":0},"end":{"line":33,"column":31}},"9":{"start":{"line":34,"column":0},"end":{"line":34,"column":27}},"10":{"start":{"line":42,"column":0},"end":{"line":57,"column":1}},"11":{"start":{"line":43,"column":4},"end":{"line":43,"column":72}},"12":{"start":{"line":44,"column":4},"end":{"line":44,"column":90}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":51}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":43}},"15":{"start":{"line":50,"column":4},"end":{"line":50,"column":17}},"16":{"start":{"line":53,"column":4},"end":{"line":53,"column":25}},"17":{"start":{"line":55,"column":4},"end":{"line":55,"column":21}},"18":{"start":{"line":56,"column":4},"end":{"line":56,"column":66}},"19":{"start":{"line":59,"column":0},"end":{"line":59,"column":37}},"20":{"start":{"line":61,"column":0},"end":{"line":74,"column":3}},"21":{"start":{"line":64,"column":12},"end":{"line":64,"column":47}},"22":{"start":{"line":71,"column":12},"end":{"line":71,"column":35}},"23":{"start":{"line":76,"column":0},"end":{"line":78,"column":1}},"24":{"start":{"line":77,"column":4},"end":{"line":77,"column":16}},"25":{"start":{"line":80,"column":0},"end":{"line":82,"column":2}},"26":{"start":{"line":81,"column":4},"end":{"line":81,"column":50}},"27":{"start":{"line":84,"column":0},"end":{"line":88,"column":2}},"28":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"29":{"start":{"line":86,"column":8},"end":{"line":86,"column":77}},"30":{"start":{"line":90,"column":0},"end":{"line":105,"column":2}},"31":{"start":{"line":91,"column":4},"end":{"line":96,"column":5}},"32":{"start":{"line":92,"column":8},"end":{"line":92,"column":37}},"33":{"start":{"line":93,"column":8},"end":{"line":95,"column":9}},"34":{"start":{"line":94,"column":12},"end":{"line":94,"column":25}},"35":{"start":{"line":98,"column":4},"end":{"line":98,"column":21}},"36":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"37":{"start":{"line":101,"column":8},"end":{"line":101,"column":34}},"38":{"start":{"line":104,"column":4},"end":{"line":104,"column":18}},"39":{"start":{"line":111,"column":0},"end":{"line":113,"column":2}},"40":{"start":{"line":112,"column":4},"end":{"line":112,"column":19}},"41":{"start":{"line":115,"column":0},"end":{"line":117,"column":2}},"42":{"start":{"line":116,"column":4},"end":{"line":116,"column":78}},"43":{"start":{"line":119,"column":0},"end":{"line":135,"column":2}},"44":{"start":{"line":120,"column":4},"end":{"line":120,"column":20}},"45":{"start":{"line":121,"column":4},"end":{"line":134,"column":6}},"46":{"start":{"line":124,"column":12},"end":{"line":124,"column":48}},"47":{"start":{"line":126,"column":12},"end":{"line":126,"column":43}},"48":{"start":{"line":127,"column":12},"end":{"line":127,"column":107}},"49":{"start":{"line":128,"column":12},"end":{"line":128,"column":36}},"50":{"start":{"line":129,"column":12},"end":{"line":129,"column":38}},"51":{"start":{"line":131,"column":12},"end":{"line":131,"column":26}},"52":{"start":{"line":137,"column":0},"end":{"line":153,"column":2}},"53":{"start":{"line":138,"column":4},"end":{"line":138,"column":20}},"54":{"start":{"line":139,"column":4},"end":{"line":152,"column":6}},"55":{"start":{"line":142,"column":12},"end":{"line":142,"column":48}},"56":{"start":{"line":144,"column":12},"end":{"line":144,"column":43}},"57":{"start":{"line":145,"column":12},"end":{"line":145,"column":132}},"58":{"start":{"line":146,"column":12},"end":{"line":146,"column":36}},"59":{"start":{"line":147,"column":12},"end":{"line":147,"column":38}},"60":{"start":{"line":149,"column":12},"end":{"line":149,"column":26}},"61":{"start":{"line":155,"column":0},"end":{"line":191,"column":2}},"62":{"start":{"line":156,"column":4},"end":{"line":156,"column":20}},"63":{"start":{"line":157,"column":4},"end":{"line":190,"column":6}},"64":{"start":{"line":160,"column":12},"end":{"line":160,"column":18}},"65":{"start":{"line":161,"column":12},"end":{"line":161,"column":48}},"66":{"start":{"line":163,"column":12},"end":{"line":163,"column":45}},"67":{"start":{"line":165,"column":12},"end":{"line":165,"column":81}},"68":{"start":{"line":166,"column":12},"end":{"line":166,"column":36}},"69":{"start":{"line":168,"column":12},"end":{"line":168,"column":41}},"70":{"start":{"line":170,"column":12},"end":{"line":173,"column":13}},"71":{"start":{"line":172,"column":16},"end":{"line":172,"column":28}},"72":{"start":{"line":175,"column":12},"end":{"line":175,"column":63}},"73":{"start":{"line":176,"column":12},"end":{"line":176,"column":48}},"74":{"start":{"line":177,"column":12},"end":{"line":177,"column":56}},"75":{"start":{"line":178,"column":12},"end":{"line":178,"column":55}},"76":{"start":{"line":179,"column":12},"end":{"line":179,"column":90}},"77":{"start":{"line":180,"column":12},"end":{"line":180,"column":36}},"78":{"start":{"line":182,"column":12},"end":{"line":182,"column":28}},"79":{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},"80":{"start":{"line":184,"column":16},"end":{"line":184,"column":43}},"81":{"start":{"line":187,"column":12},"end":{"line":187,"column":26}},"82":{"start":{"line":193,"column":0},"end":{"line":208,"column":2}},"83":{"start":{"line":194,"column":4},"end":{"line":194,"column":20}},"84":{"start":{"line":195,"column":4},"end":{"line":207,"column":6}},"85":{"start":{"line":198,"column":12},"end":{"line":198,"column":65}},"86":{"start":{"line":199,"column":12},"end":{"line":203,"column":31}},"87":{"start":{"line":200,"column":16},"end":{"line":200,"column":32}},"88":{"start":{"line":202,"column":16},"end":{"line":202,"column":49}},"89":{"start":{"line":204,"column":12},"end":{"line":204,"column":23}},"90":{"start":{"line":210,"column":0},"end":{"line":247,"column":2}},"91":{"start":{"line":211,"column":4},"end":{"line":211,"column":20}},"92":{"start":{"line":212,"column":4},"end":{"line":246,"column":6}},"93":{"start":{"line":215,"column":12},"end":{"line":215,"column":18}},"94":{"start":{"line":216,"column":12},"end":{"line":216,"column":50}},"95":{"start":{"line":217,"column":12},"end":{"line":217,"column":48}},"96":{"start":{"line":219,"column":12},"end":{"line":219,"column":45}},"97":{"start":{"line":221,"column":12},"end":{"line":221,"column":82}},"98":{"start":{"line":222,"column":12},"end":{"line":222,"column":36}},"99":{"start":{"line":224,"column":12},"end":{"line":224,"column":41}},"100":{"start":{"line":226,"column":12},"end":{"line":229,"column":13}},"101":{"start":{"line":228,"column":16},"end":{"line":228,"column":28}},"102":{"start":{"line":231,"column":12},"end":{"line":231,"column":63}},"103":{"start":{"line":232,"column":12},"end":{"line":232,"column":48}},"104":{"start":{"line":233,"column":12},"end":{"line":233,"column":56}},"105":{"start":{"line":234,"column":12},"end":{"line":234,"column":55}},"106":{"start":{"line":235,"column":12},"end":{"line":235,"column":91}},"107":{"start":{"line":236,"column":12},"end":{"line":236,"column":36}},"108":{"start":{"line":238,"column":12},"end":{"line":238,"column":28}},"109":{"start":{"line":239,"column":12},"end":{"line":241,"column":13}},"110":{"start":{"line":240,"column":16},"end":{"line":240,"column":43}},"111":{"start":{"line":243,"column":12},"end":{"line":243,"column":26}},"112":{"start":{"line":249,"column":0},"end":{"line":264,"column":2}},"113":{"start":{"line":250,"column":4},"end":{"line":250,"column":20}},"114":{"start":{"line":251,"column":4},"end":{"line":263,"column":6}},"115":{"start":{"line":254,"column":12},"end":{"line":254,"column":87}},"116":{"start":{"line":255,"column":12},"end":{"line":259,"column":31}},"117":{"start":{"line":256,"column":16},"end":{"line":256,"column":32}},"118":{"start":{"line":258,"column":16},"end":{"line":258,"column":49}},"119":{"start":{"line":260,"column":12},"end":{"line":260,"column":23}},"120":{"start":{"line":266,"column":0},"end":{"line":266,"column":27}}},"branchMap":{"1":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"2":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"3":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":8}},{"start":{"line":93,"column":8},"end":{"line":93,"column":8}}]},"4":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"5":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":58},"end":{"line":127,"column":71}},{"start":{"line":127,"column":75},"end":{"line":127,"column":93}}]},"6":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":83},"end":{"line":145,"column":96}},{"start":{"line":145,"column":100},"end":{"line":145,"column":118}}]},"7":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":12},"end":{"line":170,"column":12}},{"start":{"line":170,"column":12},"end":{"line":170,"column":12}}]},"8":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":27},"end":{"line":175,"column":40}},{"start":{"line":175,"column":44},"end":{"line":175,"column":62}}]},"9":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":12},"end":{"line":226,"column":12}},{"start":{"line":226,"column":12},"end":{"line":226,"column":12}}]},"10":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":27},"end":{"line":231,"column":40}},{"start":{"line":231,"column":44},"end":{"line":231,"column":62}}]}},"code":["/*","License: [MIT](../LICENSE)","","Copyright (c) 2014 Gábor Mező aka [unbornchikken](https://github.com/unbornchikken)","*/","","/*","# CLWrapper abstract class","","Base class of OpenCL wrapper classes.","","**base:** Object","","**Properties:**","- [cl](#cl)","- [handle](#handle)","- [version](#version)","","**Methods:**","- [constructor](#constructor)","- [createReleaseFunction](#createReleaseFunction)","- [release](#release)","*/","","\"use strict\";","var _ = require(\"lodash\");","var fastcall = require(\"fastcall\");","var Disposable = fastcall.Disposable.Legacy;","var ref = fastcall.ref;","var ArrayType = fastcall.ArrayType;","var clUtils = require(\"./clUtils\");","var CL11 = require(\"./cl11\");","var assert = require(\"assert\");","var util = require(\"util\");","","/* ## constructor","","**arguments:**","- **cl:**: object of type [CL11](cl11.html)","- **handle:**: OpenCL handle","*/","function CLWrapper(cl, handle, releaseFunction) {","    assert(cl instanceof CL11, \"Argument 'cl' is not a CL11 instance.\");","    assert(ref.getType(handle) === ref.types.void, \"Argument 'handle' is not a pointer.\");","    assert(!ref.isNull(handle), \"Handle is null.\");","","    Disposable.call(this, releaseFunction);","","    // ## object of type [CL11](cl11.html)","    this.cl = cl;","","    // ## the OpenCL object handle","    this.handle = handle;","","    this._cache = {};","    this._infoFunction = this.cl.imports[this._classInfoFunction];","}","","util.inherits(CLWrapper, Disposable);","","Object.defineProperties(CLWrapper.prototype, {","    _classInfoFunction: {","        get: function () {","            this._ni(\"get _classInfoFunction\");","        }","    },","    // ## version","    // Returns the current OpenCL platform\"s version (see [CL11](cl11.html) version property)","    version: {","        get: function () {","            return this.cl.version;","        }","    }","});","","CLWrapper._releaseFunction = function (func) {","    return func;","}","","CLWrapper.prototype._ni = function (method) {","    throw new Error(\"Not implemented: \" + method);","};","","CLWrapper.prototype._throwIfReleased = function () {","    if (this._released) {","        throw new Error(this.constructor.name + \" object already released.\");","    }","};","","CLWrapper.prototype._cached = function (key, f, noCache) {","    if (!noCache) {","        var value = this._cache[key];","        if (!_.isUndefined(value)) {","            return value;","        }","    }","","    var result = f();","","    if (!noCache) {","        this._cache[key] = result;","    }","","    return result;","};","","/* ## release","","Releases the underlying OpenCL object.","*/","CLWrapper.prototype.release = function () {","    this.dispose();","};","","CLWrapper.prototype._getInfo = function (elemType, infoName, noCache) {","    return this._getInfoWith(this._infoFunction, elemType, infoName, noCache);","};","","CLWrapper.prototype._getInfoWith = function (infoFunction, elemType, infoName, noCache) {","    var self = this;","    return this._cached(","        infoName,","        function () {","            elemType = ref.coerceType(elemType);","","            var info = ref.alloc(elemType);","            var err = infoFunction(self.handle, infoName, elemType.size || ref.sizeof.pointer, info, null);","            self.cl.checkError(err);","            var result = info.deref();","","            return result;","        },","        noCache","    );","};","","CLWrapper.prototype._getInfo2 = function (elemType, altFunction, device, infoName, noCache) {","    var self = this;","    return this._cached(","        infoName,","        function () {","            elemType = ref.coerceType(elemType);","","            var info = ref.alloc(elemType);","            var err = altFunction(self.handle, clUtils.toHandle(device), infoName, elemType.size || ref.sizeof.pointer, info, null);","            self.cl.checkError(err);","            var result = info.deref();","","            return result;","        },","        noCache","    );","};","","CLWrapper.prototype._getArrayInfo = function (elemType, infoName, noCache) {","    var self = this;","    return this._cached(","        infoName,","        function () {","            var i;","            elemType = ref.coerceType(elemType);","","            var needed = ref.alloc(\"size_t\");","","            var err = self._infoFunction(self.handle, infoName, 0, null, needed);","            self.cl.checkError(err);","","            var nNeeded = needed.deref();","","            if (nNeeded === 0) {","                // e.g. CL_CONTEXT_PROPERTIES can return needed = 0","                return null;","            }","","            var elemSize = elemType.size || ref.sizeof.pointer;","            var bufferSize = nNeeded / elemSize;","            var ElemTypeArray = new ArrayType(elemType);","            var buffer = new ElemTypeArray(bufferSize);","            err = self._infoFunction(self.handle, infoName, nNeeded, buffer.buffer, null);","            self.cl.checkError(err);","","            var result = [];","            for (i = 0; i < bufferSize; i++) {","                result.push(buffer.get(i));","            }","","            return result;","        },","        noCache","    );","};","","CLWrapper.prototype._getStringInfo = function (infoName, noCache) {","    var self = this;","    return this._cached(","        infoName,","        function () {","            var arr = self._getArrayInfo(\"char\", infoName, true);","            var str = arr.filter(function (code) {","                return code > 0;","            }).map(function (code) {","                return String.fromCharCode(code);","            }).join(\"\").trim();","            return str;","        },","        noCache","    );","};","","CLWrapper.prototype._getArrayInfo2 = function (elemType, altFunction, device, infoName, noCache) {","    var self = this;","    return this._cached(","        infoName,","        function () {","            var i;","            var handle = clUtils.toHandle(device);","            elemType = ref.coerceType(elemType);","","            var needed = ref.alloc(\"size_t\");","","            var err = altFunction(self.handle, handle, infoName, 0, null, needed);","            self.cl.checkError(err);","","            var nNeeded = needed.deref();","","            if (nNeeded === 0) {","                // e.g. CL_CONTEXT_PROPERTIES can return needed = 0","                return null;","            }","","            var elemSize = elemType.size || ref.sizeof.pointer;","            var bufferSize = nNeeded / elemSize;","            var ElemTypeArray = new ArrayType(elemType);","            var buffer = new ElemTypeArray(bufferSize);","            err = altFunction(self.handle, handle, infoName, nNeeded, buffer.buffer, null);","            self.cl.checkError(err);","","            var result = [];","            for (i = 0; i < bufferSize; i++) {","                result.push(buffer.get(i));","            }","","            return result;","        },","        noCache","    );","};","","CLWrapper.prototype._getStringInfo2 = function (altFunction, device, infoName, noCache) {","    var self = this;","    return this._cached(","        infoName,","        function () {","            var arr = self._getArrayInfo2(\"char\", altFunction, device, infoName, true);","            var str = arr.filter(function (code) {","                return code > 0;","            }).map(function (code) {","                return String.fromCharCode(code);","            }).join(\"\").trim();","            return str;","        },","        noCache","    );","};","","module.exports = CLWrapper;",""],"l":{"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"42":1,"43":0,"44":0,"45":0,"47":0,"50":0,"53":0,"55":0,"56":0,"59":1,"61":1,"64":0,"71":0,"76":1,"77":0,"80":1,"81":0,"84":1,"85":0,"86":0,"90":1,"91":0,"92":0,"93":0,"94":0,"98":0,"100":0,"101":0,"104":0,"111":1,"112":0,"115":1,"116":0,"119":1,"120":0,"121":0,"124":0,"126":0,"127":0,"128":0,"129":0,"131":0,"137":1,"138":0,"139":0,"142":0,"144":0,"145":0,"146":0,"147":0,"149":0,"155":1,"156":0,"157":0,"160":0,"161":0,"163":0,"165":0,"166":0,"168":0,"170":0,"172":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"182":0,"183":0,"184":0,"187":0,"193":1,"194":0,"195":0,"198":0,"199":0,"200":0,"202":0,"204":0,"210":1,"211":0,"212":0,"215":0,"216":0,"217":0,"219":0,"221":0,"222":0,"224":0,"226":0,"228":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"238":0,"239":0,"240":0,"243":0,"249":1,"250":0,"251":0,"254":0,"255":0,"256":0,"258":0,"260":0,"266":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clUtils.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clUtils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":11},"end":{"line":15,"column":32}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":14},"end":{"line":28,"column":35}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":29}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":23},"end":{"line":48,"column":42}}},"5":{"name":"(anonymous_5)","line":60,"loc":{"start":{"line":60,"column":19},"end":{"line":60,"column":37}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":21},"end":{"line":70,"column":57}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":15},"end":{"line":84,"column":33}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":31},"end":{"line":86,"column":42}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":31}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":35}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":23}},"6":{"start":{"line":14,"column":0},"end":{"line":90,"column":2}},"7":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"8":{"start":{"line":17,"column":12},"end":{"line":17,"column":24}},"9":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"10":{"start":{"line":20,"column":12},"end":{"line":20,"column":23}},"11":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"12":{"start":{"line":23,"column":12},"end":{"line":23,"column":30}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":82}},"14":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"15":{"start":{"line":30,"column":12},"end":{"line":30,"column":23}},"16":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"17":{"start":{"line":33,"column":12},"end":{"line":33,"column":30}},"18":{"start":{"line":35,"column":8},"end":{"line":35,"column":89}},"19":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"20":{"start":{"line":40,"column":12},"end":{"line":40,"column":24}},"21":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"22":{"start":{"line":43,"column":12},"end":{"line":43,"column":24}},"23":{"start":{"line":45,"column":8},"end":{"line":45,"column":21}},"24":{"start":{"line":49,"column":8},"end":{"line":49,"column":14}},"25":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"26":{"start":{"line":51,"column":12},"end":{"line":51,"column":32}},"27":{"start":{"line":53,"column":8},"end":{"line":53,"column":68}},"28":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"29":{"start":{"line":55,"column":12},"end":{"line":55,"column":50}},"30":{"start":{"line":57,"column":8},"end":{"line":57,"column":27}},"31":{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},"32":{"start":{"line":62,"column":12},"end":{"line":62,"column":47}},"33":{"start":{"line":63,"column":12},"end":{"line":63,"column":65}},"34":{"start":{"line":64,"column":12},"end":{"line":64,"column":71}},"35":{"start":{"line":65,"column":12},"end":{"line":65,"column":29}},"36":{"start":{"line":67,"column":8},"end":{"line":67,"column":22}},"37":{"start":{"line":71,"column":8},"end":{"line":71,"column":17}},"38":{"start":{"line":72,"column":8},"end":{"line":72,"column":70}},"39":{"start":{"line":73,"column":8},"end":{"line":73,"column":45}},"40":{"start":{"line":74,"column":8},"end":{"line":74,"column":71}},"41":{"start":{"line":75,"column":8},"end":{"line":75,"column":54}},"42":{"start":{"line":76,"column":8},"end":{"line":76,"column":66}},"43":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"44":{"start":{"line":78,"column":12},"end":{"line":78,"column":44}},"45":{"start":{"line":80,"column":8},"end":{"line":80,"column":28}},"46":{"start":{"line":81,"column":8},"end":{"line":81,"column":25}},"47":{"start":{"line":85,"column":8},"end":{"line":85,"column":52}},"48":{"start":{"line":86,"column":8},"end":{"line":88,"column":11}},"49":{"start":{"line":87,"column":12},"end":{"line":87,"column":29}},"50":{"start":{"line":92,"column":0},"end":{"line":92,"column":25}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":8}},{"start":{"line":16,"column":8},"end":{"line":16,"column":8}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":8}},{"start":{"line":22,"column":8},"end":{"line":22,"column":8}}]},"4":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":47}}]},"5":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":43},"end":{"line":25,"column":47}},{"start":{"line":25,"column":51},"end":{"line":25,"column":56}}]},"6":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"7":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":8}},{"start":{"line":32,"column":8},"end":{"line":32,"column":8}}]},"8":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":15}},{"start":{"line":32,"column":19},"end":{"line":32,"column":47}}]},"9":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":42},"end":{"line":35,"column":46}},{"start":{"line":35,"column":50},"end":{"line":35,"column":55}}]},"10":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"11":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"12":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":15}},{"start":{"line":42,"column":19},"end":{"line":42,"column":47}}]},"13":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"14":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]},"15":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":31}},{"start":{"line":61,"column":35},"end":{"line":61,"column":75}}]},"16":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":48},"end":{"line":72,"column":65}},{"start":{"line":72,"column":68},"end":{"line":72,"column":69}}]}},"code":["/*","License: [MIT](../LICENSE)","","Copyright (c) 2014 Gábor Mező aka [unbornchikken](https://github.com/unbornchikken)","*/","","\"use strict\";","var _ = require(\"lodash\");","var types = require(\"./types\");","var clPredef = require(\"./clPredef\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","","var clUtils = {","    toPtr: function (ptr, name) {","        if (ptr === null) {","            return null;","        }","        if (ptr instanceof Buffer) {","            return ptr;","        }","        if (ptr && ptr.buffer instanceof Buffer) {","            return ptr.buffer;","        }","        throw new TypeError(\"Pointer '\" + (name || \"ptr\") + \"' is not a buffer.\");","    },","","    toHandle: function (obj, name) {","        if (obj instanceof Buffer) {","            return obj;","        }","        if (obj && obj.handle instanceof Buffer) {","            return obj.handle;","        }","        throw new TypeError(\"Object '\" + (name || \"obj\") + \"' is not an OpenCL object.\");","    },","","    isHandle: function (obj) {","        if (obj instanceof Buffer) {","            return true;","        }","        if (obj && obj.handle instanceof Buffer) {","            return true;","        }","        return false;","    },","","    createDeviceArray: function (devices) {","        var i;","        if (!_.isArray(devices)) {","            devices = [devices];","        }","        var deviceArray = new (types.DeviceIdArray)(devices.length);","        for (i = 0; i < devices.length; i++) {","            deviceArray.set(i, devices[i].handle);","        }","        return deviceArray;","    },","","    asImageFormat: function (format) {","        if (!format.constructor || format.constructor.name !== \"StructType\") {","            var format2 = clPredef.imageFormat;","            format2.imageChannelOrder = format.imageChannelOrder;","            format2.imageChannelDataType = format.imageChannelDataType;","            format = format2;","        }","        return format;","    },","","    createPropArray: function (cl, properties, platform) {","        var i, c;","        var propCount = _.isArray(properties) ? properties.length : 0;","        var allPropCount = 2 + propCount + 1;","        var propArray = new (cl.types.ContextProperties)(allPropCount);","        propArray.set(0, cl.defs.CL_CONTEXT_PLATFORM);","        propArray.set(1, ref.address(clUtils.toHandle(platform)));","        for (i = 2, c = 0; c < propCount; i++, c++) {","            propArray.set(i, properties[c]);","        }","        propArray.set(i, 0);","        return propArray;","    },","","    keepAlive: function(promise) {","        var to = setTimeout(_.noop, 1000 * 60 * 60);","        return promise.finally(function() {","            clearTimeout(to);","        });","    }","};","","module.exports = clUtils;",""],"l":{"8":1,"9":1,"10":1,"11":1,"12":1,"14":1,"16":0,"17":0,"19":0,"20":0,"22":0,"23":0,"25":0,"29":0,"30":0,"32":0,"33":0,"35":0,"39":0,"40":0,"42":0,"43":0,"45":0,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"57":0,"61":0,"62":0,"63":0,"64":0,"65":0,"67":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"80":0,"81":0,"85":0,"86":0,"87":0,"92":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clPredef.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clPredef.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":23}},"4":{"start":{"line":7,"column":0},"end":{"line":11,"column":2}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":26}}},"branchMap":{},"code":["\"use strict\";","","var types = require(\"./types\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","","var clPredef = {","    imageFormat: new (types.ImageFormat)(),","    err: ref.alloc(types.ErrorCode),","    num: ref.alloc(\"uint\")","};","","module.exports = clPredef;"],"l":{"3":1,"4":1,"5":1,"7":1,"13":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clDevice.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clDevice.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},"fnMap":{"1":{"name":"createReleaseFunction","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":43}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":42},"end":{"line":30,"column":54}}},"3":{"name":"CLDevice","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":40}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":13},"end":{"line":59,"column":25}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":13},"end":{"line":67,"column":24}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":13},"end":{"line":80,"column":25}}},"7":{"name":"(anonymous_7)","line":89,"loc":{"start":{"line":89,"column":13},"end":{"line":89,"column":25}}},"8":{"name":"(anonymous_8)","line":100,"loc":{"start":{"line":100,"column":13},"end":{"line":100,"column":25}}},"9":{"name":"(anonymous_9)","line":117,"loc":{"start":{"line":117,"column":13},"end":{"line":117,"column":25}}},"10":{"name":"(anonymous_10)","line":130,"loc":{"start":{"line":130,"column":13},"end":{"line":130,"column":25}}},"11":{"name":"(anonymous_11)","line":139,"loc":{"start":{"line":139,"column":13},"end":{"line":139,"column":25}}},"12":{"name":"(anonymous_12)","line":150,"loc":{"start":{"line":150,"column":13},"end":{"line":150,"column":25}}},"13":{"name":"(anonymous_13)","line":161,"loc":{"start":{"line":161,"column":13},"end":{"line":161,"column":25}}},"14":{"name":"(anonymous_14)","line":170,"loc":{"start":{"line":170,"column":13},"end":{"line":170,"column":25}}},"15":{"name":"(anonymous_15)","line":181,"loc":{"start":{"line":181,"column":13},"end":{"line":181,"column":25}}},"16":{"name":"(anonymous_16)","line":192,"loc":{"start":{"line":192,"column":13},"end":{"line":192,"column":25}}},"17":{"name":"(anonymous_17)","line":203,"loc":{"start":{"line":203,"column":13},"end":{"line":203,"column":25}}},"18":{"name":"(anonymous_18)","line":214,"loc":{"start":{"line":214,"column":13},"end":{"line":214,"column":25}}},"19":{"name":"(anonymous_19)","line":225,"loc":{"start":{"line":225,"column":13},"end":{"line":225,"column":25}}},"20":{"name":"(anonymous_20)","line":236,"loc":{"start":{"line":236,"column":13},"end":{"line":236,"column":25}}},"21":{"name":"(anonymous_21)","line":247,"loc":{"start":{"line":247,"column":13},"end":{"line":247,"column":25}}},"22":{"name":"(anonymous_22)","line":258,"loc":{"start":{"line":258,"column":13},"end":{"line":258,"column":25}}},"23":{"name":"(anonymous_23)","line":271,"loc":{"start":{"line":271,"column":13},"end":{"line":271,"column":25}}},"24":{"name":"(anonymous_24)","line":282,"loc":{"start":{"line":282,"column":13},"end":{"line":282,"column":25}}},"25":{"name":"(anonymous_25)","line":293,"loc":{"start":{"line":293,"column":13},"end":{"line":293,"column":25}}},"26":{"name":"(anonymous_26)","line":302,"loc":{"start":{"line":302,"column":13},"end":{"line":302,"column":25}}},"27":{"name":"(anonymous_27)","line":311,"loc":{"start":{"line":311,"column":13},"end":{"line":311,"column":25}}},"28":{"name":"(anonymous_28)","line":322,"loc":{"start":{"line":322,"column":13},"end":{"line":322,"column":25}}},"29":{"name":"(anonymous_29)","line":331,"loc":{"start":{"line":331,"column":13},"end":{"line":331,"column":25}}},"30":{"name":"(anonymous_30)","line":340,"loc":{"start":{"line":340,"column":13},"end":{"line":340,"column":25}}},"31":{"name":"(anonymous_31)","line":349,"loc":{"start":{"line":349,"column":13},"end":{"line":349,"column":25}}},"32":{"name":"(anonymous_32)","line":358,"loc":{"start":{"line":358,"column":13},"end":{"line":358,"column":25}}},"33":{"name":"(anonymous_33)","line":367,"loc":{"start":{"line":367,"column":13},"end":{"line":367,"column":25}}},"34":{"name":"(anonymous_34)","line":378,"loc":{"start":{"line":378,"column":13},"end":{"line":378,"column":25}}},"35":{"name":"(anonymous_35)","line":387,"loc":{"start":{"line":387,"column":13},"end":{"line":387,"column":25}}},"36":{"name":"(anonymous_36)","line":396,"loc":{"start":{"line":396,"column":13},"end":{"line":396,"column":25}}},"37":{"name":"(anonymous_37)","line":405,"loc":{"start":{"line":405,"column":13},"end":{"line":405,"column":25}}},"38":{"name":"(anonymous_38)","line":416,"loc":{"start":{"line":416,"column":13},"end":{"line":416,"column":25}}},"39":{"name":"(anonymous_39)","line":425,"loc":{"start":{"line":425,"column":13},"end":{"line":425,"column":25}}},"40":{"name":"(anonymous_40)","line":434,"loc":{"start":{"line":434,"column":13},"end":{"line":434,"column":25}}},"41":{"name":"(anonymous_41)","line":445,"loc":{"start":{"line":445,"column":13},"end":{"line":445,"column":25}}},"42":{"name":"(anonymous_42)","line":464,"loc":{"start":{"line":464,"column":13},"end":{"line":464,"column":25}}},"43":{"name":"(anonymous_43)","line":481,"loc":{"start":{"line":481,"column":13},"end":{"line":481,"column":25}}},"44":{"name":"(anonymous_44)","line":490,"loc":{"start":{"line":490,"column":13},"end":{"line":490,"column":25}}},"45":{"name":"(anonymous_45)","line":499,"loc":{"start":{"line":499,"column":13},"end":{"line":499,"column":25}}},"46":{"name":"(anonymous_46)","line":508,"loc":{"start":{"line":508,"column":13},"end":{"line":508,"column":25}}},"47":{"name":"(anonymous_47)","line":531,"loc":{"start":{"line":531,"column":13},"end":{"line":531,"column":25}}},"48":{"name":"(anonymous_48)","line":548,"loc":{"start":{"line":548,"column":13},"end":{"line":548,"column":25}}},"49":{"name":"(anonymous_49)","line":558,"loc":{"start":{"line":558,"column":13},"end":{"line":558,"column":25}}},"50":{"name":"(anonymous_50)","line":567,"loc":{"start":{"line":567,"column":13},"end":{"line":567,"column":24}}},"51":{"name":"(anonymous_51)","line":582,"loc":{"start":{"line":582,"column":13},"end":{"line":582,"column":25}}}},"statementMap":{"1":{"start":{"line":23,"column":0},"end":{"line":23,"column":39}},"2":{"start":{"line":24,"column":0},"end":{"line":24,"column":27}},"3":{"start":{"line":26,"column":0},"end":{"line":26,"column":22}},"4":{"start":{"line":28,"column":0},"end":{"line":35,"column":1}},"5":{"start":{"line":29,"column":4},"end":{"line":33,"column":5}},"6":{"start":{"line":30,"column":8},"end":{"line":32,"column":11}},"7":{"start":{"line":31,"column":12},"end":{"line":31,"column":47}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":16}},"9":{"start":{"line":44,"column":0},"end":{"line":47,"column":1}},"10":{"start":{"line":45,"column":4},"end":{"line":45,"column":72}},"11":{"start":{"line":46,"column":4},"end":{"line":46,"column":30}},"12":{"start":{"line":49,"column":0},"end":{"line":49,"column":35}},"13":{"start":{"line":51,"column":0},"end":{"line":587,"column":3}},"14":{"start":{"line":60,"column":12},"end":{"line":60,"column":36}},"15":{"start":{"line":61,"column":12},"end":{"line":61,"column":88}},"16":{"start":{"line":68,"column":12},"end":{"line":68,"column":36}},"17":{"start":{"line":69,"column":12},"end":{"line":69,"column":78}},"18":{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},"19":{"start":{"line":71,"column":16},"end":{"line":71,"column":131}},"20":{"start":{"line":73,"column":12},"end":{"line":73,"column":34}},"21":{"start":{"line":81,"column":12},"end":{"line":81,"column":36}},"22":{"start":{"line":82,"column":12},"end":{"line":82,"column":75}},"23":{"start":{"line":90,"column":12},"end":{"line":90,"column":36}},"24":{"start":{"line":91,"column":12},"end":{"line":91,"column":83}},"25":{"start":{"line":101,"column":12},"end":{"line":101,"column":36}},"26":{"start":{"line":102,"column":12},"end":{"line":102,"column":90}},"27":{"start":{"line":118,"column":12},"end":{"line":118,"column":36}},"28":{"start":{"line":119,"column":12},"end":{"line":119,"column":92}},"29":{"start":{"line":131,"column":12},"end":{"line":131,"column":36}},"30":{"start":{"line":132,"column":12},"end":{"line":132,"column":87}},"31":{"start":{"line":140,"column":12},"end":{"line":140,"column":36}},"32":{"start":{"line":141,"column":12},"end":{"line":141,"column":85}},"33":{"start":{"line":151,"column":12},"end":{"line":151,"column":36}},"34":{"start":{"line":152,"column":12},"end":{"line":152,"column":78}},"35":{"start":{"line":162,"column":12},"end":{"line":162,"column":36}},"36":{"start":{"line":163,"column":12},"end":{"line":163,"column":86}},"37":{"start":{"line":171,"column":12},"end":{"line":171,"column":36}},"38":{"start":{"line":172,"column":12},"end":{"line":172,"column":91}},"39":{"start":{"line":182,"column":12},"end":{"line":182,"column":36}},"40":{"start":{"line":183,"column":12},"end":{"line":183,"column":85}},"41":{"start":{"line":193,"column":12},"end":{"line":193,"column":36}},"42":{"start":{"line":194,"column":12},"end":{"line":194,"column":86}},"43":{"start":{"line":204,"column":12},"end":{"line":204,"column":36}},"44":{"start":{"line":205,"column":12},"end":{"line":205,"column":85}},"45":{"start":{"line":215,"column":12},"end":{"line":215,"column":36}},"46":{"start":{"line":216,"column":12},"end":{"line":216,"column":86}},"47":{"start":{"line":226,"column":12},"end":{"line":226,"column":36}},"48":{"start":{"line":227,"column":12},"end":{"line":227,"column":85}},"49":{"start":{"line":237,"column":12},"end":{"line":237,"column":36}},"50":{"start":{"line":238,"column":12},"end":{"line":238,"column":86}},"51":{"start":{"line":248,"column":12},"end":{"line":248,"column":36}},"52":{"start":{"line":249,"column":12},"end":{"line":249,"column":85}},"53":{"start":{"line":259,"column":12},"end":{"line":259,"column":36}},"54":{"start":{"line":260,"column":12},"end":{"line":260,"column":78}},"55":{"start":{"line":272,"column":12},"end":{"line":272,"column":36}},"56":{"start":{"line":273,"column":12},"end":{"line":273,"column":86}},"57":{"start":{"line":283,"column":12},"end":{"line":283,"column":36}},"58":{"start":{"line":284,"column":12},"end":{"line":284,"column":85}},"59":{"start":{"line":294,"column":12},"end":{"line":294,"column":36}},"60":{"start":{"line":295,"column":12},"end":{"line":295,"column":90}},"61":{"start":{"line":303,"column":12},"end":{"line":303,"column":36}},"62":{"start":{"line":304,"column":12},"end":{"line":304,"column":104}},"63":{"start":{"line":312,"column":12},"end":{"line":312,"column":36}},"64":{"start":{"line":313,"column":12},"end":{"line":313,"column":104}},"65":{"start":{"line":323,"column":12},"end":{"line":323,"column":36}},"66":{"start":{"line":324,"column":12},"end":{"line":324,"column":113}},"67":{"start":{"line":332,"column":12},"end":{"line":332,"column":36}},"68":{"start":{"line":333,"column":12},"end":{"line":333,"column":91}},"69":{"start":{"line":341,"column":12},"end":{"line":341,"column":36}},"70":{"start":{"line":342,"column":12},"end":{"line":342,"column":89}},"71":{"start":{"line":350,"column":12},"end":{"line":350,"column":36}},"72":{"start":{"line":351,"column":12},"end":{"line":351,"column":83}},"73":{"start":{"line":359,"column":12},"end":{"line":359,"column":36}},"74":{"start":{"line":360,"column":12},"end":{"line":360,"column":92}},"75":{"start":{"line":368,"column":12},"end":{"line":368,"column":36}},"76":{"start":{"line":369,"column":12},"end":{"line":369,"column":83}},"77":{"start":{"line":379,"column":12},"end":{"line":379,"column":36}},"78":{"start":{"line":380,"column":12},"end":{"line":380,"column":106}},"79":{"start":{"line":388,"column":12},"end":{"line":388,"column":36}},"80":{"start":{"line":389,"column":12},"end":{"line":389,"column":82}},"81":{"start":{"line":397,"column":12},"end":{"line":397,"column":36}},"82":{"start":{"line":398,"column":12},"end":{"line":398,"column":102}},"83":{"start":{"line":406,"column":12},"end":{"line":406,"column":36}},"84":{"start":{"line":407,"column":12},"end":{"line":407,"column":97}},"85":{"start":{"line":417,"column":12},"end":{"line":417,"column":36}},"86":{"start":{"line":418,"column":12},"end":{"line":418,"column":94}},"87":{"start":{"line":426,"column":12},"end":{"line":426,"column":36}},"88":{"start":{"line":427,"column":12},"end":{"line":427,"column":91}},"89":{"start":{"line":435,"column":12},"end":{"line":435,"column":36}},"90":{"start":{"line":436,"column":12},"end":{"line":436,"column":87}},"91":{"start":{"line":446,"column":12},"end":{"line":446,"column":36}},"92":{"start":{"line":447,"column":12},"end":{"line":447,"column":96}},"93":{"start":{"line":465,"column":12},"end":{"line":465,"column":36}},"94":{"start":{"line":466,"column":12},"end":{"line":466,"column":118}},"95":{"start":{"line":482,"column":12},"end":{"line":482,"column":36}},"96":{"start":{"line":483,"column":12},"end":{"line":483,"column":112}},"97":{"start":{"line":491,"column":12},"end":{"line":491,"column":36}},"98":{"start":{"line":492,"column":12},"end":{"line":492,"column":68}},"99":{"start":{"line":500,"column":12},"end":{"line":500,"column":36}},"100":{"start":{"line":501,"column":12},"end":{"line":501,"column":70}},"101":{"start":{"line":509,"column":12},"end":{"line":509,"column":36}},"102":{"start":{"line":510,"column":12},"end":{"line":510,"column":71}},"103":{"start":{"line":532,"column":12},"end":{"line":532,"column":36}},"104":{"start":{"line":533,"column":12},"end":{"line":533,"column":71}},"105":{"start":{"line":549,"column":12},"end":{"line":549,"column":36}},"106":{"start":{"line":550,"column":12},"end":{"line":550,"column":71}},"107":{"start":{"line":559,"column":12},"end":{"line":559,"column":36}},"108":{"start":{"line":560,"column":12},"end":{"line":560,"column":80}},"109":{"start":{"line":568,"column":12},"end":{"line":568,"column":61}},"110":{"start":{"line":569,"column":12},"end":{"line":569,"column":36}},"111":{"start":{"line":583,"column":12},"end":{"line":583,"column":36}},"112":{"start":{"line":584,"column":12},"end":{"line":584,"column":74}},"113":{"start":{"line":589,"column":0},"end":{"line":589,"column":26}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":25},"end":{"line":69,"column":35}},{"start":{"line":69,"column":40},"end":{"line":69,"column":76}}]},"3":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12}},{"start":{"line":70,"column":12},"end":{"line":70,"column":12}}]}},"code":["/*","License: [MIT](../LICENSE)","","Copyright (c) 2014 Gábor Mező aka [unbornchikken](https://github.com/unbornchikken)","*/","","/*","# CLDevice class","","Represents an OpenCL device.","","**base:** Object","","**Properties:**","","[See below.](#device-properties)","","**Methods:**","- [constructor](#constructor)","*/","","\"use strict\";","var CLWrapper = require(\"./clWrapper\");","var util = require(\"util\");","","var CLPlatform = null;","","function createReleaseFunction(cl, handle) {","    if (cl.version >= 1.2) {","        return CLWrapper._releaseFunction(function () {","            cl.imports.clReleaseDevice(handle);","        });","    }","    return null;","}","","/* ## constructor","","**arguments:**","- **cl:**: object of type [CL11](cl11.html)","- **handle:**: OpenCL handle","- **platform**: Owner [CLPlatform](clPlatform.html) instance (optional)","*/","function CLDevice(cl, handle, platform) {","    CLWrapper.call(this, cl, handle, createReleaseFunction(cl, handle));","    this._platform = platform;","}","","util.inherits(CLDevice, CLWrapper);","","Object.defineProperties(CLDevice.prototype, {","    _classInfoFunction: {","        value: \"clGetDeviceInfo\"","    },","    // ## Device properties","    // ### deviceType","    // Type of the device: CL_DEVICE_TYPE_CPU, CL_DEVICE_TYPE_GPU, etc.","    deviceType: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.DeviceType, this.cl.defs.CL_DEVICE_TYPE);","        }","    },","    // ### platform","    // The owner [CLPlatform](clPlatform.html).","    platform: {","        get: function() {","            this._throwIfReleased();","            CLPlatform = CLPlatform || (CLPlatform = require(\"./clPlatform\"));","            if (!(this._platform instanceof CLPlatform)) {","                this._platform = new CLPlatform(this.cl, this._getInfo(this.cl.types.PlatformId, this.cl.defs.CL_DEVICE_PLATFORM));","            }","            return this._platform;","        }","    },","","    // ### vendorID","    // A unique device vendor identifier. (e.g. PCIe ID)","    vendorID: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_VENDOR_ID);","        }","    },","","    // ### maxComputeUnits","    // The number of parallel compute cores on the OpenCL device (min. 1)","    maxComputeUnits: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_MAX_COMPUTE_UNITS);","        }","    },","","    /* ### maxWorkItemDimensions","    Maximum dimensions that specify the global and local work-item IDs used by","    the data parallel execution model. (Refer to clEnqueueNDRangeKernel)","    The minimum value is 3.*/","    maxWorkItemDimensions: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS);","        }","    },","","    /* ### maxWorkItemSizes","    Maximum number of work-items that can be specified in each dimension of","    the work-group to clEnqueueNDRangeKernel.","","    The minimum value is (1, 1, 1).","","    **returns:**","","    n size_t entries, where n is the value returned by the query for maxWorkItemDimensions.","    */","    maxWorkItemSizes: {","        get: function () {","            this._throwIfReleased();","            return this._getArrayInfo(\"size_t\", this.cl.defs.CL_DEVICE_MAX_WORK_ITEM_SIZES);","        }","    },","","    /* ### maxWorkgroupSize","    Maximum number of work-items in a work-group executing a kernel using the data parallel execution model.","    (Refer to [clEnqueueNDRangeKernel](https://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/clEnqueueNDRangeKernel.html)).","","    The minimum value is 1.","     */","    maxWorkgroupSize: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"size_t\", this.cl.defs.CL_DEVICE_MAX_WORK_GROUP_SIZE);","        }","    },","","    // ### maxClockFrequency","    // Maximum configured clock frequency of the device in MHz","    maxClockFrequency: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_MAX_CLOCK_FREQUENCY);","        }","    },","","    /* ### addressBits","    The default compute device address space size specified as an unsigned integer value in bits.","    Currently supported values are 32 or 64 bits.","    */","    addressBits: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_ADDRESS_BITS);","        }","    },","","    /* ### maxMemAllocSize","    Max size of memory object allocation in bytes.","    The minimum value is max(1/4 * CL_DEVICE_GLOBAL_MEM_SIZE, 128*1024*1024)","    */","    maxMemAllocSize: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint64\", this.cl.defs.CL_DEVICE_MAX_MEM_ALLOC_SIZE);","        }","    },","","    // ### imageSupport","    // true if images are supported by the OpenCL device","    imageSupport: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.Bool, this.cl.defs.CL_DEVICE_IMAGE_SUPPORT);","        }","    },","","    /* ### maxReadImageArgs","    Max number of simultaneous image objects that can be read by a kernel.","    minimum value is 128 if imageSupport is true","    */","    maxReadImageArgs: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_MAX_READ_IMAGE_ARGS);","        }","    },","","    /* ### maxWriteImageArgs","    Max number of simultaneous image objects that can be written by a kernel.","    minimum value is 8 if imageSupport is true","    */","    maxWriteImageArgs: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_MAX_WRITE_IMAGE_ARGS);","        }","    },","","    /* ### image2DMaxWidth","    Max width of 2D image in pixels.","    minimum value is 8192 if imageSupport is true","    */","    image2DMaxWidth: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"size_t\", this.cl.defs.CL_DEVICE_IMAGE2D_MAX_WIDTH);","        }","    },","","    /* ### image2DMaxHeight","    Max height of 2D image in pixels.","    minimum value is 8192 if imageSupport is true","    */","    image2DMaxHeight: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"size_t\", this.cl.defs.CL_DEVICE_IMAGE2D_MAX_HEIGHT);","        }","    },","","    /* ### image3DMaxWidth","    Max width of 3D image in pixels.","    minimum value is 2048 if imageSupport is true","    */","    image3DMaxWidth: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"size_t\", this.cl.defs.CL_DEVICE_IMAGE3D_MAX_WIDTH);","        }","    },","","    /* ### image3DMaxHeight","    Max height of 3D image in pixels.","    minimum value is 2048 if imageSupport is true","    */","    image3DMaxHeight: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"size_t\", this.cl.defs.CL_DEVICE_IMAGE3D_MAX_HEIGHT);","        }","    },","","    /* ### image3DMaxDepth","    Max depth of 3D image in pixels.","    minimum value is 2048 if imageSupport is true","    */","    image3DMaxDepth: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"size_t\", this.cl.defs.CL_DEVICE_IMAGE3D_MAX_DEPTH);","        }","    },","","    /* ### maxSamplers","    Maximum number of samplers that can be used in a kernel.","    minimum value is 16 if imageSupport is true","    */","    maxSamplers: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_MAX_SAMPLERS);","        }","    },","","    /* ### maxParameterSize","    Max size in bytes of the arguments that can be passed to a kernel.","","    The minimum value is 1024. For this minimum value, only a maximum of","    128 arguments can be passed to a kernel","    */","    maxParameterSize: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"size_t\", this.cl.defs.CL_DEVICE_MAX_PARAMETER_SIZE);","        }","    },","","    /* ### memBaseAddrAlign","    The minimum value is the size (in bits) of the largest OpenCL built-in data","    type supported by the device (long16 in FULL profile, long16 or int16 in EMBEDDED profile).","    */","    memBaseAddrAlign: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_MEM_BASE_ADDR_ALIGN);","        }","    },","","    /* ### minDataTypeAlignSize","    The minimum value is the size (in bytes) of the largest OpenCL builtin","    data type supported by the device (long16 in FULL profile, long16 or int16 in EMBEDDED profile).","    */","    minDataTypeAlignSize: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_MIN_DATA_TYPE_ALIGN_SIZE);","        }","    },","","    // ### singleFpConfig","    // Describes single precision floating-point capability of the device. This is a bit-field, see the docs","    singleFpConfig: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.DeviceFpConfig, this.cl.defs.CL_DEVICE_SINGLE_FP_CONFIG);","        }","    },","","    // ### doubleFpConfig","    // Describes double precision floating-point capability of the device. Make sure the cl_khr_fp64 extension is supported","    doubleFpConfig: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.DeviceFpConfig, this.cl.defs.CL_DEVICE_DOUBLE_FP_CONFIG);","        }","    },","","    /* ### globalMemCacheType","    Type of global memory cache supported. Valid values are:","    CL_NONE, CL_READ_ONLY_CACHE and CL_READ_WRITE_CACHE","    */","    globalMemCacheType: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.DeviceMemCacheType, this.cl.defs.CL_DEVICE_GLOBAL_MEM_CACHE_TYPE);","        }","    },","","    // ### globalMemCacheLineSize","    // size of global memory cache line in bytes.","    globalMemCacheLineSize: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_GLOBAL_MEM_CACHELINE_SIZE);","        }","    },","","    // ### globalMemCacheSize","    // size of global memory cache in bytes.","    globalMemCacheSize: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint64\", this.cl.defs.CL_DEVICE_GLOBAL_MEM_CACHE_SIZE);","        }","    },","","    // ### globalMemSize","    // size of global device memory in bytes.","    globalMemSize: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint64\", this.cl.defs.CL_DEVICE_GLOBAL_MEM_SIZE);","        }","    },","","    // ### maxConstBufferSize","    // Max size in bytes of a constant buffer allocation (min. 64 KB)","    maxConstBufferSize: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint64\", this.cl.defs.CL_DEVICE_MAX_CONSTANT_BUFFER_SIZE);","        }","    },","","    // ### maxConstArgs","    // Max number of arguments declared with the __constant qualifier in a kernel (min. 8)","    maxConstArgs: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_DEVICE_MAX_CONSTANT_ARGS);","        }","    },","","    /* ### localMemType","    Type of local memory supported.","    This can be set to CL_LOCAL implying dedicated local memory storage such as SRAM, or CL_GLOBAL","    */","    localMemType: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.DeviceLocalMemType, this.cl.defs.CL_DEVICE_LOCAL_MEM_TYPE);","        }","    },","","    // ### localMemSize","    // Size of local memory arena in bytes. The minimum value is 32 KB.","    localMemSize: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint64\", this.cl.defs.CL_DEVICE_LOCAL_MEM_SIZE);","        }","    },","","    // ### errorCorrectionSupport","    // true if the device implements error correction for all accesses to compute device memory (global and constant)","    errorCorrectionSupport: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.Bool, this.cl.defs.CL_DEVICE_ERROR_CORRECTION_SUPPORT);","        }","    },","","    // ### hostUnifiedMemory","    // returns true if the device and the host have a unified memory subsystem","    hostUnifiedMemory: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.Bool, this.cl.defs.CL_DEVICE_HOST_UNIFIED_MEMORY);","        }","    },","","    /* ### profilingTimerResolution","    Describes the resolution of device timer.","    This is measured in nanoseconds.","    */","    profilingTimerResolution: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"size_t\", this.cl.defs.CL_DEVICE_PROFILING_TIMER_RESOLUTION);","        }","    },","","    // ### littleEndian","    // is device a little endian device?","    littleEndian: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.Bool, this.cl.defs.CL_DEVICE_ENDIAN_LITTLE);","        }","    },","","    // ### available","    // is device available?","    available: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.Bool, this.cl.defs.CL_DEVICE_AVAILABLE);","        }","    },","","    /* ### compilerAvailable","    does the implementation have a compiler to compile the program source?","    This can be CL_FALSE for the embedded platform profile only.","    */","    compilerAvailable: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.Bool, this.cl.defs.CL_DEVICE_COMPILER_AVAILABLE);","        }","    },","","    /* ### deviceExecCapabilities","    Describes the execution capabilities of the device.","","    **returns:**","","    a bit-field that describes one or more of the following values:","","    - CL_EXEC_KERNEL – The OpenCL device can execute OpenCL kernels.","    - CL_EXEC_NATIVE_KERNEL – The OpenCL device can execute native kernels.","","    The mandated minimum capability is: CL_EXEC_KERNEL.","    */","    deviceExecCapabilities: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.DeviceExecCapabilities, this.cl.defs.CL_DEVICE_EXECUTION_CAPABILITIES);","        }","    },","","    /* ### commandQueueProperties","    Describes the command-queue properties supported by the device.","","    **returns:**","","    a bit-field that describes one or more of the following values:","","    - CL_QUEUE_OUT_OF_ORDER_EXEC_MODE_ENABLE","    - CL_QUEUE_PROFILING_ENABLE","     */","    commandQueueProperties: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.CommandQueueProperties, this.cl.defs.CL_DEVICE_QUEUE_PROPERTIES);","        }","    },","","    // ### name","    // get device name","    name: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_DEVICE_NAME);","        }","    },","","    // ### vendor","    // get device vendor","    vendor: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_DEVICE_VENDOR);","        }","    },","","    // ### driverVersion","    // get device OpenCL driver version in the form major_number.minor_number","    driverVersion: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_DRIVER_VERSION);","        }","    },","","    /* ### profile","","    get OpenCL profile string","","    **returns:**","","    the profile name supported by the device.","","    The profile name returned can be one of the following strings:","","    - FULL_PROFILE - if the device supports the OpenCL specification","    (functionality defined as part of the core specification and does not require","    any extensions to be supported).)","","    - EMBEDDED_PROFILE - if the device supports the OpenCL embedded profile.","     */","    profile: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_DEVICE_PROFILE);","        }","    },","","    /* ### clVersion","    get OpenCL version string","","    **returns:**","","    OpenCL version supported by the device.","","    This version string has the following format:","    OpenCL<space><major_version.minor_version><space><vendor-specific information>","    */","    clVersion: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_DEVICE_VERSION);","        }","    },","","    /* ### clCVersion","    Returns the highest OpenCL C version supported by the compiler for this device","    */","    clCVersion: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_DEVICE_OPENCL_C_VERSION);","        }","    },","","    // ### numVersion","    // Value of the clCVersion property converted to a number, like: 1.1 or 1.2","    numVersion: {","        get: function() {","            var m = /^OpenCL\\sC\\s(.*)/.exec(this.clCVersion);","            return parseFloat(m[1]);","        }","    },","","    /* ### extensions","    get extensions supported by the device","","    **returns:**","","    Returns a space separated list of extension names","    (the extension names themselves do not contain any spaces).","    */","    extensions: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_DEVICE_EXTENSIONS);","        }","    }","});","","module.exports = CLDevice;"],"l":{"23":1,"24":1,"26":1,"28":1,"29":0,"30":0,"31":0,"34":0,"44":1,"45":0,"46":0,"49":1,"51":1,"60":0,"61":0,"68":0,"69":0,"70":0,"71":0,"73":0,"81":0,"82":0,"90":0,"91":0,"101":0,"102":0,"118":0,"119":0,"131":0,"132":0,"140":0,"141":0,"151":0,"152":0,"162":0,"163":0,"171":0,"172":0,"182":0,"183":0,"193":0,"194":0,"204":0,"205":0,"215":0,"216":0,"226":0,"227":0,"237":0,"238":0,"248":0,"249":0,"259":0,"260":0,"272":0,"273":0,"283":0,"284":0,"294":0,"295":0,"303":0,"304":0,"312":0,"313":0,"323":0,"324":0,"332":0,"333":0,"341":0,"342":0,"350":0,"351":0,"359":0,"360":0,"368":0,"369":0,"379":0,"380":0,"388":0,"389":0,"397":0,"398":0,"406":0,"407":0,"417":0,"418":0,"426":0,"427":0,"435":0,"436":0,"446":0,"447":0,"465":0,"466":0,"482":0,"483":0,"491":0,"492":0,"500":0,"501":0,"509":0,"510":0,"532":0,"533":0,"549":0,"550":0,"559":0,"560":0,"568":0,"569":0,"583":0,"584":0,"589":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clContext.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clContext.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"createReleaseFunction","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":43}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":38},"end":{"line":39,"column":50}}},"3":{"name":"CLContext1","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":29}}},"4":{"name":"CLContext2","line":88,"loc":{"start":{"line":88,"column":0},"end":{"line":88,"column":54}}},"5":{"name":"CLContext","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":24}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":125,"column":13},"end":{"line":125,"column":25}}},"7":{"name":"(anonymous_7)","line":132,"loc":{"start":{"line":132,"column":13},"end":{"line":132,"column":25}}},"8":{"name":"(anonymous_8)","line":140,"loc":{"start":{"line":140,"column":13},"end":{"line":140,"column":25}}},"9":{"name":"(anonymous_9)","line":144,"loc":{"start":{"line":144,"column":21},"end":{"line":144,"column":36}}},"10":{"name":"(anonymous_10)","line":152,"loc":{"start":{"line":152,"column":13},"end":{"line":152,"column":25}}},"11":{"name":"(anonymous_11)","line":181,"loc":{"start":{"line":181,"column":36},"end":{"line":181,"column":58}}},"12":{"name":"(anonymous_12)","line":202,"loc":{"start":{"line":202,"column":47},"end":{"line":202,"column":70}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"2":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}},"3":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}},"4":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}},"5":{"start":{"line":30,"column":0},"end":{"line":30,"column":37}},"6":{"start":{"line":31,"column":0},"end":{"line":31,"column":35}},"7":{"start":{"line":32,"column":0},"end":{"line":32,"column":23}},"8":{"start":{"line":33,"column":0},"end":{"line":33,"column":35}},"9":{"start":{"line":34,"column":0},"end":{"line":34,"column":37}},"10":{"start":{"line":36,"column":0},"end":{"line":36,"column":21}},"11":{"start":{"line":38,"column":0},"end":{"line":42,"column":1}},"12":{"start":{"line":39,"column":4},"end":{"line":41,"column":7}},"13":{"start":{"line":40,"column":8},"end":{"line":40,"column":44}},"14":{"start":{"line":51,"column":0},"end":{"line":76,"column":1}},"15":{"start":{"line":52,"column":4},"end":{"line":52,"column":10}},"16":{"start":{"line":53,"column":4},"end":{"line":53,"column":37}},"17":{"start":{"line":54,"column":4},"end":{"line":54,"column":51}},"18":{"start":{"line":55,"column":4},"end":{"line":55,"column":53}},"19":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"20":{"start":{"line":57,"column":8},"end":{"line":57,"column":50}},"21":{"start":{"line":59,"column":4},"end":{"line":59,"column":28}},"22":{"start":{"line":60,"column":4},"end":{"line":60,"column":64}},"23":{"start":{"line":61,"column":4},"end":{"line":68,"column":5}},"24":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"25":{"start":{"line":63,"column":12},"end":{"line":63,"column":61}},"26":{"start":{"line":67,"column":8},"end":{"line":67,"column":54}},"27":{"start":{"line":70,"column":4},"end":{"line":70,"column":27}},"28":{"start":{"line":71,"column":4},"end":{"line":71,"column":93}},"29":{"start":{"line":73,"column":4},"end":{"line":73,"column":23}},"30":{"start":{"line":75,"column":4},"end":{"line":75,"column":72}},"31":{"start":{"line":88,"column":0},"end":{"line":101,"column":1}},"32":{"start":{"line":89,"column":4},"end":{"line":89,"column":25}},"33":{"start":{"line":91,"column":4},"end":{"line":91,"column":58}},"34":{"start":{"line":93,"column":4},"end":{"line":93,"column":70}},"35":{"start":{"line":95,"column":4},"end":{"line":95,"column":27}},"36":{"start":{"line":96,"column":4},"end":{"line":96,"column":92}},"37":{"start":{"line":98,"column":4},"end":{"line":98,"column":23}},"38":{"start":{"line":100,"column":4},"end":{"line":100,"column":72}},"39":{"start":{"line":112,"column":0},"end":{"line":119,"column":1}},"40":{"start":{"line":113,"column":4},"end":{"line":118,"column":5}},"41":{"start":{"line":114,"column":8},"end":{"line":114,"column":42}},"42":{"start":{"line":117,"column":8},"end":{"line":117,"column":42}},"43":{"start":{"line":121,"column":0},"end":{"line":121,"column":36}},"44":{"start":{"line":123,"column":0},"end":{"line":157,"column":3}},"45":{"start":{"line":126,"column":12},"end":{"line":126,"column":38}},"46":{"start":{"line":133,"column":12},"end":{"line":133,"column":36}},"47":{"start":{"line":134,"column":12},"end":{"line":134,"column":78}},"48":{"start":{"line":141,"column":12},"end":{"line":141,"column":36}},"49":{"start":{"line":142,"column":12},"end":{"line":142,"column":29}},"50":{"start":{"line":143,"column":12},"end":{"line":146,"column":19}},"51":{"start":{"line":145,"column":20},"end":{"line":145,"column":49}},"52":{"start":{"line":153,"column":12},"end":{"line":153,"column":36}},"53":{"start":{"line":154,"column":12},"end":{"line":154,"column":84}},"54":{"start":{"line":181,"column":0},"end":{"line":185,"column":2}},"55":{"start":{"line":182,"column":4},"end":{"line":182,"column":28}},"56":{"start":{"line":183,"column":4},"end":{"line":183,"column":66}},"57":{"start":{"line":184,"column":4},"end":{"line":184,"column":43}},"58":{"start":{"line":202,"column":0},"end":{"line":227,"column":2}},"59":{"start":{"line":203,"column":4},"end":{"line":203,"column":28}},"60":{"start":{"line":204,"column":4},"end":{"line":204,"column":10}},"61":{"start":{"line":205,"column":4},"end":{"line":205,"column":39}},"62":{"start":{"line":206,"column":4},"end":{"line":206,"column":104}},"63":{"start":{"line":208,"column":4},"end":{"line":208,"column":28}},"64":{"start":{"line":210,"column":4},"end":{"line":210,"column":33}},"65":{"start":{"line":211,"column":4},"end":{"line":211,"column":64}},"66":{"start":{"line":213,"column":4},"end":{"line":213,"column":103}},"67":{"start":{"line":215,"column":4},"end":{"line":215,"column":28}},"68":{"start":{"line":217,"column":4},"end":{"line":217,"column":20}},"69":{"start":{"line":218,"column":4},"end":{"line":218,"column":13}},"70":{"start":{"line":219,"column":4},"end":{"line":225,"column":5}},"71":{"start":{"line":220,"column":8},"end":{"line":220,"column":34}},"72":{"start":{"line":221,"column":8},"end":{"line":224,"column":11}},"73":{"start":{"line":226,"column":4},"end":{"line":226,"column":18}},"74":{"start":{"line":229,"column":0},"end":{"line":229,"column":27}}},"branchMap":{"1":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":32},"end":{"line":54,"column":46}},{"start":{"line":54,"column":49},"end":{"line":54,"column":50}}]},"2":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":32},"end":{"line":55,"column":42}},{"start":{"line":55,"column":45},"end":{"line":55,"column":52}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"5":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":17},"end":{"line":91,"column":27}},{"start":{"line":91,"column":31},"end":{"line":91,"column":57}}]},"6":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"7":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":16},"end":{"line":183,"column":25}},{"start":{"line":183,"column":30},"end":{"line":183,"column":64}}]}},"code":["/*","License: [MIT](../LICENSE)","","Copyright (c) 2014 Gábor Mező aka [unbornchikken](https://github.com/unbornchikken)","*/","","/*","# CLContext class","","Represents an OpenCL context.","","**base:** [CLWrapper](clWrapper.html)","","**Properties:**","- [numDevices](#numdevices)","- [devices](#devices)","- [contextProperties](#contextproperties)","","**Methods:**","- [constructor](#constructor)","- [createProgram](#createprogram)","- [getSupportedImageFormats](#getsupportedimageformats)","*/","","\"use strict\";","var CLWrapper = require(\"./clWrapper\");","var util = require(\"util\");","var _ = require(\"lodash\");","var CLPlatform = require(\"./clPlatform\");","var CLDevice = require(\"./clDevice\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var clUtils = require(\"./clUtils\");","var clPredef = require(\"./clPredef\");","","var CLProgram = null;","","function createReleaseFunction(cl, handle) {","    return CLWrapper._releaseFunction(function () {","        cl.imports.clReleaseContext(handle);","    });","}","","/* #### constructor 1","Context can be created from devices.","","**arguments:**","- **devices:** a single [CLDevice](clDevice.html) instance or handle,","    or an array of [CLDevice](clDevice.html) instances or handles","*/","function CLContext1(devices) {","    var i;","    var isArray = _.isArray(devices);","    var deviceCount = isArray ? devices.length : 1;","    var firstDevice = isArray ? devices[0] : devices;","    if (!(firstDevice instanceof CLDevice)) {","        throw new TypeError(\"Arguments unknown.\");","    }","    var cl = firstDevice.cl;","    var deviceArray = new (cl.types.DeviceIdArray)(deviceCount);","    if (isArray) {","        for (i = 0; i < deviceCount; i++) {","            deviceArray.set(i, clUtils.toHandle(devices[i]));","        }","    }","    else {","        deviceArray.set(0, clUtils.toHandle(devices));","    }","","    var err = clPredef.err;","    var handle = cl.imports.clCreateContext(null, deviceCount, deviceArray, null, null, err);","","    cl.checkError(err);","","    CLWrapper.call(this, cl, handle, createReleaseFunction(cl, handle));","}","","/* #### constructor 2","","Context can be created for a platform.","","**arguments:**","- **platform:** a [CLPlatform](clPlatform.html) instance or a handle","- **deviceType:** CL_DEVICE_TYPE_CPU, CL_DEVICE_TYPE_GPU, etc.","- **properties:** [clCreateContextFromType](https://www.khronos.org/registry/cl/sdk/1.2/docs/man/xhtml/clCreateContextFromType.html)","API properties and values in an array, except CL_CONTEXT_PLATFORM, which is passed automatically.","*/","function CLContext2(platform, deviceType, properties) {","    var cl = platform.cl;","","    deviceType = deviceType || cl.defs.CL_DEVICE_TYPE_ALL;","","    var propArray = clUtils.createPropArray(cl, properties, platform);","","    var err = clPredef.err;","    var handle = cl.imports.clCreateContextFromType(propArray, deviceType, null, null, err);","","    cl.checkError(err);","","    CLWrapper.call(this, cl, handle, createReleaseFunction(cl, handle));","}","","/*","## constructor","","### [version 1](#constructor-1)","Context can be created from devices.","","### [version 2](#constructor-2)","Context can be created for a platform.","*/","function CLContext(arg) {","    if (arg instanceof CLPlatform) {","        CLContext2.apply(this, arguments);","    }","    else {","        CLContext1.apply(this, arguments);","    }","}","","util.inherits(CLContext, CLWrapper);","","Object.defineProperties(CLContext.prototype, {","    _classInfoFunction: {","        get: function () {","            return \"clGetContextInfo\";","        }","    },","    // ## numDevices","    // Number of supported devices","    numDevices: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_CONTEXT_NUM_DEVICES);","        }","    },","    // ## numDevices","    // Array of supported devices as [CLDevice](clDevice.html) instances.","    devices: {","        get: function () {","            this._throwIfReleased();","            var cl = this.cl;","            return this._getArrayInfo(cl.types.DeviceId, cl.defs.CL_CONTEXT_DEVICES)","                .map(function (did) {","                    return new CLDevice(cl, did);","                });","        }","    },","    // ## contextProperties","    // Returns the properties and values of the context.","    contextProperties: {","        get: function () {","            this._throwIfReleased();","            return this._getArrayInfo(\"size_t\", this.cl.defs.CL_CONTEXT_PROPERTIES);","        }","    }","});","","/* ## createProgram","","Creates an OpenCL program ...","","### version 1","","... from source","","**arguments:**","- **source:** OpenCL program source code string.","","### version 2","","... from binaries","","**arguments:**","- **binaries:** array of Buffers or a single Buffer containing the precompiled program binaries","- **devices:** corresponding CLDevice instances or handles for the above binaries","","**returns**:","[CLProgram](clProgram.html) instance","*/","CLContext.prototype.createProgram = function (arg1, arg2) {","    this._throwIfReleased();","    CLProgram = CLProgram || (CLProgram = require(\"./clProgram\"));","    return new CLProgram(this, arg1, arg2);","};","","/* ## getSupportedImageFormats","","**arguments:**","- **flags:** [cl_mem_flags](https://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/enums.html#cl_mem_flags)","- **type:** [cl_mem_object_type](https://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/enums.html#cl_mem_object_type)","","**returns**:","","the supported image formats represented in an array of the following objects:","","    {","        imageChannelOrder: ...,","        imageChannelDataType: ...","    }","*/","CLContext.prototype.getSupportedImageFormats = function (flags, type) {","    this._throwIfReleased();","    var i;","    var numFormats = ref.alloc(\"uint\");","    var err = this.cl.imports.clGetSupportedImageFormats(this.handle, flags, type, 0, null, numFormats);","","    this.cl.checkError(err);","","    var num = numFormats.deref();","    var resultArray = new (this.cl.types.ImageFormatArray)(num);","","    err = this.cl.imports.clGetSupportedImageFormats(this.handle, flags, type, num, resultArray, null);","","    this.cl.checkError(err);","","    var result = [];","    var item;","    for (i = 0; i < num; i++) {","        item = resultArray.get(i);","        result.push({","            imageChannelOrder: item.imageChannelOrder,","            imageChannelDataType: item.imageChannelDataType","        });","    }","    return result;","};","","module.exports = CLContext;"],"l":{"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"36":1,"38":1,"39":0,"40":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"67":0,"70":0,"71":0,"73":0,"75":0,"88":1,"89":0,"91":0,"93":0,"95":0,"96":0,"98":0,"100":0,"112":1,"113":0,"114":0,"117":0,"121":1,"123":1,"126":0,"133":0,"134":0,"141":0,"142":0,"143":0,"145":0,"153":0,"154":0,"181":1,"182":0,"183":0,"184":0,"202":1,"203":0,"204":0,"205":0,"206":0,"208":0,"210":0,"211":0,"213":0,"215":0,"217":0,"218":0,"219":0,"220":0,"221":0,"226":0,"229":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clBuffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clBuffer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":1,"30":0,"31":1,"32":0,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"CLBuffer1","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":54}}},"2":{"name":"CLBuffer2","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}}},"3":{"name":"CLBuffer","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":20}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":17},"end":{"line":31,"column":62}}},"5":{"name":"(anonymous_5)","line":43,"loc":{"start":{"line":43,"column":16},"end":{"line":43,"column":44}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":24},"end":{"line":47,"column":52}}},"7":{"name":"(anonymous_7)","line":51,"loc":{"start":{"line":51,"column":25},"end":{"line":51,"column":53}}},"8":{"name":"(anonymous_8)","line":59,"loc":{"start":{"line":59,"column":13},"end":{"line":59,"column":25}}},"9":{"name":"(anonymous_9)","line":65,"loc":{"start":{"line":65,"column":13},"end":{"line":65,"column":25}}},"10":{"name":"(anonymous_10)","line":73,"loc":{"start":{"line":73,"column":37},"end":{"line":73,"column":68}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":23}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"6":{"start":{"line":9,"column":0},"end":{"line":16,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":30}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":24}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":44}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":127}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":23}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":41}},"13":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":41}},"15":{"start":{"line":22,"column":0},"end":{"line":29,"column":1}},"16":{"start":{"line":23,"column":4},"end":{"line":28,"column":5}},"17":{"start":{"line":24,"column":8},"end":{"line":24,"column":41}},"18":{"start":{"line":27,"column":8},"end":{"line":27,"column":41}},"19":{"start":{"line":31,"column":0},"end":{"line":41,"column":2}},"20":{"start":{"line":32,"column":4},"end":{"line":32,"column":48}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":52}},"22":{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},"23":{"start":{"line":35,"column":8},"end":{"line":35,"column":50}},"24":{"start":{"line":37,"column":9},"end":{"line":39,"column":5}},"25":{"start":{"line":38,"column":8},"end":{"line":38,"column":51}},"26":{"start":{"line":40,"column":4},"end":{"line":40,"column":57}},"27":{"start":{"line":43,"column":0},"end":{"line":45,"column":2}},"28":{"start":{"line":44,"column":4},"end":{"line":44,"column":50}},"29":{"start":{"line":47,"column":0},"end":{"line":49,"column":2}},"30":{"start":{"line":48,"column":4},"end":{"line":48,"column":56}},"31":{"start":{"line":51,"column":0},"end":{"line":53,"column":2}},"32":{"start":{"line":52,"column":4},"end":{"line":52,"column":57}},"33":{"start":{"line":55,"column":0},"end":{"line":55,"column":34}},"34":{"start":{"line":57,"column":0},"end":{"line":71,"column":3}},"35":{"start":{"line":60,"column":12},"end":{"line":60,"column":36}},"36":{"start":{"line":61,"column":12},"end":{"line":61,"column":71}},"37":{"start":{"line":66,"column":12},"end":{"line":66,"column":36}},"38":{"start":{"line":67,"column":12},"end":{"line":67,"column":103}},"39":{"start":{"line":68,"column":12},"end":{"line":68,"column":43}},"40":{"start":{"line":73,"column":0},"end":{"line":83,"column":2}},"41":{"start":{"line":74,"column":4},"end":{"line":74,"column":28}},"42":{"start":{"line":75,"column":4},"end":{"line":75,"column":49}},"43":{"start":{"line":76,"column":4},"end":{"line":76,"column":24}},"44":{"start":{"line":77,"column":4},"end":{"line":77,"column":20}},"45":{"start":{"line":78,"column":4},"end":{"line":78,"column":25}},"46":{"start":{"line":79,"column":4},"end":{"line":79,"column":49}},"47":{"start":{"line":80,"column":4},"end":{"line":80,"column":128}},"48":{"start":{"line":81,"column":4},"end":{"line":81,"column":28}},"49":{"start":{"line":82,"column":4},"end":{"line":82,"column":49}},"50":{"start":{"line":85,"column":0},"end":{"line":85,"column":26}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":14},"end":{"line":10,"column":21}},{"start":{"line":10,"column":25},"end":{"line":10,"column":29}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":9},"end":{"line":37,"column":9}},{"start":{"line":37,"column":9},"end":{"line":37,"column":9}}]}},"code":["\"use strict\";","","var util = require(\"util\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var CLMemory = require(\"./clMemory\");","var clUtils = require(\"./clUtils\");","","function CLBuffer1(context, flags, dataSize, hostPtr) {","    hostPtr = hostPtr || null;","    var cl = context.cl;","    var err = ref.alloc(cl.types.ErrorCode);","    var handle = cl.imports.clCreateBuffer(clUtils.toHandle(context), flags, dataSize, clUtils.toPtr(hostPtr, \"hostPtr\"), err);","    cl.checkError(err);","    CLMemory.call(this, context, handle);","}","","function CLBuffer2(context, handle) {","    CLMemory.call(this, context, handle);","}","","function CLBuffer() {","    if (arguments.length === 2) {","        CLBuffer2.apply(this, arguments);","    }","    else {","        CLBuffer1.apply(this, arguments);","    }","}","","CLBuffer._wrap = function (context, readOrWriteOnly, hostPtr) {","    var ptr = clUtils.toPtr(hostPtr, \"hostPtr\");","    var flags = context.cl.defs.CL_MEM_USE_HOST_PTR;","    if (readOrWriteOnly === \"readOnly\") {","        flags |= context.cl.defs.CL_MEM_READ_ONLY;","    }","    else if (readOrWriteOnly === \"writeOnly\") {","        flags |= context.cl.defs.CL_MEM_WRITE_ONLY;","    }","    return new CLBuffer(context, flags, ptr.length, ptr);","};","","CLBuffer.wrap = function (context, hostPtr) {","    return CLBuffer._wrap(context, null, hostPtr);","};","","CLBuffer.wrapReadOnly = function (context, hostPtr) {","    return CLBuffer._wrap(context, \"readOnly\", hostPtr);","};","","CLBuffer.wrapWriteOnly = function (context, hostPtr) {","    return CLBuffer._wrap(context, \"writeOnly\", hostPtr);","};","","util.inherits(CLBuffer, CLMemory);","","Object.defineProperties(CLBuffer.prototype, {","    offset: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"size_t\", this.cl.defs.CL_MEM_OFFSET);","        }","    },","    superBuffer: {","        get: function () {","            this._throwIfReleased();","            var subHandle = this._getInfo(this.cl.types.Mem, this.cl.defs.CL_MEM_ASSOCIATED_MEMOBJECT);","            return new CLBuffer(subHandle);","        }","    }","});","","CLBuffer.prototype.createSubBuffer = function (flags, origin, size) {","    this._throwIfReleased();","    var reg = new (this.cl.types.BufferRegion)();","    reg.origin = origin;","    reg.size = size;","    var pReg = reg.ref();","    var err = ref.alloc(this.cl.types.ErrorCode);","    var subHandle = this.cl.imports.clCreateSubBuffer(this.handle, flags, this.cl.defs.CL_BUFFER_CREATE_TYPE_REGION, pReg, err);","    this.cl.checkError(err);","    return new CLBuffer(this.context, subHandle);","};","","module.exports = CLBuffer;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"18":1,"19":0,"22":1,"23":0,"24":0,"27":0,"31":1,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0,"43":1,"44":0,"47":1,"48":0,"51":1,"52":0,"55":1,"57":1,"60":0,"61":0,"66":0,"67":0,"68":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"85":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clMemory.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clMemory.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"createReleaseFunction","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":38},"end":{"line":11,"column":50}}},"3":{"name":"CLMemory","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":13},"end":{"line":25,"column":25}}},"5":{"name":"(anonymous_5)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":25}}},"6":{"name":"(anonymous_6)","line":36,"loc":{"start":{"line":36,"column":13},"end":{"line":36,"column":25}}},"7":{"name":"(anonymous_7)","line":42,"loc":{"start":{"line":42,"column":13},"end":{"line":42,"column":25}}},"8":{"name":"(anonymous_8)","line":48,"loc":{"start":{"line":48,"column":13},"end":{"line":48,"column":25}}},"9":{"name":"(anonymous_9)","line":55,"loc":{"start":{"line":55,"column":43},"end":{"line":55,"column":57}}},"10":{"name":"(anonymous_10)","line":62,"loc":{"start":{"line":62,"column":37},"end":{"line":62,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"7":{"start":{"line":10,"column":0},"end":{"line":14,"column":1}},"8":{"start":{"line":11,"column":4},"end":{"line":13,"column":7}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":46}},"10":{"start":{"line":16,"column":0},"end":{"line":19,"column":1}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":88}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":27}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"14":{"start":{"line":23,"column":0},"end":{"line":53,"column":3}},"15":{"start":{"line":26,"column":12},"end":{"line":26,"column":40}},"16":{"start":{"line":31,"column":12},"end":{"line":31,"column":36}},"17":{"start":{"line":32,"column":12},"end":{"line":32,"column":72}},"18":{"start":{"line":37,"column":12},"end":{"line":37,"column":36}},"19":{"start":{"line":38,"column":12},"end":{"line":38,"column":74}},"20":{"start":{"line":43,"column":12},"end":{"line":43,"column":36}},"21":{"start":{"line":44,"column":12},"end":{"line":44,"column":69}},"22":{"start":{"line":49,"column":12},"end":{"line":49,"column":36}},"23":{"start":{"line":50,"column":12},"end":{"line":50,"column":84}},"24":{"start":{"line":55,"column":0},"end":{"line":60,"column":2}},"25":{"start":{"line":56,"column":4},"end":{"line":56,"column":28}},"26":{"start":{"line":57,"column":4},"end":{"line":57,"column":29}},"27":{"start":{"line":58,"column":4},"end":{"line":58,"column":128}},"28":{"start":{"line":59,"column":4},"end":{"line":59,"column":28}},"29":{"start":{"line":62,"column":0},"end":{"line":72,"column":2}},"30":{"start":{"line":63,"column":4},"end":{"line":63,"column":28}},"31":{"start":{"line":64,"column":4},"end":{"line":64,"column":43}},"32":{"start":{"line":65,"column":4},"end":{"line":65,"column":43}},"33":{"start":{"line":66,"column":4},"end":{"line":66,"column":80}},"34":{"start":{"line":67,"column":4},"end":{"line":67,"column":28}},"35":{"start":{"line":68,"column":4},"end":{"line":71,"column":6}},"36":{"start":{"line":74,"column":0},"end":{"line":74,"column":26}}},"branchMap":{},"code":["\"use strict\";","","var CLWrapper = require(\"./clWrapper\");","var util = require(\"util\");","var _ = require(\"lodash\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var assert = require(\"assert\");","","function createReleaseFunction(cl, handle) {","    return CLWrapper._releaseFunction(function () {","        cl.imports.clReleaseMemObject(handle);","    });","}","","function CLMemory(context, handle) {","    CLWrapper.call(this, context.cl, handle, createReleaseFunction(context.cl, handle));","    this.context = context;","}","","util.inherits(CLMemory, CLWrapper);","","Object.defineProperties(CLMemory.prototype, {","    _classInfoFunction: {","        get: function () {","            return \"clGetMemObjectInfo\";","        }","    },","    mapCount: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_MEM_MAP_COUNT);","        }","    },","    hostPtr: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"pointer\", this.cl.defs.CL_MEM_HOST_PTR);","        }","    },","    size: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"size_t\", this.cl.defs.CL_MEM_SIZE);","        }","    },","    memFlags: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.MemFlags, this.cl.defs.CL_MEM_FLAGS);","        }","    }","});","","CLMemory.prototype.setDestructorCallback = function (cb) {","    this._throwIfReleased();","    assert(_.isFunction(cb));","    var err = this.cl.imports.setDestructorCallback(this.handle, this.cl.types.MemObjectDestructorCallback.toPointer(cb), null);","    this.cl.checkError(err);","};","","CLMemory.prototype.getGLObjectInfo = function () {","    this._throwIfReleased();","    var gl_object_type = ref.alloc(\"uint\");","    var gl_object_name = ref.alloc(\"uint\");","    var err = this.cl.imports.clGetGLObjectInfo(gl_object_type, gl_object_name);","    this.cl.checkError(err);","    return {","        glObjectType: gl_object_type.deref(),","        glObjectName: gl_object_name.deref()","    };","};","","module.exports = CLMemory;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":0,"12":0,"16":1,"17":0,"18":0,"21":1,"23":1,"26":0,"31":0,"32":0,"37":0,"38":0,"43":0,"44":0,"49":0,"50":0,"55":1,"56":0,"57":0,"58":0,"59":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"74":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clCommandQueue.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clCommandQueue.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":1,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":1,"162":0,"163":0,"164":1,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":1,"175":0,"176":1,"177":0,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":1,"225":0,"226":1,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"fnMap":{"1":{"name":"createReleaseFunction","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":38},"end":{"line":16,"column":50}}},"3":{"name":"CLCommandQueue1","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"4":{"name":"CLCommandQueue2","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":65}}},"5":{"name":"CLCommandQueue","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":26}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":13},"end":{"line":57,"column":25}}},"7":{"name":"(anonymous_7)","line":62,"loc":{"start":{"line":62,"column":13},"end":{"line":62,"column":25}}},"8":{"name":"(anonymous_8)","line":68,"loc":{"start":{"line":68,"column":13},"end":{"line":68,"column":25}}},"9":{"name":"(anonymous_9)","line":74,"loc":{"start":{"line":74,"column":13},"end":{"line":74,"column":25}}},"10":{"name":"(anonymous_10)","line":80,"loc":{"start":{"line":80,"column":13},"end":{"line":80,"column":25}}},"11":{"name":"(anonymous_11)","line":86,"loc":{"start":{"line":86,"column":13},"end":{"line":86,"column":25}}},"12":{"name":"(anonymous_12)","line":92,"loc":{"start":{"line":92,"column":13},"end":{"line":92,"column":25}}},"13":{"name":"(anonymous_13)","line":113,"loc":{"start":{"line":113,"column":13},"end":{"line":113,"column":25}}},"14":{"name":"(anonymous_14)","line":120,"loc":{"start":{"line":120,"column":39},"end":{"line":120,"column":57}}},"15":{"name":"(anonymous_15)","line":139,"loc":{"start":{"line":139,"column":36},"end":{"line":139,"column":53}}},"16":{"name":"(anonymous_16)","line":147,"loc":{"start":{"line":147,"column":33},"end":{"line":147,"column":45}}},"17":{"name":"(anonymous_17)","line":153,"loc":{"start":{"line":153,"column":48},"end":{"line":153,"column":66}}},"18":{"name":"(anonymous_18)","line":163,"loc":{"start":{"line":163,"column":39},"end":{"line":163,"column":65}}},"19":{"name":"(anonymous_19)","line":174,"loc":{"start":{"line":174,"column":41},"end":{"line":174,"column":53}}},"20":{"name":"(anonymous_20)","line":182,"loc":{"start":{"line":182,"column":42},"end":{"line":182,"column":54}}},"21":{"name":"(anonymous_21)","line":188,"loc":{"start":{"line":188,"column":48},"end":{"line":188,"column":107}}},"22":{"name":"(anonymous_22)","line":202,"loc":{"start":{"line":202,"column":51},"end":{"line":202,"column":102}}},"23":{"name":"(anonymous_23)","line":213,"loc":{"start":{"line":213,"column":45},"end":{"line":213,"column":90}}},"24":{"name":"(anonymous_24)","line":217,"loc":{"start":{"line":217,"column":46},"end":{"line":217,"column":91}}},"25":{"name":"(anonymous_25)","line":221,"loc":{"start":{"line":221,"column":44},"end":{"line":221,"column":96}}},"26":{"name":"(anonymous_26)","line":235,"loc":{"start":{"line":235,"column":43},"end":{"line":235,"column":96}}},"27":{"name":"(anonymous_27)","line":253,"loc":{"start":{"line":253,"column":46},"end":{"line":253,"column":77}}},"28":{"name":"(anonymous_28)","line":264,"loc":{"start":{"line":264,"column":51},"end":{"line":264,"column":63}}},"29":{"name":"(anonymous_29)","line":269,"loc":{"start":{"line":269,"column":51},"end":{"line":269,"column":63}}},"30":{"name":"(anonymous_30)","line":274,"loc":{"start":{"line":274,"column":50},"end":{"line":274,"column":124}}},"31":{"name":"(anonymous_31)","line":288,"loc":{"start":{"line":288,"column":44},"end":{"line":288,"column":112}}},"32":{"name":"(anonymous_32)","line":292,"loc":{"start":{"line":292,"column":45},"end":{"line":292,"column":113}}},"33":{"name":"(anonymous_33)","line":296,"loc":{"start":{"line":296,"column":45},"end":{"line":296,"column":113}}},"34":{"name":"(anonymous_34)","line":307,"loc":{"start":{"line":307,"column":44},"end":{"line":307,"column":112}}},"35":{"name":"(anonymous_35)","line":318,"loc":{"start":{"line":318,"column":52},"end":{"line":318,"column":121}}},"36":{"name":"(anonymous_36)","line":329,"loc":{"start":{"line":329,"column":52},"end":{"line":329,"column":121}}},"37":{"name":"(anonymous_37)","line":340,"loc":{"start":{"line":340,"column":55},"end":{"line":340,"column":190}}},"38":{"name":"(anonymous_38)","line":357,"loc":{"start":{"line":357,"column":49},"end":{"line":357,"column":178}}},"39":{"name":"(anonymous_39)","line":361,"loc":{"start":{"line":361,"column":50},"end":{"line":361,"column":179}}},"40":{"name":"(anonymous_40)","line":365,"loc":{"start":{"line":365,"column":49},"end":{"line":365,"column":175}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":35}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":35}},"12":{"start":{"line":15,"column":0},"end":{"line":19,"column":1}},"13":{"start":{"line":16,"column":4},"end":{"line":18,"column":7}},"14":{"start":{"line":17,"column":8},"end":{"line":17,"column":49}},"15":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"16":{"start":{"line":22,"column":4},"end":{"line":22,"column":72}},"17":{"start":{"line":25,"column":0},"end":{"line":39,"column":1}},"18":{"start":{"line":26,"column":4},"end":{"line":26,"column":24}},"19":{"start":{"line":27,"column":4},"end":{"line":27,"column":62}},"20":{"start":{"line":28,"column":4},"end":{"line":28,"column":59}},"21":{"start":{"line":29,"column":4},"end":{"line":29,"column":44}},"22":{"start":{"line":31,"column":4},"end":{"line":35,"column":13}},"23":{"start":{"line":36,"column":4},"end":{"line":36,"column":23}},"24":{"start":{"line":38,"column":4},"end":{"line":38,"column":72}},"25":{"start":{"line":41,"column":0},"end":{"line":51,"column":1}},"26":{"start":{"line":42,"column":4},"end":{"line":47,"column":5}},"27":{"start":{"line":43,"column":8},"end":{"line":43,"column":47}},"28":{"start":{"line":46,"column":8},"end":{"line":46,"column":47}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":28}},"30":{"start":{"line":49,"column":4},"end":{"line":49,"column":36}},"31":{"start":{"line":50,"column":4},"end":{"line":50,"column":33}},"32":{"start":{"line":53,"column":0},"end":{"line":53,"column":41}},"33":{"start":{"line":55,"column":0},"end":{"line":118,"column":3}},"34":{"start":{"line":58,"column":12},"end":{"line":58,"column":43}},"35":{"start":{"line":63,"column":12},"end":{"line":63,"column":36}},"36":{"start":{"line":64,"column":12},"end":{"line":64,"column":111}},"37":{"start":{"line":69,"column":12},"end":{"line":69,"column":36}},"38":{"start":{"line":70,"column":12},"end":{"line":70,"column":110}},"39":{"start":{"line":75,"column":12},"end":{"line":75,"column":36}},"40":{"start":{"line":76,"column":12},"end":{"line":76,"column":105}},"41":{"start":{"line":81,"column":12},"end":{"line":81,"column":36}},"42":{"start":{"line":82,"column":12},"end":{"line":82,"column":106}},"43":{"start":{"line":87,"column":12},"end":{"line":87,"column":36}},"44":{"start":{"line":88,"column":12},"end":{"line":88,"column":93}},"45":{"start":{"line":93,"column":12},"end":{"line":93,"column":36}},"46":{"start":{"line":94,"column":12},"end":{"line":108,"column":13}},"47":{"start":{"line":95,"column":16},"end":{"line":95,"column":76}},"48":{"start":{"line":96,"column":16},"end":{"line":96,"column":40}},"49":{"start":{"line":97,"column":16},"end":{"line":107,"column":17}},"50":{"start":{"line":98,"column":20},"end":{"line":98,"column":76}},"51":{"start":{"line":99,"column":20},"end":{"line":99,"column":47}},"52":{"start":{"line":100,"column":20},"end":{"line":100,"column":56}},"53":{"start":{"line":101,"column":20},"end":{"line":101,"column":57}},"54":{"start":{"line":102,"column":20},"end":{"line":102,"column":53}},"55":{"start":{"line":105,"column":20},"end":{"line":105,"column":71}},"56":{"start":{"line":106,"column":20},"end":{"line":106,"column":28}},"57":{"start":{"line":109,"column":12},"end":{"line":109,"column":41}},"58":{"start":{"line":114,"column":12},"end":{"line":114,"column":36}},"59":{"start":{"line":115,"column":12},"end":{"line":115,"column":44}},"60":{"start":{"line":120,"column":0},"end":{"line":137,"column":2}},"61":{"start":{"line":121,"column":4},"end":{"line":136,"column":5}},"62":{"start":{"line":122,"column":8},"end":{"line":122,"column":66}},"63":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"64":{"start":{"line":124,"column":12},"end":{"line":124,"column":54}},"65":{"start":{"line":126,"column":8},"end":{"line":129,"column":10}},"66":{"start":{"line":132,"column":8},"end":{"line":135,"column":10}},"67":{"start":{"line":139,"column":0},"end":{"line":145,"column":2}},"68":{"start":{"line":140,"column":4},"end":{"line":140,"column":43}},"69":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"70":{"start":{"line":142,"column":8},"end":{"line":142,"column":20}},"71":{"start":{"line":144,"column":4},"end":{"line":144,"column":66}},"72":{"start":{"line":147,"column":0},"end":{"line":151,"column":2}},"73":{"start":{"line":148,"column":4},"end":{"line":148,"column":28}},"74":{"start":{"line":149,"column":4},"end":{"line":149,"column":51}},"75":{"start":{"line":150,"column":4},"end":{"line":150,"column":28}},"76":{"start":{"line":153,"column":0},"end":{"line":161,"column":2}},"77":{"start":{"line":154,"column":4},"end":{"line":154,"column":28}},"78":{"start":{"line":155,"column":4},"end":{"line":157,"column":5}},"79":{"start":{"line":156,"column":8},"end":{"line":156,"column":15}},"80":{"start":{"line":158,"column":4},"end":{"line":158,"column":44}},"81":{"start":{"line":159,"column":4},"end":{"line":159,"column":98}},"82":{"start":{"line":160,"column":4},"end":{"line":160,"column":28}},"83":{"start":{"line":163,"column":0},"end":{"line":172,"column":2}},"84":{"start":{"line":164,"column":4},"end":{"line":164,"column":28}},"85":{"start":{"line":165,"column":4},"end":{"line":165,"column":72}},"86":{"start":{"line":166,"column":4},"end":{"line":166,"column":44}},"87":{"start":{"line":167,"column":4},"end":{"line":167,"column":122}},"88":{"start":{"line":168,"column":4},"end":{"line":168,"column":28}},"89":{"start":{"line":169,"column":4},"end":{"line":171,"column":5}},"90":{"start":{"line":170,"column":8},"end":{"line":170,"column":51}},"91":{"start":{"line":174,"column":0},"end":{"line":180,"column":2}},"92":{"start":{"line":175,"column":4},"end":{"line":175,"column":28}},"93":{"start":{"line":176,"column":4},"end":{"line":176,"column":47}},"94":{"start":{"line":177,"column":4},"end":{"line":177,"column":66}},"95":{"start":{"line":178,"column":4},"end":{"line":178,"column":28}},"96":{"start":{"line":179,"column":4},"end":{"line":179,"column":47}},"97":{"start":{"line":182,"column":0},"end":{"line":186,"column":2}},"98":{"start":{"line":183,"column":4},"end":{"line":183,"column":28}},"99":{"start":{"line":184,"column":4},"end":{"line":184,"column":60}},"100":{"start":{"line":185,"column":4},"end":{"line":185,"column":28}},"101":{"start":{"line":188,"column":0},"end":{"line":200,"column":2}},"102":{"start":{"line":189,"column":4},"end":{"line":189,"column":28}},"103":{"start":{"line":190,"column":4},"end":{"line":190,"column":51}},"104":{"start":{"line":191,"column":4},"end":{"line":191,"column":49}},"105":{"start":{"line":192,"column":4},"end":{"line":192,"column":41}},"106":{"start":{"line":193,"column":4},"end":{"line":193,"column":72}},"107":{"start":{"line":194,"column":4},"end":{"line":194,"column":44}},"108":{"start":{"line":195,"column":4},"end":{"line":195,"column":206}},"109":{"start":{"line":196,"column":4},"end":{"line":196,"column":28}},"110":{"start":{"line":197,"column":4},"end":{"line":199,"column":5}},"111":{"start":{"line":198,"column":8},"end":{"line":198,"column":51}},"112":{"start":{"line":202,"column":0},"end":{"line":211,"column":2}},"113":{"start":{"line":203,"column":4},"end":{"line":203,"column":28}},"114":{"start":{"line":204,"column":4},"end":{"line":204,"column":72}},"115":{"start":{"line":205,"column":4},"end":{"line":205,"column":44}},"116":{"start":{"line":206,"column":4},"end":{"line":206,"column":138}},"117":{"start":{"line":207,"column":4},"end":{"line":207,"column":28}},"118":{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},"119":{"start":{"line":209,"column":8},"end":{"line":209,"column":51}},"120":{"start":{"line":213,"column":0},"end":{"line":215,"column":2}},"121":{"start":{"line":214,"column":4},"end":{"line":214,"column":112}},"122":{"start":{"line":217,"column":0},"end":{"line":219,"column":2}},"123":{"start":{"line":218,"column":4},"end":{"line":218,"column":113}},"124":{"start":{"line":221,"column":0},"end":{"line":233,"column":2}},"125":{"start":{"line":222,"column":4},"end":{"line":222,"column":28}},"126":{"start":{"line":223,"column":4},"end":{"line":223,"column":54}},"127":{"start":{"line":224,"column":4},"end":{"line":224,"column":72}},"128":{"start":{"line":225,"column":4},"end":{"line":225,"column":44}},"129":{"start":{"line":226,"column":4},"end":{"line":226,"column":49}},"130":{"start":{"line":227,"column":4},"end":{"line":227,"column":160}},"131":{"start":{"line":228,"column":4},"end":{"line":228,"column":28}},"132":{"start":{"line":229,"column":4},"end":{"line":229,"column":18}},"133":{"start":{"line":230,"column":4},"end":{"line":232,"column":5}},"134":{"start":{"line":231,"column":8},"end":{"line":231,"column":51}},"135":{"start":{"line":235,"column":0},"end":{"line":251,"column":2}},"136":{"start":{"line":236,"column":4},"end":{"line":236,"column":28}},"137":{"start":{"line":237,"column":4},"end":{"line":237,"column":54}},"138":{"start":{"line":238,"column":4},"end":{"line":238,"column":72}},"139":{"start":{"line":239,"column":4},"end":{"line":239,"column":44}},"140":{"start":{"line":240,"column":4},"end":{"line":240,"column":49}},"141":{"start":{"line":241,"column":4},"end":{"line":241,"column":39}},"142":{"start":{"line":242,"column":4},"end":{"line":242,"column":41}},"143":{"start":{"line":243,"column":4},"end":{"line":243,"column":194}},"144":{"start":{"line":244,"column":4},"end":{"line":244,"column":28}},"145":{"start":{"line":245,"column":4},"end":{"line":245,"column":18}},"146":{"start":{"line":246,"column":4},"end":{"line":246,"column":36}},"147":{"start":{"line":247,"column":4},"end":{"line":247,"column":40}},"148":{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},"149":{"start":{"line":249,"column":8},"end":{"line":249,"column":51}},"150":{"start":{"line":253,"column":0},"end":{"line":262,"column":2}},"151":{"start":{"line":254,"column":4},"end":{"line":254,"column":28}},"152":{"start":{"line":255,"column":4},"end":{"line":255,"column":72}},"153":{"start":{"line":256,"column":4},"end":{"line":256,"column":44}},"154":{"start":{"line":257,"column":4},"end":{"line":257,"column":137}},"155":{"start":{"line":258,"column":4},"end":{"line":258,"column":28}},"156":{"start":{"line":259,"column":4},"end":{"line":261,"column":5}},"157":{"start":{"line":260,"column":8},"end":{"line":260,"column":51}},"158":{"start":{"line":264,"column":0},"end":{"line":267,"column":2}},"159":{"start":{"line":265,"column":4},"end":{"line":265,"column":28}},"160":{"start":{"line":266,"column":4},"end":{"line":266,"column":28}},"161":{"start":{"line":269,"column":0},"end":{"line":272,"column":2}},"162":{"start":{"line":270,"column":4},"end":{"line":270,"column":28}},"163":{"start":{"line":271,"column":4},"end":{"line":271,"column":28}},"164":{"start":{"line":274,"column":0},"end":{"line":286,"column":2}},"165":{"start":{"line":275,"column":4},"end":{"line":275,"column":28}},"166":{"start":{"line":276,"column":4},"end":{"line":276,"column":29}},"167":{"start":{"line":277,"column":4},"end":{"line":277,"column":33}},"168":{"start":{"line":279,"column":4},"end":{"line":279,"column":72}},"169":{"start":{"line":280,"column":4},"end":{"line":280,"column":44}},"170":{"start":{"line":281,"column":4},"end":{"line":281,"column":173}},"171":{"start":{"line":282,"column":4},"end":{"line":282,"column":28}},"172":{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},"173":{"start":{"line":284,"column":8},"end":{"line":284,"column":51}},"174":{"start":{"line":288,"column":0},"end":{"line":290,"column":2}},"175":{"start":{"line":289,"column":4},"end":{"line":289,"column":133}},"176":{"start":{"line":292,"column":0},"end":{"line":294,"column":2}},"177":{"start":{"line":293,"column":4},"end":{"line":293,"column":134}},"178":{"start":{"line":296,"column":0},"end":{"line":305,"column":2}},"179":{"start":{"line":297,"column":4},"end":{"line":297,"column":28}},"180":{"start":{"line":298,"column":4},"end":{"line":298,"column":72}},"181":{"start":{"line":299,"column":4},"end":{"line":299,"column":44}},"182":{"start":{"line":300,"column":4},"end":{"line":300,"column":188}},"183":{"start":{"line":301,"column":4},"end":{"line":301,"column":28}},"184":{"start":{"line":302,"column":4},"end":{"line":304,"column":5}},"185":{"start":{"line":303,"column":8},"end":{"line":303,"column":51}},"186":{"start":{"line":307,"column":0},"end":{"line":316,"column":2}},"187":{"start":{"line":308,"column":4},"end":{"line":308,"column":28}},"188":{"start":{"line":309,"column":4},"end":{"line":309,"column":72}},"189":{"start":{"line":310,"column":4},"end":{"line":310,"column":44}},"190":{"start":{"line":311,"column":4},"end":{"line":311,"column":205}},"191":{"start":{"line":312,"column":4},"end":{"line":312,"column":28}},"192":{"start":{"line":313,"column":4},"end":{"line":315,"column":5}},"193":{"start":{"line":314,"column":8},"end":{"line":314,"column":51}},"194":{"start":{"line":318,"column":0},"end":{"line":327,"column":2}},"195":{"start":{"line":319,"column":4},"end":{"line":319,"column":28}},"196":{"start":{"line":320,"column":4},"end":{"line":320,"column":72}},"197":{"start":{"line":321,"column":4},"end":{"line":321,"column":44}},"198":{"start":{"line":322,"column":4},"end":{"line":322,"column":208}},"199":{"start":{"line":323,"column":4},"end":{"line":323,"column":28}},"200":{"start":{"line":324,"column":4},"end":{"line":326,"column":5}},"201":{"start":{"line":325,"column":8},"end":{"line":325,"column":51}},"202":{"start":{"line":329,"column":0},"end":{"line":338,"column":2}},"203":{"start":{"line":330,"column":4},"end":{"line":330,"column":28}},"204":{"start":{"line":331,"column":4},"end":{"line":331,"column":72}},"205":{"start":{"line":332,"column":4},"end":{"line":332,"column":44}},"206":{"start":{"line":333,"column":4},"end":{"line":333,"column":208}},"207":{"start":{"line":334,"column":4},"end":{"line":334,"column":28}},"208":{"start":{"line":335,"column":4},"end":{"line":337,"column":5}},"209":{"start":{"line":336,"column":8},"end":{"line":336,"column":51}},"210":{"start":{"line":340,"column":0},"end":{"line":355,"column":2}},"211":{"start":{"line":341,"column":4},"end":{"line":341,"column":28}},"212":{"start":{"line":343,"column":4},"end":{"line":343,"column":41}},"213":{"start":{"line":344,"column":4},"end":{"line":344,"column":45}},"214":{"start":{"line":345,"column":4},"end":{"line":345,"column":37}},"215":{"start":{"line":346,"column":4},"end":{"line":346,"column":41}},"216":{"start":{"line":348,"column":4},"end":{"line":348,"column":72}},"217":{"start":{"line":349,"column":4},"end":{"line":349,"column":44}},"218":{"start":{"line":350,"column":4},"end":{"line":350,"column":240}},"219":{"start":{"line":351,"column":4},"end":{"line":351,"column":28}},"220":{"start":{"line":352,"column":4},"end":{"line":354,"column":5}},"221":{"start":{"line":353,"column":8},"end":{"line":353,"column":51}},"222":{"start":{"line":357,"column":0},"end":{"line":359,"column":2}},"223":{"start":{"line":358,"column":4},"end":{"line":358,"column":204}},"224":{"start":{"line":361,"column":0},"end":{"line":363,"column":2}},"225":{"start":{"line":362,"column":4},"end":{"line":362,"column":205}},"226":{"start":{"line":365,"column":0},"end":{"line":380,"column":2}},"227":{"start":{"line":366,"column":4},"end":{"line":366,"column":28}},"228":{"start":{"line":368,"column":4},"end":{"line":368,"column":35}},"229":{"start":{"line":369,"column":4},"end":{"line":369,"column":39}},"230":{"start":{"line":370,"column":4},"end":{"line":370,"column":35}},"231":{"start":{"line":371,"column":4},"end":{"line":371,"column":39}},"232":{"start":{"line":373,"column":4},"end":{"line":373,"column":72}},"233":{"start":{"line":374,"column":4},"end":{"line":374,"column":44}},"234":{"start":{"line":375,"column":4},"end":{"line":375,"column":268}},"235":{"start":{"line":376,"column":4},"end":{"line":376,"column":28}},"236":{"start":{"line":377,"column":4},"end":{"line":379,"column":5}},"237":{"start":{"line":378,"column":8},"end":{"line":378,"column":51}},"238":{"start":{"line":382,"column":0},"end":{"line":382,"column":32}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":43},"end":{"line":27,"column":53}},{"start":{"line":27,"column":56},"end":{"line":27,"column":61}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":41},"end":{"line":28,"column":50}},{"start":{"line":28,"column":53},"end":{"line":28,"column":58}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":22},"end":{"line":34,"column":68}},{"start":{"line":34,"column":71},"end":{"line":34,"column":72}}]},"4":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":89},"end":{"line":34,"column":122}},{"start":{"line":34,"column":125},"end":{"line":34,"column":126}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"6":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":29}},{"start":{"line":42,"column":33},"end":{"line":42,"column":66}},{"start":{"line":42,"column":70},"end":{"line":42,"column":102}}]},"7":{"line":82,"type":"cond-expr","locations":[{"start":{"line":82,"column":93},"end":{"line":82,"column":97}},{"start":{"line":82,"column":100},"end":{"line":82,"column":105}}]},"8":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":80},"end":{"line":88,"column":84}},{"start":{"line":88,"column":87},"end":{"line":88,"column":92}}]},"9":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":12}},{"start":{"line":94,"column":12},"end":{"line":94,"column":12}}]},"10":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"11":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":14}},{"start":{"line":121,"column":18},"end":{"line":121,"column":31}}]},"12":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":30},"end":{"line":140,"column":34}},{"start":{"line":140,"column":37},"end":{"line":140,"column":42}}]},"13":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":13},"end":{"line":140,"column":18}},{"start":{"line":140,"column":22},"end":{"line":140,"column":26}}]},"14":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"15":{"line":144,"type":"cond-expr","locations":[{"start":{"line":144,"column":19},"end":{"line":144,"column":39}},{"start":{"line":144,"column":42},"end":{"line":144,"column":65}}]},"16":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"17":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":34},"end":{"line":165,"column":64}},{"start":{"line":165,"column":67},"end":{"line":165,"column":71}}]},"18":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"19":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":18},"end":{"line":190,"column":29}},{"start":{"line":190,"column":33},"end":{"line":190,"column":50}}]},"20":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":17},"end":{"line":191,"column":27}},{"start":{"line":191,"column":31},"end":{"line":191,"column":48}}]},"21":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":13},"end":{"line":192,"column":19}},{"start":{"line":192,"column":23},"end":{"line":192,"column":40}}]},"22":{"line":193,"type":"cond-expr","locations":[{"start":{"line":193,"column":34},"end":{"line":193,"column":64}},{"start":{"line":193,"column":67},"end":{"line":193,"column":71}}]},"23":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"24":{"line":204,"type":"cond-expr","locations":[{"start":{"line":204,"column":34},"end":{"line":204,"column":64}},{"start":{"line":204,"column":67},"end":{"line":204,"column":71}}]},"25":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"26":{"line":224,"type":"cond-expr","locations":[{"start":{"line":224,"column":34},"end":{"line":224,"column":64}},{"start":{"line":224,"column":67},"end":{"line":224,"column":71}}]},"27":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"28":{"line":238,"type":"cond-expr","locations":[{"start":{"line":238,"column":34},"end":{"line":238,"column":64}},{"start":{"line":238,"column":67},"end":{"line":238,"column":71}}]},"29":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":4},"end":{"line":248,"column":4}},{"start":{"line":248,"column":4},"end":{"line":248,"column":4}}]},"30":{"line":255,"type":"cond-expr","locations":[{"start":{"line":255,"column":34},"end":{"line":255,"column":64}},{"start":{"line":255,"column":67},"end":{"line":255,"column":71}}]},"31":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":4},"end":{"line":259,"column":4}},{"start":{"line":259,"column":4},"end":{"line":259,"column":4}}]},"32":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":15},"end":{"line":276,"column":23}},{"start":{"line":276,"column":27},"end":{"line":276,"column":28}}]},"33":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":17},"end":{"line":277,"column":27}},{"start":{"line":277,"column":31},"end":{"line":277,"column":32}}]},"34":{"line":279,"type":"cond-expr","locations":[{"start":{"line":279,"column":34},"end":{"line":279,"column":64}},{"start":{"line":279,"column":67},"end":{"line":279,"column":71}}]},"35":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":283,"column":4}},{"start":{"line":283,"column":4},"end":{"line":283,"column":4}}]},"36":{"line":298,"type":"cond-expr","locations":[{"start":{"line":298,"column":34},"end":{"line":298,"column":64}},{"start":{"line":298,"column":67},"end":{"line":298,"column":71}}]},"37":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":4},"end":{"line":302,"column":4}},{"start":{"line":302,"column":4},"end":{"line":302,"column":4}}]},"38":{"line":309,"type":"cond-expr","locations":[{"start":{"line":309,"column":34},"end":{"line":309,"column":64}},{"start":{"line":309,"column":67},"end":{"line":309,"column":71}}]},"39":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":4},"end":{"line":313,"column":4}},{"start":{"line":313,"column":4},"end":{"line":313,"column":4}}]},"40":{"line":320,"type":"cond-expr","locations":[{"start":{"line":320,"column":34},"end":{"line":320,"column":64}},{"start":{"line":320,"column":67},"end":{"line":320,"column":71}}]},"41":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"42":{"line":331,"type":"cond-expr","locations":[{"start":{"line":331,"column":34},"end":{"line":331,"column":64}},{"start":{"line":331,"column":67},"end":{"line":331,"column":71}}]},"43":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":4},"end":{"line":335,"column":4}},{"start":{"line":335,"column":4},"end":{"line":335,"column":4}}]},"44":{"line":343,"type":"binary-expr","locations":[{"start":{"line":343,"column":21},"end":{"line":343,"column":35}},{"start":{"line":343,"column":39},"end":{"line":343,"column":40}}]},"45":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":23},"end":{"line":344,"column":39}},{"start":{"line":344,"column":43},"end":{"line":344,"column":44}}]},"46":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":19},"end":{"line":345,"column":31}},{"start":{"line":345,"column":35},"end":{"line":345,"column":36}}]},"47":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":21},"end":{"line":346,"column":35}},{"start":{"line":346,"column":39},"end":{"line":346,"column":40}}]},"48":{"line":348,"type":"cond-expr","locations":[{"start":{"line":348,"column":34},"end":{"line":348,"column":64}},{"start":{"line":348,"column":67},"end":{"line":348,"column":71}}]},"49":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":4},"end":{"line":352,"column":4}},{"start":{"line":352,"column":4},"end":{"line":352,"column":4}}]},"50":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":18},"end":{"line":368,"column":29}},{"start":{"line":368,"column":33},"end":{"line":368,"column":34}}]},"51":{"line":369,"type":"binary-expr","locations":[{"start":{"line":369,"column":20},"end":{"line":369,"column":33}},{"start":{"line":369,"column":37},"end":{"line":369,"column":38}}]},"52":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":18},"end":{"line":370,"column":29}},{"start":{"line":370,"column":33},"end":{"line":370,"column":34}}]},"53":{"line":371,"type":"binary-expr","locations":[{"start":{"line":371,"column":20},"end":{"line":371,"column":33}},{"start":{"line":371,"column":37},"end":{"line":371,"column":38}}]},"54":{"line":373,"type":"cond-expr","locations":[{"start":{"line":373,"column":34},"end":{"line":373,"column":64}},{"start":{"line":373,"column":67},"end":{"line":373,"column":71}}]},"55":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":377,"column":4}},{"start":{"line":377,"column":4},"end":{"line":377,"column":4}}]}},"code":["\"use strict\";","","var CLWrapper = require(\"./clWrapper\");","var util = require(\"util\");","var _ = require(\"lodash\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var CLEvent = require(\"./clEvent\");","var CLContext = require(\"./clContext\");","var CLDevice = require(\"./clDevice\");","var NDRange = require(\"./ndRange\");","var assert = require(\"assert\");","var clUtils = require(\"./clUtils\");","","function createReleaseFunction(cl, handle) {","    return CLWrapper._releaseFunction(function () {","        cl.imports.clReleaseCommandQueue(handle);","    });","}","","function CLCommandQueue1(cl, handle) {","    CLWrapper.call(this, cl, handle, createReleaseFunction(cl, handle));","}","","function CLCommandQueue2(context, device, outOfOrder, profiling) {","    var cl = context.cl;","    outOfOrder = _.isBoolean(outOfOrder) ? outOfOrder : false;","    profiling = _.isBoolean(profiling) ? profiling : false;","    var err = ref.alloc(cl.types.ErrorCode);","","    var handle = cl.imports.clCreateCommandQueue(","        clUtils.toHandle(context),","        clUtils.toHandle(device),","        (outOfOrder ? cl.defs.CL_QUEUE_OUT_OF_ORDER_EXEC_MODE_ENABLE : 0) | (profiling ? cl.defs.CL_QUEUE_PROFILING_ENABLE : 0),","        err);","    cl.checkError(err);","","    CLWrapper.call(this, cl, handle, createReleaseFunction(cl, handle));","}","","function CLCommandQueue() {","    if (arguments.length >= 2 && arguments[0] instanceof CLContext && arguments[1] instanceof CLDevice) {","        CLCommandQueue2.apply(this, arguments);","    }","    else {","        CLCommandQueue1.apply(this, arguments);","    }","    this.isWaitable = false;","    this._notWaitableVersion = this;","    this._waitableVersion = null;","}","","util.inherits(CLCommandQueue, CLWrapper);","","Object.defineProperties(CLCommandQueue.prototype, {","    _classInfoFunction: {","        get: function () {","            return \"clGetCommandQueueInfo\";","        }","    },","    context: {","        get: function () {","            this._throwIfReleased();","            return new CLContext(this.cl, this._getInfo(this.cl.types.Context, this.cl.defs.CL_QUEUE_CONTEXT));","        }","    },","    device: {","        get: function () {","            this._throwIfReleased();","            return new CLDevice(this.cl, this._getInfo(this.cl.types.DeviceId, this.cl.defs.CL_QUEUE_DEVICE));","        }","    },","    properties: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.CommandQueueProperties, this.cl.defs.CL_QUEUE_PROPERTIES);","        }","    },","    isOutOfOrder: {","        get: function () {","            this._throwIfReleased();","            return (this.properties & this.cl.defs.CL_QUEUE_OUT_OF_ORDER_EXEC_MODE_ENABLE) ? true : false;","        }","    },","    isProfilingEnabled: {","        get: function () {","            this._throwIfReleased();","            return (this.properties & this.cl.defs.CL_QUEUE_PROFILING_ENABLE) ? true : false;","        }","    },","    waitableVersion: {","        get: function () {","            this._throwIfReleased();","            if (!this._waitableVersion) {","                var err = this.cl.imports.clRetainCommandQueue(this.handle);","                this.cl.checkError(err);","                try {","                    var newQueue = new CLCommandQueue(this.cl, this.handle);","                    newQueue.isWaitable = true;","                    newQueue._notWaitableVersion = this;","                    newQueue._waitableVersion = newQueue;","                    this._waitableVersion = newQueue;","                }","                catch (e) {","                    this.cl.imports.clReleaseCommandQueue(this.handle);","                    throw e;","                }","            }","            return this._waitableVersion;","        }","    },","    notWaitableVersion: {","        get: function () {","            this._throwIfReleased();","            return this._notWaitableVersion;","        }","    }","});","","CLCommandQueue.prototype._toWaitList = function (events) {","    if (events && events.length) {","        var array = new (this.cl.types.EventArray)(events.length);","        for (var i = 0; i < events.length; i++) {","            array.set(i, clUtils.toHandle(events[i]));","        }","        return {","            count: events.length,","            array: array","        };","    }","    else {","        return {","            count: 0,","            array: null","        };","    }","};","","CLCommandQueue.prototype.waitable = function (value) {","    value = (value || true) ? true : false;","    if (this.isWaitable === value) {","        return this;","    }","    return value ? this.waitableVersion : this.notWaitableVersion;","};","","CLCommandQueue.prototype.flush = function () {","    this._throwIfReleased();","    var err = this.cl.imports.clFlush(this.handle);","    this.cl.checkError(err);","};","","CLCommandQueue.prototype.enqueueWaitForEvents = function (events) {","    this._throwIfReleased();","    if (!events.length) {","        return;","    }","    var waitList = this._toWaitList(events);","    var err = this.cl.imports.clEnqueueWaitForEvents(this.handle, waitList.count, waitList.array);","    this.cl.checkError(err);","};","","CLCommandQueue.prototype.enqueueTask = function (kernel, events) {","    this._throwIfReleased();","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = this.cl.imports.clEnqueueTask(this.handle, clUtils.toHandle(kernel), waitList.count, waitList.array, event);","    this.cl.checkError(err);","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype.enqueueMarker = function () {","    this._throwIfReleased();","    var event = ref.alloc(this.cl.types.Event);","    var err = this.cl.imports.clEnqueueMarker(this.handle, event);","    this.cl.checkError(err);","    return new CLEvent(this.cl, event.deref());","};","","CLCommandQueue.prototype.enqueueBarrier = function () {","    this._throwIfReleased();","    var err = this.cl.imports.clEnqueueBarrier(this.handle);","    this.cl.checkError(err);","};","","CLCommandQueue.prototype.enqueueNDRangeKernel = function (kernel, globalRange, localRange, offset, events) {","    this._throwIfReleased();","    globalRange = globalRange || NDRange.nullRange;","    localRange = localRange || NDRange.nullRange;","    offset = offset || NDRange.nullRange;","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = this.cl.imports.clEnqueueNDRangeKernel(this.handle, clUtils.toHandle(kernel), globalRange.dimensions, offset.sizes, globalRange.sizes, localRange.sizes, waitList.count, waitList.array, event);","    this.cl.checkError(err);","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype._enqueueReadWriteBuffer = function (func, buffer, offset, size, ptr, events) {","    this._throwIfReleased();","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = func(this.handle, clUtils.toHandle(buffer), false, offset, size, clUtils.toPtr(ptr), waitList.count, waitList.array, event);","    this.cl.checkError(err);","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype.enqueueReadBuffer = function (buffer, offset, size, ptr, events) {","    return this._enqueueReadWriteBuffer(this.cl.imports.clEnqueueReadBuffer, buffer, offset, size, ptr, events);","};","","CLCommandQueue.prototype.enqueueWriteBuffer = function (buffer, offset, size, ptr, events) {","    return this._enqueueReadWriteBuffer(this.cl.imports.clEnqueueWriteBuffer, buffer, offset, size, ptr, events);","};","","CLCommandQueue.prototype.enqueueMapBuffer = function (buffer, flags, offset, size, out, events) {","    this._throwIfReleased();","    assert(_.isObject(out), \"Out must be an object.\");","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = ref.alloc(this.cl.types.ErrorCode);","    var ptr = this.cl.imports.clEnqueueMapBuffer(this.handle, clUtils.toHandle(buffer), false, flags, offset, size, waitList.count, waitList.array, event, err);","    this.cl.checkError(err);","    out.ptr = ptr;","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype.enqueueMapImage = function (image, flags, origin, region, out, events) {","    this._throwIfReleased();","    assert(_.isObject(out), \"Out must be an object.\");","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = ref.alloc(this.cl.types.ErrorCode);","    var rowPitch = ref.alloc(\"size_t\");","    var slicePitch = ref.alloc(\"size_t\");","    var ptr = this.cl.imports.clEnqueueMapImage(this.handle, clUtils.toHandle(image), false, flags, origin.sizes, region.sizes, rowPitch, slicePitch, waitList.count, waitList.array, event, err);","    this.cl.checkError(err);","    out.ptr = ptr;","    out.rowPitch = rowPitch.deref();","    out.slicePitch = slicePitch.deref();","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype.enqueueUnmapMemory = function (memory, ptr, events) {","    this._throwIfReleased();","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = this.cl.imports.clEnqueueUnmapMemObject(this.handle, clUtils.toHandle(memory), ptr, waitList.count, waitList.array, event);","    this.cl.checkError(err);","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype.enqueueAcquireGLObjects = function () {","    this._throwIfReleased();","    throw new Error(\"TODO\");","};","","CLCommandQueue.prototype.enqueueReleaseGLObjects = function () {","    this._throwIfReleased();","    throw new Error(\"TODO\");","};","","CLCommandQueue.prototype._enqueueReadWriteImage = function (func, image, origin, region, ptr, rowPitch, slicePitch, events) {","    this._throwIfReleased();","    rowPitch = rowPitch || 0;","    slicePitch = slicePitch || 0;","","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = func(this.handle, clUtils.toHandle(image), false, origin.sizes, region.sizes, rowPitch, slicePitch, clUtils.toPtr(ptr), waitList.count, waitList.array, event);","    this.cl.checkError(err);","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype.enqueueReadImage = function (image, origin, region, ptr, rowPitch, slicePitch, events) {","    return this._enqueueReadWriteImage(this.cl.imports.clEnqueueReadImage, image, origin, region, ptr, rowPitch, slicePitch, events);","};","","CLCommandQueue.prototype.enqueueWriteImage = function (image, origin, region, ptr, rowPitch, slicePitch, events) {","    return this._enqueueReadWriteImage(this.cl.imports.clEnqueueWriteImage, image, origin, region, ptr, rowPitch, slicePitch, events);","};","","CLCommandQueue.prototype.enqueueCopyBuffer = function (srcBuffer, dstBuffer, srcOffset, dstOffset, size, events) {","    this._throwIfReleased();","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = this.cl.imports.clEnqueueCopyBuffer(this.handle, clUtils.toHandle(srcBuffer), clUtils.toHandle(dstBuffer), srcOffset, dstOffset, size, waitList.count, waitList.array, event);","    this.cl.checkError(err);","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype.enqueueCopyImage = function (srcImage, dstImage, srcOrigin, dstOrigin, region, events) {","    this._throwIfReleased();","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = this.cl.imports.clEnqueueCopyImage(this.handle, clUtils.toHandle(srcImage), clUtils.toHandle(dstImage), srcOrigin.sizes, dstOrigin.sizes, region.sizes, waitList.count, waitList.array, event);","    this.cl.checkError(err);","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype.enqueueCopyImageToBuffer = function (srcImage, dstBuffer, srcOrigin, region, dstOffset, events) {","    this._throwIfReleased();","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = this.cl.imports.clEnqueueCopyImageToBuffer(this.handle, clUtils.toHandle(srcImage), clUtils.toHandle(dstBuffer), srcOrigin.sizes, region.sizes, dstOffset, waitList.count, waitList.array, event);","    this.cl.checkError(err);","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype.enqueueCopyBufferToImage = function (srcBuffer, dstImage, srcOffset, dstOrigin, region, events) {","    this._throwIfReleased();","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = this.cl.imports.clEnqueueCopyImageToBuffer(this.handle, clUtils.toHandle(srcBuffer), clUtils.toHandle(dstImage), srcOffset, dstOrigin.sizes, region.sizes, waitList.count, waitList.array, event);","    this.cl.checkError(err);","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype._enqueueReadWriteBufferRect = function (func, buffer, bufferOrigin, hostOrigin, region, ptr, bufferRowPitch, bufferSlicePitch, hostRowPitch, hostSlicePitch, events) {","    this._throwIfReleased();","","    bufferRowPitch = bufferRowPitch || 0;","    bufferSlicePitch = bufferSlicePitch || 0;","    hostRowPitch = hostRowPitch || 0;","    hostSlicePitch = hostSlicePitch || 0;","","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = func(this.handle, clUtils.toHandle(buffer), false, bufferOrigin.sizes, hostOrigin.sizes, region.sizes, bufferRowPitch, bufferSlicePitch, hostRowPitch, hostSlicePitch, clUtils.toPtr(ptr), waitList.count, waitList.array, event);","    this.cl.checkError(err);","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","CLCommandQueue.prototype.enqueueReadBufferRect = function (buffer, bufferOrigin, hostOrigin, region, ptr, bufferRowPitch, bufferSlicePitch, hostRowPitch, hostSlicePitch, events) {","    return this._enqueueReadWriteBufferRect(this.cl.imports.clEnqueueReadBufferRect, buffer, bufferOrigin, hostOrigin, region, ptr, bufferRowPitch, bufferSlicePitch, hostRowPitch, hostSlicePitch, events);","};","","CLCommandQueue.prototype.enqueueWriteBufferRect = function (buffer, bufferOrigin, hostOrigin, region, ptr, bufferRowPitch, bufferSlicePitch, hostRowPitch, hostSlicePitch, events) {","    return this._enqueueReadWriteBufferRect(this.cl.imports.clEnqueueWriteBufferRect, buffer, bufferOrigin, hostOrigin, region, ptr, bufferRowPitch, bufferSlicePitch, hostRowPitch, hostSlicePitch, events);","};","","CLCommandQueue.prototype.enqueueCopyBufferRect = function (srcBuffer, dstBuffer, srcOrigin, dstOrigin, region, srcRowPitch, srcSlicePitch, dstRowPitch, dstSlicePitch, events) {","    this._throwIfReleased();","","    srcRowPitch = srcRowPitch || 0;","    srcSlicePitch = srcSlicePitch || 0;","    dstRowPitch = dstRowPitch || 0;","    dstSlicePitch = dstSlicePitch || 0;","","    var event = this.isWaitable ? ref.alloc(this.cl.types.Event) : null;","    var waitList = this._toWaitList(events);","    var err = this.cl.imports.clEnqueueCopyBufferRect(this.handle, clUtils.toHandle(srcBuffer), clUtils.toHandle(dstBuffer), srcOrigin.sizes, dstOrigin.sizes, region.sizes, srcRowPitch, srcSlicePitch, dstRowPitch, dstSlicePitch, waitList.count, waitList.array, event);","    this.cl.checkError(err);","    if (event) {","        return new CLEvent(this.cl, event.deref());","    }","};","","module.exports = CLCommandQueue;"],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"16":0,"17":0,"21":1,"22":0,"25":1,"26":0,"27":0,"28":0,"29":0,"31":0,"36":0,"38":0,"41":1,"42":0,"43":0,"46":0,"48":0,"49":0,"50":0,"53":1,"55":1,"58":0,"63":0,"64":0,"69":0,"70":0,"75":0,"76":0,"81":0,"82":0,"87":0,"88":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"105":0,"106":0,"109":0,"114":0,"115":0,"120":1,"121":0,"122":0,"123":0,"124":0,"126":0,"132":0,"139":1,"140":0,"141":0,"142":0,"144":0,"147":1,"148":0,"149":0,"150":0,"153":1,"154":0,"155":0,"156":0,"158":0,"159":0,"160":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"174":1,"175":0,"176":0,"177":0,"178":0,"179":0,"182":1,"183":0,"184":0,"185":0,"188":1,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"202":1,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"213":1,"214":0,"217":1,"218":0,"221":1,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"235":1,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"253":1,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"264":1,"265":0,"266":0,"269":1,"270":0,"271":0,"274":1,"275":0,"276":0,"277":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"288":1,"289":0,"292":1,"293":0,"296":1,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"307":1,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"318":1,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"329":1,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"340":1,"341":0,"343":0,"344":0,"345":0,"346":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"357":1,"358":0,"361":1,"362":0,"365":1,"366":0,"368":0,"369":0,"370":0,"371":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"382":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clEvent.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clEvent.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"CLEventProfilingInfo","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":13},"end":{"line":24,"column":25}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":13},"end":{"line":29,"column":25}}},"4":{"name":"(anonymous_4)","line":35,"loc":{"start":{"line":35,"column":13},"end":{"line":35,"column":25}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":13},"end":{"line":41,"column":25}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":13},"end":{"line":47,"column":25}}},"7":{"name":"createReleaseFunction","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":43}}},"8":{"name":"(anonymous_8)","line":57,"loc":{"start":{"line":57,"column":38},"end":{"line":57,"column":50}}},"9":{"name":"CLEvent","line":62,"loc":{"start":{"line":62,"column":0},"end":{"line":62,"column":29}}},"10":{"name":"(anonymous_10)","line":74,"loc":{"start":{"line":74,"column":13},"end":{"line":74,"column":25}}},"11":{"name":"(anonymous_11)","line":79,"loc":{"start":{"line":79,"column":13},"end":{"line":79,"column":25}}},"12":{"name":"(anonymous_12)","line":86,"loc":{"start":{"line":86,"column":13},"end":{"line":86,"column":25}}},"13":{"name":"(anonymous_13)","line":92,"loc":{"start":{"line":92,"column":13},"end":{"line":92,"column":25}}},"14":{"name":"(anonymous_14)","line":98,"loc":{"start":{"line":98,"column":13},"end":{"line":98,"column":25}}},"15":{"name":"(anonymous_15)","line":104,"loc":{"start":{"line":104,"column":13},"end":{"line":104,"column":25}}},"16":{"name":"(anonymous_16)","line":112,"loc":{"start":{"line":112,"column":41},"end":{"line":112,"column":68}}},"17":{"name":"(anonymous_17)","line":118,"loc":{"start":{"line":118,"column":24},"end":{"line":118,"column":49}}},"18":{"name":"(anonymous_18)","line":132,"loc":{"start":{"line":132,"column":50},"end":{"line":132,"column":61}}},"19":{"name":"(anonymous_19)","line":133,"loc":{"start":{"line":133,"column":29},"end":{"line":133,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":23}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":26}},"10":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":43}},"12":{"start":{"line":20,"column":0},"end":{"line":20,"column":47}},"13":{"start":{"line":22,"column":0},"end":{"line":52,"column":3}},"14":{"start":{"line":25,"column":12},"end":{"line":25,"column":45}},"15":{"start":{"line":30,"column":12},"end":{"line":30,"column":36}},"16":{"start":{"line":31,"column":12},"end":{"line":31,"column":90}},"17":{"start":{"line":36,"column":12},"end":{"line":36,"column":36}},"18":{"start":{"line":37,"column":12},"end":{"line":37,"column":90}},"19":{"start":{"line":42,"column":12},"end":{"line":42,"column":36}},"20":{"start":{"line":43,"column":12},"end":{"line":43,"column":89}},"21":{"start":{"line":48,"column":12},"end":{"line":48,"column":36}},"22":{"start":{"line":49,"column":12},"end":{"line":49,"column":87}},"23":{"start":{"line":56,"column":0},"end":{"line":60,"column":1}},"24":{"start":{"line":57,"column":4},"end":{"line":59,"column":7}},"25":{"start":{"line":58,"column":8},"end":{"line":58,"column":42}},"26":{"start":{"line":62,"column":0},"end":{"line":68,"column":1}},"27":{"start":{"line":63,"column":4},"end":{"line":63,"column":72}},"28":{"start":{"line":64,"column":4},"end":{"line":64,"column":62}},"29":{"start":{"line":65,"column":4},"end":{"line":65,"column":25}},"30":{"start":{"line":66,"column":4},"end":{"line":66,"column":20}},"31":{"start":{"line":67,"column":4},"end":{"line":67,"column":21}},"32":{"start":{"line":70,"column":0},"end":{"line":70,"column":34}},"33":{"start":{"line":72,"column":0},"end":{"line":141,"column":3}},"34":{"start":{"line":75,"column":12},"end":{"line":75,"column":36}},"35":{"start":{"line":80,"column":12},"end":{"line":80,"column":36}},"36":{"start":{"line":81,"column":12},"end":{"line":81,"column":94}},"37":{"start":{"line":82,"column":12},"end":{"line":82,"column":127}},"38":{"start":{"line":87,"column":12},"end":{"line":87,"column":36}},"39":{"start":{"line":88,"column":12},"end":{"line":88,"column":111}},"40":{"start":{"line":93,"column":12},"end":{"line":93,"column":36}},"41":{"start":{"line":94,"column":12},"end":{"line":94,"column":96}},"42":{"start":{"line":99,"column":12},"end":{"line":99,"column":36}},"43":{"start":{"line":100,"column":12},"end":{"line":100,"column":125}},"44":{"start":{"line":105,"column":12},"end":{"line":105,"column":28}},"45":{"start":{"line":106,"column":12},"end":{"line":106,"column":36}},"46":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"47":{"start":{"line":108,"column":16},"end":{"line":108,"column":37}},"48":{"start":{"line":110,"column":12},"end":{"line":110,"column":29}},"49":{"start":{"line":111,"column":12},"end":{"line":111,"column":22}},"50":{"start":{"line":112,"column":12},"end":{"line":117,"column":15}},"51":{"start":{"line":113,"column":16},"end":{"line":116,"column":18}},"52":{"start":{"line":118,"column":12},"end":{"line":128,"column":14}},"53":{"start":{"line":119,"column":16},"end":{"line":127,"column":17}},"54":{"start":{"line":120,"column":20},"end":{"line":120,"column":40}},"55":{"start":{"line":121,"column":20},"end":{"line":123,"column":21}},"56":{"start":{"line":122,"column":24},"end":{"line":122,"column":40}},"57":{"start":{"line":126,"column":20},"end":{"line":126,"column":36}},"58":{"start":{"line":129,"column":12},"end":{"line":129,"column":78}},"59":{"start":{"line":130,"column":12},"end":{"line":130,"column":102}},"60":{"start":{"line":131,"column":12},"end":{"line":131,"column":31}},"61":{"start":{"line":132,"column":12},"end":{"line":136,"column":15}},"62":{"start":{"line":133,"column":16},"end":{"line":135,"column":19}},"63":{"start":{"line":134,"column":20},"end":{"line":134,"column":35}},"64":{"start":{"line":137,"column":12},"end":{"line":137,"column":61}},"65":{"start":{"line":138,"column":12},"end":{"line":138,"column":33}},"66":{"start":{"line":143,"column":0},"end":{"line":143,"column":25}}},"branchMap":{"1":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":29},"end":{"line":81,"column":43}},{"start":{"line":81,"column":48},"end":{"line":81,"column":92}}]},"2":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"3":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":20},"end":{"line":121,"column":20}},{"start":{"line":121,"column":20},"end":{"line":121,"column":20}}]}},"code":["\"use strict\";","","var CLWrapper = require(\"./clWrapper\");","var util = require(\"util\");","var CLContext = require(\"./clContext\");","var Bluebird = require(\"bluebird\");","var assert = require(\"assert\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var clUtils = require(\"./clUtils\");","","var CLCommandQueue = null;","","// CLEventProfilingInfo","","function CLEventProfilingInfo(cl, handle) {","    CLWrapper.call(this, cl, handle, null);","}","","util.inherits(CLEventProfilingInfo, CLWrapper);","","Object.defineProperties(CLEventProfilingInfo.prototype, {","    _classInfoFunction: {","        get: function () {","            return \"clGetEventProfilingInfo\";","        }","    },","    profilingCommandQueued: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"ulong\", this.cl.defs.CL_PROFILING_COMMAND_QUEUED, true);","        }","    },","    profilingCommandSubmit: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"ulong\", this.cl.defs.CL_PROFILING_COMMAND_SUBMIT, true);","        }","    },","    profilingCommandStart: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"ulong\", this.cl.defs.CL_PROFILING_COMMAND_START, true);","        }","    },","    profilingCommandEnd: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"ulong\", this.cl.defs.CL_PROFILING_COMMAND_END, true);","        }","    }","});","","//CLEvent","","function createReleaseFunction(cl, handle) {","    return CLWrapper._releaseFunction(function () {","        cl.imports.clReleaseEvent(handle);","    });","}","","function CLEvent(cl, handle) {","    CLWrapper.call(this, cl, handle, createReleaseFunction(cl, handle));","    this.profilingInfo = new CLEventProfilingInfo(cl, handle);","    this._promise = null;","    this._cb = null;","    this._icb = null;","}","","util.inherits(CLEvent, CLWrapper);","","Object.defineProperties(CLEvent.prototype, {","    _classInfoFunction: {","        get: function () {","            return \"clGetEventInfo\";","        }","    },","    commandQueue: {","        get: function () {","            this._throwIfReleased();","            CLCommandQueue = CLCommandQueue || (CLCommandQueue = require(\"./clCommandQueue\"));","            return new CLCommandQueue(this.cl, this._getInfo(this.cl.types.CommandQueue, this.cl.defs.CL_EVENT_COMMAND_QUEUE));","        }","    },","    context: {","        get: function () {","            this._throwIfReleased();","            return new CLContext(this.cl, this._getInfo(this.cl.types.Context, this.cl.defs.CL_EVENT_CONTEXT));","        }","    },","    commandType: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.CommandType, this.cl.defs.CL_EVENT_COMMAND_TYPE);","        }","    },","    commandExecutionStatus: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(this.cl.types.CommandExecutionStatus, this.cl.defs.CL_EVENT_COMMAND_EXECUTION_STATUS, true);","        }","    },","    promise: {","        get: function () {","            var self = this;","            self._throwIfReleased();","            if (self._promise) {","                return self._promise;","            }","            var cl = self.cl;","            var defer;","            self._promise = new Bluebird(function (resolve, reject) {","                defer = {","                    resolve: resolve,","                    reject: reject","                };","            });","            this._icb = function (h, err2, data) {","                try {","                    cl.checkError(err2);","                    if (err2 === 0) {","                        defer.resolve();","                    }","                }","                catch (e) {","                    defer.reject(e);","                }","            };","            this._cb = cl.types.SetEventCallbackCallback.toPointer(this._icb);","            var err = cl.imports.clSetEventCallback(self.handle, cl.defs.CL_COMPLETE, this._cb, null);","            cl.checkError(err);","            self._promise = self._promise.finally(function() {","                setImmediate(function () {","                    self.release();","                });","            });","            self._promise = clUtils.keepAlive(self._promise);","            return self._promise;","        }","    }","});","","module.exports = CLEvent;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"16":1,"17":0,"20":1,"22":1,"25":0,"30":0,"31":0,"36":0,"37":0,"42":0,"43":0,"48":0,"49":0,"56":1,"57":0,"58":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"70":1,"72":1,"75":0,"80":0,"81":0,"82":0,"87":0,"88":0,"93":0,"94":0,"99":0,"100":0,"105":0,"106":0,"107":0,"108":0,"110":0,"111":0,"112":0,"113":0,"118":0,"119":0,"120":0,"121":0,"122":0,"126":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"137":0,"138":0,"143":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/ndRange.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/ndRange.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"NDRange","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":13},"end":{"line":23,"column":25}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":13},"end":{"line":28,"column":24}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":13},"end":{"line":33,"column":24}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":13},"end":{"line":38,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":6,"column":0},"end":{"line":19,"column":1}},"4":{"start":{"line":7,"column":4},"end":{"line":18,"column":5}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":46}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":46}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":47}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":33}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":33}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":33}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":26}},"12":{"start":{"line":21,"column":0},"end":{"line":42,"column":3}},"13":{"start":{"line":24,"column":12},"end":{"line":24,"column":115}},"14":{"start":{"line":29,"column":12},"end":{"line":29,"column":37}},"15":{"start":{"line":34,"column":12},"end":{"line":34,"column":37}},"16":{"start":{"line":39,"column":12},"end":{"line":39,"column":37}},"17":{"start":{"line":44,"column":0},"end":{"line":44,"column":34}},"18":{"start":{"line":46,"column":0},"end":{"line":46,"column":25}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":4}},{"start":{"line":7,"column":4},"end":{"line":7,"column":4}}]},"2":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":36},"end":{"line":8,"column":41}},{"start":{"line":8,"column":44},"end":{"line":8,"column":45}}]},"3":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":36},"end":{"line":9,"column":41}},{"start":{"line":9,"column":44},"end":{"line":9,"column":45}}]},"4":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":45},"end":{"line":24,"column":46}},{"start":{"line":24,"column":50},"end":{"line":24,"column":113}}]},"5":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":76},"end":{"line":24,"column":77}},{"start":{"line":24,"column":81},"end":{"line":24,"column":112}}]},"6":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":107},"end":{"line":24,"column":108}},{"start":{"line":24,"column":111},"end":{"line":24,"column":112}}]}},"code":["\"use strict\";","","var _ = require(\"lodash\");","var types = require(\"./types\");","","function NDRange(xSize, ySize, zSize) {","    if (_.isNumber(xSize)) {","        ySize = _.isNumber(ySize) ? ySize : 0;","        zSize = _.isNumber(zSize) ? zSize : 0;","","        this.sizes = new (types.SizeTArray)(3);","        this.sizes.set(0, xSize);","        this.sizes.set(1, ySize);","        this.sizes.set(2, zSize);","    }","    else {","        this.sizes = null;","    }","}","","Object.defineProperties(NDRange.prototype, {","    dimensions: {","        get: function () {","            return this.sizes.get(2) !== 0 ? 3 : (this.sizes.get(1) !== 0 ? 2 : (this.sizes.get(0) !== 0 ? 1 : 0));","        }","    },","    xSize: {","        get: function() {","            return this.sizes.get(0);","        }","    },","    ySize: {","        get: function() {","            return this.sizes.get(1);","        }","    },","    zSize: {","        get: function() {","            return this.sizes.get(2);","        }","    }","});","","NDRange.nullRange = new NDRange();","","module.exports = NDRange;"],"l":{"3":1,"4":1,"6":1,"7":1,"8":0,"9":0,"11":0,"12":0,"13":0,"14":0,"17":1,"21":1,"24":0,"29":0,"34":0,"39":0,"44":1,"46":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clUserEvent.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clUserEvent.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"CLUserEvent","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":34},"end":{"line":19,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":23}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"6":{"start":{"line":9,"column":0},"end":{"line":15,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":24}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":78}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":23}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":35}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"13":{"start":{"line":19,"column":0},"end":{"line":23,"column":2}},"14":{"start":{"line":20,"column":4},"end":{"line":20,"column":28}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":72}},"16":{"start":{"line":22,"column":4},"end":{"line":22,"column":28}},"17":{"start":{"line":25,"column":0},"end":{"line":25,"column":29}}},"branchMap":{},"code":["\"use strict\";","","var util = require(\"util\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var CLEvent = require(\"./clEvent\");","var clUtils = require(\"./clUtils\");","","function CLUserEvent(context) {","    var cl = context.cl;","    var err = ref.alloc(cl.types.ErrorCode);","    var handle = cl.imports.clCreateUserEvent(clUtils.toHandle(context), err);","    cl.checkError(err);","    CLEvent.call(this, cl, handle);","}","","util.inherits(CLUserEvent, CLEvent);","","CLUserEvent.prototype.setStatus = function(status) {","    this._throwIfReleased();","    var err = this.cl.imports.clSetUserEventStatus(this.handle, status);","    this.cl.checkError(err);","};","","module.exports = CLUserEvent;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"17":1,"19":1,"20":0,"21":0,"22":0,"25":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clProgram.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clProgram.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":1,"103":0,"104":0,"105":1,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"createReleaseFunction","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":43}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":38},"end":{"line":46,"column":50}}},"3":{"name":"CLProgram1","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":37}}},"4":{"name":"CLProgram2","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":48}}},"5":{"name":"CLProgram","line":117,"loc":{"start":{"line":117,"column":0},"end":{"line":117,"column":21}}},"6":{"name":"(anonymous_6)","line":133,"loc":{"start":{"line":133,"column":13},"end":{"line":133,"column":25}}},"7":{"name":"(anonymous_7)","line":140,"loc":{"start":{"line":140,"column":13},"end":{"line":140,"column":25}}},"8":{"name":"(anonymous_8)","line":148,"loc":{"start":{"line":148,"column":13},"end":{"line":148,"column":25}}},"9":{"name":"(anonymous_9)","line":153,"loc":{"start":{"line":153,"column":16},"end":{"line":153,"column":31}}},"10":{"name":"(anonymous_10)","line":162,"loc":{"start":{"line":162,"column":13},"end":{"line":162,"column":25}}},"11":{"name":"(anonymous_11)","line":182,"loc":{"start":{"line":182,"column":28},"end":{"line":182,"column":56}}},"12":{"name":"(anonymous_12)","line":188,"loc":{"start":{"line":188,"column":31},"end":{"line":188,"column":58}}},"13":{"name":"(anonymous_13)","line":191,"loc":{"start":{"line":191,"column":18},"end":{"line":191,"column":30}}},"14":{"name":"(anonymous_14)","line":230,"loc":{"start":{"line":230,"column":35},"end":{"line":230,"column":51}}},"15":{"name":"(anonymous_15)","line":234,"loc":{"start":{"line":234,"column":39},"end":{"line":234,"column":51}}},"16":{"name":"(anonymous_16)","line":250,"loc":{"start":{"line":250,"column":37},"end":{"line":250,"column":55}}},"17":{"name":"(anonymous_17)","line":255,"loc":{"start":{"line":255,"column":38},"end":{"line":255,"column":56}}},"18":{"name":"(anonymous_18)","line":260,"loc":{"start":{"line":260,"column":34},"end":{"line":260,"column":52}}},"19":{"name":"(anonymous_19)","line":265,"loc":{"start":{"line":265,"column":35},"end":{"line":265,"column":47}}},"20":{"name":"(anonymous_20)","line":268,"loc":{"start":{"line":268,"column":36},"end":{"line":268,"column":54}}},"21":{"name":"(anonymous_21)","line":273,"loc":{"start":{"line":273,"column":34},"end":{"line":273,"column":46}}},"22":{"name":"(anonymous_22)","line":292,"loc":{"start":{"line":292,"column":38},"end":{"line":292,"column":50}}}},"statementMap":{"1":{"start":{"line":32,"column":0},"end":{"line":32,"column":39}},"2":{"start":{"line":33,"column":0},"end":{"line":33,"column":27}},"3":{"start":{"line":34,"column":0},"end":{"line":34,"column":26}},"4":{"start":{"line":35,"column":0},"end":{"line":35,"column":35}},"5":{"start":{"line":36,"column":0},"end":{"line":36,"column":23}},"6":{"start":{"line":37,"column":0},"end":{"line":37,"column":39}},"7":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}},"8":{"start":{"line":39,"column":0},"end":{"line":39,"column":35}},"9":{"start":{"line":40,"column":0},"end":{"line":40,"column":37}},"10":{"start":{"line":41,"column":0},"end":{"line":41,"column":38}},"11":{"start":{"line":43,"column":0},"end":{"line":43,"column":29}},"12":{"start":{"line":45,"column":0},"end":{"line":49,"column":1}},"13":{"start":{"line":46,"column":4},"end":{"line":48,"column":7}},"14":{"start":{"line":47,"column":8},"end":{"line":47,"column":44}},"15":{"start":{"line":58,"column":0},"end":{"line":69,"column":1}},"16":{"start":{"line":59,"column":4},"end":{"line":59,"column":27}},"17":{"start":{"line":60,"column":4},"end":{"line":60,"column":24}},"18":{"start":{"line":61,"column":4},"end":{"line":61,"column":44}},"19":{"start":{"line":62,"column":4},"end":{"line":62,"column":47}},"20":{"start":{"line":63,"column":4},"end":{"line":63,"column":34}},"21":{"start":{"line":64,"column":4},"end":{"line":64,"column":48}},"22":{"start":{"line":65,"column":4},"end":{"line":65,"column":27}},"23":{"start":{"line":66,"column":4},"end":{"line":66,"column":107}},"24":{"start":{"line":67,"column":4},"end":{"line":67,"column":23}},"25":{"start":{"line":68,"column":4},"end":{"line":68,"column":72}},"26":{"start":{"line":79,"column":0},"end":{"line":106,"column":1}},"27":{"start":{"line":80,"column":4},"end":{"line":80,"column":27}},"28":{"start":{"line":81,"column":4},"end":{"line":81,"column":24}},"29":{"start":{"line":82,"column":4},"end":{"line":82,"column":44}},"30":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"31":{"start":{"line":85,"column":8},"end":{"line":85,"column":30}},"32":{"start":{"line":87,"column":4},"end":{"line":87,"column":63}},"33":{"start":{"line":88,"column":4},"end":{"line":88,"column":65}},"34":{"start":{"line":89,"column":4},"end":{"line":92,"column":5}},"35":{"start":{"line":90,"column":8},"end":{"line":90,"column":40}},"36":{"start":{"line":91,"column":8},"end":{"line":91,"column":47}},"37":{"start":{"line":93,"column":4},"end":{"line":93,"column":57}},"38":{"start":{"line":95,"column":4},"end":{"line":102,"column":13}},"39":{"start":{"line":104,"column":4},"end":{"line":104,"column":23}},"40":{"start":{"line":105,"column":4},"end":{"line":105,"column":72}},"41":{"start":{"line":117,"column":0},"end":{"line":127,"column":1}},"42":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"43":{"start":{"line":119,"column":8},"end":{"line":119,"column":76}},"44":{"start":{"line":121,"column":4},"end":{"line":126,"column":5}},"45":{"start":{"line":122,"column":8},"end":{"line":122,"column":42}},"46":{"start":{"line":125,"column":8},"end":{"line":125,"column":42}},"47":{"start":{"line":129,"column":0},"end":{"line":129,"column":36}},"48":{"start":{"line":131,"column":0},"end":{"line":167,"column":3}},"49":{"start":{"line":134,"column":12},"end":{"line":134,"column":38}},"50":{"start":{"line":141,"column":12},"end":{"line":141,"column":36}},"51":{"start":{"line":142,"column":12},"end":{"line":142,"column":78}},"52":{"start":{"line":149,"column":12},"end":{"line":149,"column":36}},"53":{"start":{"line":150,"column":12},"end":{"line":150,"column":29}},"54":{"start":{"line":151,"column":12},"end":{"line":151,"column":49}},"55":{"start":{"line":152,"column":12},"end":{"line":156,"column":14}},"56":{"start":{"line":154,"column":20},"end":{"line":154,"column":49}},"57":{"start":{"line":163,"column":12},"end":{"line":163,"column":36}},"58":{"start":{"line":164,"column":12},"end":{"line":164,"column":71}},"59":{"start":{"line":182,"column":0},"end":{"line":228,"column":2}},"60":{"start":{"line":183,"column":4},"end":{"line":183,"column":28}},"61":{"start":{"line":184,"column":4},"end":{"line":184,"column":20}},"62":{"start":{"line":185,"column":4},"end":{"line":185,"column":21}},"63":{"start":{"line":186,"column":4},"end":{"line":186,"column":30}},"64":{"start":{"line":187,"column":4},"end":{"line":187,"column":16}},"65":{"start":{"line":188,"column":4},"end":{"line":224,"column":7}},"66":{"start":{"line":189,"column":8},"end":{"line":189,"column":25}},"67":{"start":{"line":190,"column":8},"end":{"line":223,"column":9}},"68":{"start":{"line":191,"column":12},"end":{"line":200,"column":14}},"69":{"start":{"line":192,"column":16},"end":{"line":199,"column":17}},"70":{"start":{"line":193,"column":20},"end":{"line":198,"column":21}},"71":{"start":{"line":194,"column":24},"end":{"line":194,"column":34}},"72":{"start":{"line":197,"column":24},"end":{"line":197,"column":36}},"73":{"start":{"line":201,"column":12},"end":{"line":201,"column":60}},"74":{"start":{"line":202,"column":12},"end":{"line":208,"column":22}},"75":{"start":{"line":209,"column":12},"end":{"line":209,"column":31}},"76":{"start":{"line":212,"column":12},"end":{"line":222,"column":13}},"77":{"start":{"line":213,"column":16},"end":{"line":221,"column":17}},"78":{"start":{"line":214,"column":20},"end":{"line":216,"column":21}},"79":{"start":{"line":215,"column":24},"end":{"line":215,"column":41}},"80":{"start":{"line":217,"column":20},"end":{"line":217,"column":30}},"81":{"start":{"line":220,"column":20},"end":{"line":220,"column":32}},"82":{"start":{"line":225,"column":4},"end":{"line":225,"column":21}},"83":{"start":{"line":226,"column":4},"end":{"line":226,"column":23}},"84":{"start":{"line":227,"column":4},"end":{"line":227,"column":38}},"85":{"start":{"line":230,"column":0},"end":{"line":232,"column":2}},"86":{"start":{"line":231,"column":4},"end":{"line":231,"column":36}},"87":{"start":{"line":234,"column":0},"end":{"line":248,"column":2}},"88":{"start":{"line":235,"column":4},"end":{"line":235,"column":35}},"89":{"start":{"line":236,"column":4},"end":{"line":236,"column":89}},"90":{"start":{"line":237,"column":4},"end":{"line":237,"column":28}},"91":{"start":{"line":238,"column":4},"end":{"line":238,"column":32}},"92":{"start":{"line":239,"column":4},"end":{"line":239,"column":54}},"93":{"start":{"line":240,"column":4},"end":{"line":240,"column":83}},"94":{"start":{"line":241,"column":4},"end":{"line":241,"column":28}},"95":{"start":{"line":243,"column":4},"end":{"line":243,"column":20}},"96":{"start":{"line":244,"column":4},"end":{"line":246,"column":5}},"97":{"start":{"line":245,"column":8},"end":{"line":245,"column":56}},"98":{"start":{"line":247,"column":4},"end":{"line":247,"column":18}},"99":{"start":{"line":250,"column":0},"end":{"line":253,"column":2}},"100":{"start":{"line":251,"column":4},"end":{"line":251,"column":28}},"101":{"start":{"line":252,"column":4},"end":{"line":252,"column":132}},"102":{"start":{"line":255,"column":0},"end":{"line":258,"column":2}},"103":{"start":{"line":256,"column":4},"end":{"line":256,"column":28}},"104":{"start":{"line":257,"column":4},"end":{"line":257,"column":124}},"105":{"start":{"line":260,"column":0},"end":{"line":263,"column":2}},"106":{"start":{"line":261,"column":4},"end":{"line":261,"column":28}},"107":{"start":{"line":262,"column":4},"end":{"line":262,"column":120}},"108":{"start":{"line":265,"column":0},"end":{"line":271,"column":2}},"109":{"start":{"line":266,"column":4},"end":{"line":266,"column":28}},"110":{"start":{"line":267,"column":4},"end":{"line":267,"column":20}},"111":{"start":{"line":268,"column":4},"end":{"line":270,"column":18}},"112":{"start":{"line":269,"column":8},"end":{"line":269,"column":40}},"113":{"start":{"line":273,"column":0},"end":{"line":290,"column":2}},"114":{"start":{"line":274,"column":4},"end":{"line":274,"column":28}},"115":{"start":{"line":275,"column":4},"end":{"line":275,"column":21}},"116":{"start":{"line":276,"column":4},"end":{"line":276,"column":39}},"117":{"start":{"line":277,"column":4},"end":{"line":277,"column":57}},"118":{"start":{"line":278,"column":4},"end":{"line":278,"column":20}},"119":{"start":{"line":279,"column":4},"end":{"line":283,"column":5}},"120":{"start":{"line":280,"column":8},"end":{"line":280,"column":54}},"121":{"start":{"line":281,"column":8},"end":{"line":281,"column":36}},"122":{"start":{"line":282,"column":8},"end":{"line":282,"column":32}},"123":{"start":{"line":285,"column":4},"end":{"line":285,"column":145}},"124":{"start":{"line":287,"column":4},"end":{"line":287,"column":28}},"125":{"start":{"line":289,"column":4},"end":{"line":289,"column":18}},"126":{"start":{"line":292,"column":0},"end":{"line":304,"column":2}},"127":{"start":{"line":293,"column":4},"end":{"line":293,"column":28}},"128":{"start":{"line":294,"column":4},"end":{"line":294,"column":37}},"129":{"start":{"line":295,"column":4},"end":{"line":295,"column":60}},"130":{"start":{"line":298,"column":4},"end":{"line":298,"column":151}},"131":{"start":{"line":301,"column":4},"end":{"line":301,"column":28}},"132":{"start":{"line":303,"column":4},"end":{"line":303,"column":18}},"133":{"start":{"line":306,"column":0},"end":{"line":306,"column":27}}},"branchMap":{"1":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"2":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"3":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"4":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":14},"end":{"line":186,"column":21}},{"start":{"line":186,"column":25},"end":{"line":186,"column":29}}]},"5":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":16},"end":{"line":192,"column":16}},{"start":{"line":192,"column":16},"end":{"line":192,"column":16}}]},"6":{"line":204,"type":"cond-expr","locations":[{"start":{"line":204,"column":26},"end":{"line":204,"column":40}},{"start":{"line":204,"column":43},"end":{"line":204,"column":44}}]},"7":{"line":205,"type":"cond-expr","locations":[{"start":{"line":205,"column":26},"end":{"line":205,"column":60}},{"start":{"line":205,"column":63},"end":{"line":205,"column":67}}]},"8":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":12},"end":{"line":212,"column":12}},{"start":{"line":212,"column":12},"end":{"line":212,"column":12}}]},"9":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":20},"end":{"line":214,"column":20}},{"start":{"line":214,"column":20},"end":{"line":214,"column":20}}]}},"code":["/*","License: [MIT](../LICENSE)","","Copyright (c) 2014 Gábor Mező aka [unbornchikken](https://github.com/unbornchikken)","*/","","/*","# CLProgram class","","Represents an OpenCL program.","","**base:** [CLWrapper](clWrapper.html)","","**Properties:**","- [numDevices](#numdevices)","- [devices](#devices)","- [sourceCode](#sourcecode)","","**Methods:**","- [constructor](#constructor)","- [build](#build)","- [createKernel](#createkernel)","- [createAllKernels](#createallkernels)","- [getBuildStatus](#getbuildstatus)","- [getBuildOptions](#getbuildoptions)","- [getBuildLog](#getbuildlog)","- [getBuildLogs](#getbuildlogs)","- [getBinaries](#getbinaries)","*/","","\"use strict\";","var CLWrapper = require(\"./clWrapper\");","var util = require(\"util\");","var _ = require(\"lodash\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var CLContext = require(\"./clContext\");","var Bluebird = require(\"bluebird\");","var clUtils = require(\"./clUtils\");","var CLKernel = require(\"./clKernel\");","var clPredefs = require(\"./clPredef\");","","const BUILD_ERROR_CODE = -11;","","function createReleaseFunction(cl, handle) {","    return CLWrapper._releaseFunction(function () {","        cl.imports.clReleaseProgram(handle);","    });","}","","/* ### constructor 1","Program can be created from source.","","**arguments:**","- **context:** Owner CLContext instance.","- **source:** OpenCL program source code string.","*/","function CLProgram1(context, source) {","    this.context = context;","    var cl = context.cl;","    var err = ref.alloc(cl.types.ErrorCode);","    var lengths = new (cl.types.SizeTArray)(1);","    lengths.set(0, source.length);","    var sources = new (cl.types.StringArray)(1);","    sources.set(0, source);","    var handle = cl.imports.clCreateProgramWithSource(clUtils.toHandle(context), 1, sources, lengths, err);","    cl.checkError(err);","    CLWrapper.call(this, cl, handle, createReleaseFunction(cl, handle));","}","","/* ### constructor 2","Program can be created from binaries.","","**arguments:**","- **context:** Owner CLContext instance.","- **binaries:** array of Buffers or a single Buffer containing the precompiled program binaries","- **devices:** corresponding CLDevice instances or handles for the above binaries","*/","function CLProgram2(context, binaries, devices) {","    this.context = context;","    var cl = context.cl;","    var err = ref.alloc(cl.types.ErrorCode);","","    if (!_.isArray(binaries)) {","        binaries = [binaries];","    }","    var binaryArray = new (cl.types.Binaries)(binaries.length);","    var binarySizes = new (cl.types.SizeTArray)(binaries.length);","    for (var i = 0; i < binaries.length; i++) {","        binaryArray.set(i, binaries[i]);","        binarySizes.set(i, binaries[i].length);","    }","    var deviceArray = clUtils.createDeviceArray(devices);","","    var handle = cl.imports.clCreateProgramWithBinary(","        clUtils.toHandle(context),","        deviceArray.length,","        deviceArray,","        binarySizes,","        binaryArray,","        null,","        err);","","    cl.checkError(err);","    CLWrapper.call(this, cl, handle, createReleaseFunction(cl, handle));","}","","/*","## constructor","","### [version 1](#constructor-1)","Program can be created from source.","","### [version 2](#constructor-2)","Program can be created from binaries.","*/","function CLProgram() {","    if (!(arguments[0] instanceof CLContext)) {","        throw new TypeError(\"First argument must be a CLContext instance.\");","    }","    if (_.isString(arguments[1])) {","        CLProgram1.apply(this, arguments);","    }","    else {","        CLProgram2.apply(this, arguments);","    }","}","","util.inherits(CLProgram, CLWrapper);","","Object.defineProperties(CLProgram.prototype, {","    _classInfoFunction: {","        get: function () {","            return \"clGetProgramInfo\";","        }","    },","    // ## numDevices","    // Number of devices","    numDevices: {","        get: function () {","            this._throwIfReleased();","            return this._getInfo(\"uint\", this.cl.defs.CL_PROGRAM_NUM_DEVICES);","        }","    },","    // ## numDevices","    // Array of devices as [CLDevice](clDevice.html) instances.","    devices: {","        get: function () {","            this._throwIfReleased();","            var cl = this.cl;","            var CLDevice = require(\"./clDevice\");","            return this._getArrayInfo(cl.types.DeviceId, cl.defs.CL_PROGRAM_DEVICES).map(","                function (did) {","                    return new CLDevice(cl, did);","                }","            );","        }","    },","    // ## sourceCode","    // Source code string if program was created from source, null otherwise.","    sourceCode: {","        get: function () {","            this._throwIfReleased();","            return this._getStringInfo(this.cl.defs.CL_PROGRAM_SOURCE);","        }","    }","});","","/* ## build","Compiles a program source, or builds program from binaries.","","**arguments**:","- **options:**: command line options, see [the platform API documentation](https://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/clBuildProgram.html)","- **devices:**: array of CLDevice instances or handles or null.","If it is a non-null value, the program executable is built for devices specified in this list for which a source or binary has been loaded,","if it\"s null the program executable is built for all devices associated with program for which a source or binary has been loaded.","","**returns:**","","A promise that resolves to no value.","*/","CLProgram.prototype.build = function (options, devices) {","    this._throwIfReleased();","    var self = this;","    var cl = self.cl;","    options = options || null;","    var cbi, cb;","    var promise = new Bluebird(function (resolve, reject) {","        var done = false;","        try {","            cbi = function () {","                if (!done) {","                    try {","                        resolve();","                    }","                    finally {","                        done = true;","                    }","                }","            };","            cb = cl.types.BuildProgramNotify.toPointer(cbi);","            var err = cl.imports.clBuildProgram(","                self.handle,","                devices ? devices.length : 0,","                devices ? clUtils.createDeviceArray(devices) : null,","                options,","                cb,","                null);","            cl.checkError(err);","        }","        catch (e) {","            if (!done) {","                try {","                    if (e.code = BUILD_ERROR_CODE) {","                        return resolve();","                    }","                    reject(e);","                }","                finally {","                    done = true;","                }","            }","        }","    });","    promise._cb = cb;","    promise._cbi = cbi;","    return clUtils.keepAlive(promise);","};","","CLProgram.prototype.createKernel = function (name) {","    return new CLKernel(this, name);","};","","CLProgram.prototype.createAllKernels = function () {","    var numKernels = clPredefs.num;","    var err = this.cl.imports.clCreateKernelsInProgram(this.handle, 0, null, numKernels);","    this.cl.checkError(err);","    var nk = numKernels.deref();","    var kernels = new (this.cl.types.KernelArray)(nk);","    err = this.cl.imports.clCreateKernelsInProgram(this.handle, nk, kernels, null);","    this.cl.checkError(err);","","    var result = [];","    for (var i = 0; i < nk; i++) {","        result.push(new CLKernel(this, kernels.get(i)));","    }","    return result;","};","","CLProgram.prototype.getBuildStatus = function (device) {","    this._throwIfReleased();","    return this._getInfo2(ref.types.int, this.cl.imports.clGetProgramBuildInfo, device, this.cl.defs.CL_PROGRAM_BUILD_STATUS, true);","};","","CLProgram.prototype.getBuildOptions = function (device) {","    this._throwIfReleased();","    return this._getStringInfo2(this.cl.imports.clGetProgramBuildInfo, device, this.cl.defs.CL_PROGRAM_BUILD_OPTIONS, true);","};","","CLProgram.prototype.getBuildLog = function (device) {","    this._throwIfReleased();","    return this._getStringInfo2(this.cl.imports.clGetProgramBuildInfo, device, this.cl.defs.CL_PROGRAM_BUILD_LOG, true);","};","","CLProgram.prototype.getBuildLogs = function () {","    this._throwIfReleased();","    var self = this;","    return this.context.devices.map(function (device) {","        return self.getBuildLog(device);","    }).join(\"\\n\");","};","","CLProgram.prototype.getBinaries = function () {","    this._throwIfReleased();","    var cl = this.cl;","    var sizes = this._getBinarySizes();","    var binaries = new (cl.types.Binaries)(sizes.length);","    var result = [];","    for (var i = 0; i < sizes.length; i++) {","        var bin = new (cl.types.Binary)(sizes.get(i));","        binaries.set(i, bin.buffer);","        result.push(bin.buffer);","    }","","    var err = cl.imports.clGetProgramInfo(this.handle, cl.defs.CL_PROGRAM_BINARIES, binaries.length * ref.sizeof.pointer, binaries.buffer, null);","","    this.cl.checkError(err);","","    return result;","};","","CLProgram.prototype._getBinarySizes = function () {","    this._throwIfReleased();","    var numDevices = this.numDevices;","    var buffer = new (this.cl.types.SizeTArray)(numDevices);","","    // get actual data","    var err = this.cl.imports.clGetProgramInfo(this.handle, this.cl.defs.CL_PROGRAM_BINARY_SIZES, numDevices * ref.sizeof.size_t, buffer.buffer, null);","","    // error checking","    this.cl.checkError(err);","","    return buffer;","};","","module.exports = CLProgram;",""],"l":{"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"43":1,"45":1,"46":0,"47":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"79":1,"80":0,"81":0,"82":0,"84":0,"85":0,"87":0,"88":0,"89":0,"90":0,"91":0,"93":0,"95":0,"104":0,"105":0,"117":1,"118":0,"119":0,"121":0,"122":0,"125":0,"129":1,"131":1,"134":0,"141":0,"142":0,"149":0,"150":0,"151":0,"152":0,"154":0,"163":0,"164":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"197":0,"201":0,"202":0,"209":0,"212":0,"213":0,"214":0,"215":0,"217":0,"220":0,"225":0,"226":0,"227":0,"230":1,"231":0,"234":1,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"243":0,"244":0,"245":0,"247":0,"250":1,"251":0,"252":0,"255":1,"256":0,"257":0,"260":1,"261":0,"262":0,"265":1,"266":0,"267":0,"268":0,"269":0,"273":1,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"285":0,"287":0,"289":0,"292":1,"293":0,"294":0,"295":0,"298":0,"301":0,"303":0,"306":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clKernel.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clKernel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":1,"39":0,"40":1,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"createReleaseFunction","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":38},"end":{"line":13,"column":50}}},"3":{"name":"CLKernel1","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}}},"4":{"name":"CLKernel2","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":36}}},"5":{"name":"CLKernel","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":20}}},"6":{"name":"(anonymous_6)","line":49,"loc":{"start":{"line":49,"column":13},"end":{"line":49,"column":25}}},"7":{"name":"(anonymous_7)","line":54,"loc":{"start":{"line":54,"column":13},"end":{"line":54,"column":25}}},"8":{"name":"(anonymous_8)","line":59,"loc":{"start":{"line":59,"column":13},"end":{"line":59,"column":25}}},"9":{"name":"(anonymous_9)","line":64,"loc":{"start":{"line":64,"column":13},"end":{"line":64,"column":25}}},"10":{"name":"(anonymous_10)","line":70,"loc":{"start":{"line":70,"column":38},"end":{"line":70,"column":56}}},"11":{"name":"(anonymous_11)","line":74,"loc":{"start":{"line":74,"column":45},"end":{"line":74,"column":63}}},"12":{"name":"(anonymous_12)","line":78,"loc":{"start":{"line":78,"column":37},"end":{"line":78,"column":55}}},"13":{"name":"(anonymous_13)","line":82,"loc":{"start":{"line":82,"column":55},"end":{"line":82,"column":73}}},"14":{"name":"(anonymous_14)","line":86,"loc":{"start":{"line":86,"column":39},"end":{"line":86,"column":57}}},"15":{"name":"(anonymous_15)","line":90,"loc":{"start":{"line":90,"column":28},"end":{"line":90,"column":58}}},"16":{"name":"(anonymous_16)","line":117,"loc":{"start":{"line":117,"column":29},"end":{"line":117,"column":41}}},"17":{"name":"(anonymous_17)","line":119,"loc":{"start":{"line":119,"column":66},"end":{"line":119,"column":84}}},"18":{"name":"(anonymous_18)","line":124,"loc":{"start":{"line":124,"column":26},"end":{"line":124,"column":76}}},"19":{"name":"(anonymous_19)","line":125,"loc":{"start":{"line":125,"column":11},"end":{"line":125,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"9":{"start":{"line":12,"column":0},"end":{"line":16,"column":1}},"10":{"start":{"line":13,"column":4},"end":{"line":15,"column":7}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":43}},"12":{"start":{"line":18,"column":0},"end":{"line":26,"column":1}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":24}},"14":{"start":{"line":20,"column":4},"end":{"line":20,"column":44}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":81}},"16":{"start":{"line":22,"column":4},"end":{"line":22,"column":23}},"17":{"start":{"line":23,"column":4},"end":{"line":23,"column":72}},"18":{"start":{"line":24,"column":4},"end":{"line":24,"column":28}},"19":{"start":{"line":25,"column":4},"end":{"line":25,"column":22}},"20":{"start":{"line":28,"column":0},"end":{"line":33,"column":1}},"21":{"start":{"line":29,"column":4},"end":{"line":29,"column":24}},"22":{"start":{"line":30,"column":4},"end":{"line":30,"column":72}},"23":{"start":{"line":31,"column":4},"end":{"line":31,"column":28}},"24":{"start":{"line":32,"column":4},"end":{"line":32,"column":22}},"25":{"start":{"line":35,"column":0},"end":{"line":43,"column":1}},"26":{"start":{"line":36,"column":4},"end":{"line":41,"column":5}},"27":{"start":{"line":37,"column":8},"end":{"line":37,"column":41}},"28":{"start":{"line":40,"column":8},"end":{"line":40,"column":41}},"29":{"start":{"line":42,"column":4},"end":{"line":42,"column":20}},"30":{"start":{"line":45,"column":0},"end":{"line":45,"column":35}},"31":{"start":{"line":47,"column":0},"end":{"line":68,"column":3}},"32":{"start":{"line":50,"column":12},"end":{"line":50,"column":37}},"33":{"start":{"line":55,"column":12},"end":{"line":55,"column":103}},"34":{"start":{"line":60,"column":12},"end":{"line":60,"column":40}},"35":{"start":{"line":65,"column":12},"end":{"line":65,"column":74}},"36":{"start":{"line":70,"column":0},"end":{"line":72,"column":2}},"37":{"start":{"line":71,"column":4},"end":{"line":71,"column":126}},"38":{"start":{"line":74,"column":0},"end":{"line":76,"column":2}},"39":{"start":{"line":75,"column":4},"end":{"line":75,"column":139}},"40":{"start":{"line":78,"column":0},"end":{"line":80,"column":2}},"41":{"start":{"line":79,"column":4},"end":{"line":79,"column":124}},"42":{"start":{"line":82,"column":0},"end":{"line":84,"column":2}},"43":{"start":{"line":83,"column":4},"end":{"line":83,"column":145}},"44":{"start":{"line":86,"column":0},"end":{"line":88,"column":2}},"45":{"start":{"line":87,"column":4},"end":{"line":87,"column":126}},"46":{"start":{"line":90,"column":0},"end":{"line":115,"column":2}},"47":{"start":{"line":91,"column":4},"end":{"line":91,"column":67}},"48":{"start":{"line":92,"column":4},"end":{"line":92,"column":76}},"49":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"50":{"start":{"line":95,"column":8},"end":{"line":95,"column":30}},"51":{"start":{"line":97,"column":4},"end":{"line":108,"column":5}},"52":{"start":{"line":99,"column":8},"end":{"line":104,"column":9}},"53":{"start":{"line":100,"column":12},"end":{"line":103,"column":13}},"54":{"start":{"line":101,"column":16},"end":{"line":101,"column":25}},"55":{"start":{"line":102,"column":16},"end":{"line":102,"column":22}},"56":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"57":{"start":{"line":106,"column":12},"end":{"line":106,"column":32}},"58":{"start":{"line":109,"column":4},"end":{"line":114,"column":5}},"59":{"start":{"line":110,"column":8},"end":{"line":110,"column":68}},"60":{"start":{"line":113,"column":8},"end":{"line":113,"column":40}},"61":{"start":{"line":117,"column":0},"end":{"line":122,"column":2}},"62":{"start":{"line":118,"column":4},"end":{"line":118,"column":20}},"63":{"start":{"line":119,"column":4},"end":{"line":121,"column":7}},"64":{"start":{"line":120,"column":8},"end":{"line":120,"column":28}},"65":{"start":{"line":124,"column":0},"end":{"line":129,"column":2}},"66":{"start":{"line":125,"column":4},"end":{"line":128,"column":17}},"67":{"start":{"line":126,"column":8},"end":{"line":126,"column":44}},"68":{"start":{"line":127,"column":8},"end":{"line":127,"column":90}},"69":{"start":{"line":131,"column":0},"end":{"line":131,"column":26}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"2":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":32},"end":{"line":55,"column":42}},{"start":{"line":55,"column":45},"end":{"line":55,"column":102}}]},"3":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":11},"end":{"line":92,"column":21}},{"start":{"line":92,"column":25},"end":{"line":92,"column":37}}]},"4":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"5":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":30}},{"start":{"line":97,"column":34},"end":{"line":97,"column":53}}]},"6":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":12}},{"start":{"line":100,"column":12},"end":{"line":100,"column":12}}]},"7":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"8":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"9":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":40},"end":{"line":119,"column":52}},{"start":{"line":119,"column":55},"end":{"line":119,"column":64}}]}},"code":["\"use strict\";","","var CLWrapper = require(\"./clWrapper\");","var util = require(\"util\");","var _ = require(\"lodash\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var clUtils = require(\"./clUtils\");","var KernelArg = require(\"./kernelArg\");","var assert = require(\"assert\");","","function createReleaseFunction(cl, handle) {","    return CLWrapper._releaseFunction(function () {","        cl.imports.clReleaseKernel(handle);","    });","}","","function CLKernel1(program, name) {","    var cl = program.cl;","    var err = ref.alloc(cl.types.ErrorCode);","    var handle = cl.imports.clCreateKernel(clUtils.toHandle(program), name, err);","    cl.checkError(err);","    CLWrapper.call(this, cl, handle, createReleaseFunction(cl, handle));","    this.propgram = program;","    this._name = name;","}","","function CLKernel2(program, handle) {","    var cl = program.cl;","    CLWrapper.call(this, cl, handle, createReleaseFunction(cl, handle));","    this.propgram = program;","    this._name = null;","}","","function CLKernel() {","    if (_.isString(arguments[1])) {","        CLKernel1.apply(this, arguments);","    }","    else {","        CLKernel2.apply(this, arguments);","    }","    this._args = [];","}","","util.inherits(CLKernel, CLWrapper);","","Object.defineProperties(CLKernel.prototype, {","    _classInfoFunction: {","        get: function () {","            return \"clGetKernelInfo\";","        }","    },","    name: {","        get: function () {","            return this._name ? this._name : this._getStringInfo(this.cl.defs.CL_KERNEL_FUNCTION_NAME);","        }","    },","    context: {","        get: function () {","            return this.program.context;","        }","    },","    numArgs: {","        get: function () {","            return this._getInfo(\"uint\", this.cl.defs.CL_KERNEL_NUM_ARGS);","        }","    }","});","","CLKernel.prototype.getWorkgroupSize = function (device) {","    return this._getInfo2(\"size_t\", this.cl.imports.clGetKernelWorkGroupInfo, device, this.cl.defs.CL_KERNEL_WORK_GROUP_SIZE);","};","","CLKernel.prototype.getCompileWorkGroupSize = function (device) {","    return this._getArrayInfo2(\"size_t\", this.cl.imports.clGetKernelWorkGroupInfo, device, this.cl.defs.CL_KERNEL_COMPILE_WORK_GROUP_SIZE);","};","","CLKernel.prototype.getLocalMemSize = function (device) {","    return this._getInfo2(\"ulong\", this.cl.imports.clGetKernelWorkGroupInfo, device, this.cl.defs.CL_KERNEL_LOCAL_MEM_SIZE);","};","","CLKernel.prototype.getPreferredWorkGroupSizeMultiple = function (device) {","    return this._getInfo2(\"size_t\", this.cl.imports.clGetKernelWorkGroupInfo, device, this.cl.defs.CL_KERNEL_PREFERRED_WORK_GROUP_SIZE_MULTIPLE);","};","","CLKernel.prototype.getPrivateMemSize = function (device) {","    return this._getInfo2(\"ulong\", this.cl.imports.clGetKernelWorkGroupInfo, device, this.cl.defs.CL_KERNEL_PRIVATE_MEM_SIZE);","};","","CLKernel.prototype.setArg = function (index, value, type) {","    assert(_.isNumber(index), \"Argument 'index' is not a number.\");","    assert(index >= 0 && index < 2048, \"Argument 'index' is out of range.\");","","    while (this._args.length <= index) {","        this._args.push(null);","    }","    if (_.isPlainObject(value) && _.isUndefined(type)) {","        // Supporting formats like: { \"int\": 55 }","        for (var k in value) {","            if (value.hasOwnProperty(k)) {","                type = k;","                break;","            }","        }","        if (type) {","            value = value[type];","        }","    }","    if (this._args[index] === null) {","        this._args[index] = new KernelArg(this, index, value, type);","    }","    else {","        this._args[index].value = value;","    }","};","","CLKernel.prototype.setArgs = function () {","    var self = this;","    _.forEach(_.isArray(arguments[0]) ? arguments[0] : arguments, function (arg, i) {","        self.setArg(i, arg);","    });","};","","CLKernel.prototype.bind = function (queue, globalRange, localRange, offset) {","    return function () {","        this.setArgs.apply(this, arguments);","        queue.waitable(false).enqueueNDRangeKernel(this, globalRange, localRange, offset);","    }.bind(this);","};","","module.exports = CLKernel;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"13":0,"14":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"28":1,"29":0,"30":0,"31":0,"32":0,"35":1,"36":0,"37":0,"40":0,"42":0,"45":1,"47":1,"50":0,"55":0,"60":0,"65":0,"70":1,"71":0,"74":1,"75":0,"78":1,"79":0,"82":1,"83":0,"86":1,"87":0,"90":1,"91":0,"92":0,"94":0,"95":0,"97":0,"99":0,"100":0,"101":0,"102":0,"105":0,"106":0,"109":0,"110":0,"113":0,"117":1,"118":0,"119":0,"120":0,"124":1,"125":0,"126":0,"127":0,"131":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/kernelArg.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/kernelArg.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"KernelArg","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":47}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":20},"end":{"line":34,"column":32}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":20},"end":{"line":40,"column":32}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":20},"end":{"line":49,"column":32}}},"5":{"name":"(anonymous_5)","line":61,"loc":{"start":{"line":61,"column":13},"end":{"line":61,"column":25}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":13},"end":{"line":64,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":23}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"5":{"start":{"line":8,"column":0},"end":{"line":12,"column":2}},"6":{"start":{"line":14,"column":0},"end":{"line":55,"column":1}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":25}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":23}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":18}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":24}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":22}},"12":{"start":{"line":20,"column":4},"end":{"line":20,"column":29}},"13":{"start":{"line":21,"column":4},"end":{"line":21,"column":21}},"14":{"start":{"line":22,"column":4},"end":{"line":22,"column":55}},"15":{"start":{"line":24,"column":4},"end":{"line":52,"column":5}},"16":{"start":{"line":25,"column":8},"end":{"line":25,"column":43}},"17":{"start":{"line":26,"column":8},"end":{"line":33,"column":9}},"18":{"start":{"line":27,"column":12},"end":{"line":27,"column":56}},"19":{"start":{"line":28,"column":12},"end":{"line":28,"column":68}},"20":{"start":{"line":29,"column":12},"end":{"line":29,"column":55}},"21":{"start":{"line":32,"column":12},"end":{"line":32,"column":37}},"22":{"start":{"line":34,"column":8},"end":{"line":36,"column":21}},"23":{"start":{"line":35,"column":12},"end":{"line":35,"column":120}},"24":{"start":{"line":38,"column":9},"end":{"line":52,"column":5}},"25":{"start":{"line":39,"column":8},"end":{"line":39,"column":44}},"26":{"start":{"line":40,"column":8},"end":{"line":42,"column":21}},"27":{"start":{"line":41,"column":12},"end":{"line":41,"column":97}},"28":{"start":{"line":45,"column":8},"end":{"line":45,"column":41}},"29":{"start":{"line":46,"column":8},"end":{"line":46,"column":42}},"30":{"start":{"line":47,"column":8},"end":{"line":47,"column":50}},"31":{"start":{"line":48,"column":8},"end":{"line":48,"column":51}},"32":{"start":{"line":49,"column":8},"end":{"line":51,"column":21}},"33":{"start":{"line":50,"column":12},"end":{"line":50,"column":114}},"34":{"start":{"line":54,"column":4},"end":{"line":54,"column":16}},"35":{"start":{"line":57,"column":0},"end":{"line":57,"column":31}},"36":{"start":{"line":59,"column":0},"end":{"line":97,"column":3}},"37":{"start":{"line":62,"column":12},"end":{"line":62,"column":31}},"38":{"start":{"line":65,"column":12},"end":{"line":94,"column":13}},"39":{"start":{"line":66,"column":16},"end":{"line":80,"column":17}},"40":{"start":{"line":67,"column":20},"end":{"line":69,"column":21}},"41":{"start":{"line":68,"column":24},"end":{"line":68,"column":31}},"42":{"start":{"line":70,"column":20},"end":{"line":70,"column":39}},"43":{"start":{"line":71,"column":20},"end":{"line":71,"column":32}},"44":{"start":{"line":74,"column":20},"end":{"line":74,"column":52}},"45":{"start":{"line":75,"column":20},"end":{"line":79,"column":21}},"46":{"start":{"line":76,"column":24},"end":{"line":76,"column":68}},"47":{"start":{"line":77,"column":24},"end":{"line":77,"column":67}},"48":{"start":{"line":78,"column":24},"end":{"line":78,"column":36}},"49":{"start":{"line":82,"column":17},"end":{"line":94,"column":13}},"50":{"start":{"line":83,"column":16},"end":{"line":86,"column":17}},"51":{"start":{"line":84,"column":20},"end":{"line":84,"column":37}},"52":{"start":{"line":85,"column":20},"end":{"line":85,"column":32}},"53":{"start":{"line":89,"column":16},"end":{"line":93,"column":17}},"54":{"start":{"line":90,"column":20},"end":{"line":90,"column":37}},"55":{"start":{"line":91,"column":20},"end":{"line":91,"column":63}},"56":{"start":{"line":92,"column":20},"end":{"line":92,"column":32}},"57":{"start":{"line":99,"column":0},"end":{"line":99,"column":27}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":28}},{"start":{"line":24,"column":32},"end":{"line":24,"column":61}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":8}},{"start":{"line":26,"column":8},"end":{"line":26,"column":8}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":9},"end":{"line":38,"column":9}},{"start":{"line":38,"column":9},"end":{"line":38,"column":9}}]},"5":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":13},"end":{"line":38,"column":32}},{"start":{"line":38,"column":36},"end":{"line":38,"column":49}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]},"7":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":16},"end":{"line":66,"column":16}},{"start":{"line":66,"column":16},"end":{"line":66,"column":16}}]},"8":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":20},"end":{"line":67,"column":20}},{"start":{"line":67,"column":20},"end":{"line":67,"column":20}}]},"9":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":20},"end":{"line":75,"column":20}},{"start":{"line":75,"column":20},"end":{"line":75,"column":20}}]},"10":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":24},"end":{"line":75,"column":43}},{"start":{"line":75,"column":47},"end":{"line":75,"column":91}}]},"11":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":17},"end":{"line":82,"column":17}},{"start":{"line":82,"column":17},"end":{"line":82,"column":17}}]},"12":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":16},"end":{"line":83,"column":16}},{"start":{"line":83,"column":16},"end":{"line":83,"column":16}}]},"13":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":16},"end":{"line":89,"column":16}},{"start":{"line":89,"column":16},"end":{"line":89,"column":16}}]}},"code":["\"use strict\";","","var clUtils = require(\"./clUtils\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var _ = require(\"lodash\");","","var kernelArgKind = {","    clObject: 0,","    localSize: 1,","    value: 2","};","","function KernelArg(kernel, index, value, type) {","    this.kernel = kernel;","    this.index = index;","    this.kind = 0;","    this._value = value;","    this._type = null;","    this._valueBuffer = null;","    this._set = null;","    var setArg = this.kernel.cl.imports.clSetKernelArg;","","    if (this._value === null || clUtils.isHandle(this._value)) {","        this.kind = kernelArgKind.clObject;","        if (this._value !== null) {","            this._value = clUtils.toHandle(this._value);","            this._valueBuffer = ref.alloc(this.kernel.cl.types.Mem);","            ref.set(this._valueBuffer, 0, this._value);","        }","        else {","            this._valueBuffer = null;","        }","        this._set = function () {","            this.kernel.cl.checkError(setArg(this.kernel.handle, this.index, ref.types.size_t.size, this._valueBuffer));","        }.bind(this);","    }","    else if (_.isUndefined(type) || type === null) {","        this.kind = kernelArgKind.localSize;","        this._set = function () {","            this.kernel.cl.checkError(setArg(this.kernel.handle, this.index, this._value, null));","        }.bind(this);","    }","    else {","        this.kind = kernelArgKind._value;","        this._type = ref.coerceType(type);","        this._valueBuffer = ref.alloc(this._type);","        ref.set(this._valueBuffer, 0, this._value);","        this._set = function () {","            this.kernel.cl.checkError(setArg(this.kernel.handle, this.index, this._type.size, this._valueBuffer));","        }.bind(this);","    }","","    this._set();","}","","KernelArg.kind = kernelArgKind;","","Object.defineProperties(KernelArg.prototype, {","    value: {","        get: function () {","            return this._value;","        },","        set: function (to) {","            if (this.kind === kernelArgKind.clObject) {","                if (to === null) {","                    if (this._value === null) {","                        return;","                    }","                    this._value = null;","                    this._set();","                }","                else {","                    to = clUtils.toHandle(to, \"to\");","                    if (this.value === null || ref.address(this._value) !== ref.address(to)) {","                        this._value = clUtils.toHandle(this._value);","                        ref.set(this._valueBuffer, 0, this._value);","                        this._set();","                    }","                }","            }","            else if (this.kind === kernelArgKind.localSize) {","                if (this._value !== to) {","                    this._value = to;","                    this._set();","                }","            }","            else { // kernelArgKind.value","                if (this._valueBuffer.deref() !== to) {","                    this._value = to;","                    ref.set(this._valueBuffer, 0, this._value);","                    this._set();","                }","            }","        }","    }","});","","module.exports = KernelArg;"],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"32":0,"34":0,"35":0,"38":0,"39":0,"40":0,"41":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"54":0,"57":1,"59":1,"62":0,"65":0,"66":0,"67":0,"68":0,"70":0,"71":0,"74":0,"75":0,"76":0,"77":0,"78":0,"82":0,"83":0,"84":0,"85":0,"89":0,"90":0,"91":0,"92":0,"99":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clImage2D.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clImage2D.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"CLImage2D","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":77}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":18},"end":{"line":20,"column":96}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":17},"end":{"line":31,"column":78}}},"4":{"name":"(anonymous_4)","line":35,"loc":{"start":{"line":35,"column":25},"end":{"line":35,"column":86}}},"5":{"name":"(anonymous_5)","line":39,"loc":{"start":{"line":39,"column":26},"end":{"line":39,"column":87}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"5":{"start":{"line":7,"column":0},"end":{"line":18,"column":1}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":43}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":30}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":29}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":24}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":27}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":168}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":23}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":40}},"14":{"start":{"line":20,"column":0},"end":{"line":29,"column":2}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":52}},"16":{"start":{"line":22,"column":4},"end":{"line":27,"column":5}},"17":{"start":{"line":23,"column":8},"end":{"line":23,"column":50}},"18":{"start":{"line":25,"column":9},"end":{"line":27,"column":5}},"19":{"start":{"line":26,"column":8},"end":{"line":26,"column":51}},"20":{"start":{"line":28,"column":4},"end":{"line":28,"column":113}},"21":{"start":{"line":31,"column":0},"end":{"line":33,"column":2}},"22":{"start":{"line":32,"column":4},"end":{"line":32,"column":84}},"23":{"start":{"line":35,"column":0},"end":{"line":37,"column":2}},"24":{"start":{"line":36,"column":4},"end":{"line":36,"column":90}},"25":{"start":{"line":39,"column":0},"end":{"line":41,"column":2}},"26":{"start":{"line":40,"column":4},"end":{"line":40,"column":91}},"27":{"start":{"line":43,"column":0},"end":{"line":43,"column":34}},"28":{"start":{"line":45,"column":0},"end":{"line":45,"column":27}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":14},"end":{"line":9,"column":21}},{"start":{"line":9,"column":25},"end":{"line":9,"column":29}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":15},"end":{"line":10,"column":23}},{"start":{"line":10,"column":27},"end":{"line":10,"column":28}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":9},"end":{"line":25,"column":9}},{"start":{"line":25,"column":9},"end":{"line":25,"column":9}}]}},"code":["\"use strict\";","var util = require(\"util\");","var CLImage = require(\"./clImage\");","var clUtils = require(\"./clUtils\");","var clPredef = require(\"./clPredef\");","","function CLImage2D(context, flags, format, width, height, hostPtr, rowPitch) {","    format = clUtils.asImageFormat(format);","    hostPtr = hostPtr || null;","    rowPitch = rowPitch || 0;","    var cl = context.cl;","","    var err = clPredef.err;","    var handle = cl.imports.clCreateImage2D(clUtils.toHandle(context, \"context\"), flags, format.ref(), width, height, rowPitch, clUtils.toPtr(hostPtr, \"hostPtr\"), err);","    cl.checkError(err);","","    CLImage.call(this, context, handle);","}","","CLImage2D._wrap = function (context, readOrWriteOnly, format, width, height, hostPtr, rowPitch) {","    var flags = context.cl.defs.CL_MEM_USE_HOST_PTR;","    if (readOrWriteOnly === \"readOnly\") {","        flags |= context.cl.defs.CL_MEM_READ_ONLY;","    }","    else if (readOrWriteOnly === \"writeOnly\") {","        flags |= context.cl.defs.CL_MEM_WRITE_ONLY;","    }","    return new CLImage2D(context, context.cl.defs.CL_MEM_USE_HOST_PTR, format, width, height, hostPtr, rowPitch);","};","","CLImage2D.wrap = function (context, format, width, height, hostPtr, rowPitch) {","    return CLImage2D._wrap(context, null, format, width, height, hostPtr, rowPitch);","};","","CLImage2D.wrapReadOnly = function (context, format, width, height, hostPtr, rowPitch) {","    return CLImage2D._wrap(context, \"readOnly\", format, width, height, hostPtr, rowPitch);","};","","CLImage2D.wrapWriteOnly = function (context, format, width, height, hostPtr, rowPitch) {","    return CLImage2D._wrap(context, \"writeOnly\", format, width, height, hostPtr, rowPitch);","};","","util.inherits(CLImage2D, CLImage);","","module.exports = CLImage2D;"],"l":{"2":1,"3":1,"4":1,"5":1,"7":1,"8":0,"9":0,"10":0,"11":0,"13":0,"14":0,"15":0,"17":0,"20":1,"21":0,"22":0,"23":0,"25":0,"26":0,"28":0,"31":1,"32":0,"35":1,"36":0,"39":1,"40":0,"43":1,"45":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clImage.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clImage.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"CLImage","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":25}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":13},"end":{"line":24,"column":25}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":25}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":13},"end":{"line":40,"column":25}}},"6":{"name":"(anonymous_6)","line":46,"loc":{"start":{"line":46,"column":13},"end":{"line":46,"column":25}}},"7":{"name":"(anonymous_7)","line":52,"loc":{"start":{"line":52,"column":13},"end":{"line":52,"column":25}}},"8":{"name":"(anonymous_8)","line":62,"loc":{"start":{"line":62,"column":13},"end":{"line":62,"column":25}}},"9":{"name":"(anonymous_9)","line":68,"loc":{"start":{"line":68,"column":13},"end":{"line":68,"column":25}}},"10":{"name":"(anonymous_10)","line":74,"loc":{"start":{"line":74,"column":13},"end":{"line":74,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"3":{"start":{"line":6,"column":0},"end":{"line":8,"column":1}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":41}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}},"6":{"start":{"line":12,"column":0},"end":{"line":78,"column":3}},"7":{"start":{"line":16,"column":12},"end":{"line":16,"column":126}},"8":{"start":{"line":25,"column":12},"end":{"line":25,"column":115}},"9":{"start":{"line":31,"column":12},"end":{"line":31,"column":112}},"10":{"start":{"line":41,"column":12},"end":{"line":41,"column":114}},"11":{"start":{"line":47,"column":12},"end":{"line":47,"column":108}},"12":{"start":{"line":53,"column":12},"end":{"line":53,"column":109}},"13":{"start":{"line":63,"column":12},"end":{"line":63,"column":108}},"14":{"start":{"line":69,"column":12},"end":{"line":69,"column":112}},"15":{"start":{"line":75,"column":12},"end":{"line":75,"column":109}},"16":{"start":{"line":80,"column":0},"end":{"line":80,"column":25}}},"branchMap":{},"code":["\"use strict\";","","var util = require(\"util\");","var CLMemory = require(\"./clMemory\");","","function CLImage(context, handle) {","    CLMemory.call(this, context, handle);","}","","util.inherits(CLImage, CLMemory);","","Object.defineProperties(CLImage.prototype, {","    //!image format descriptor specified when image was created","    format: {","        get: function () {","            return this._getInfoWith(this.cl.imports.clGetImageInfo, this.cl.types.ImageFormat, this.cl.defs.CL_IMAGE_FORMAT);","        }","    },","    /**","     *    size of each element of the image memory object given by image. An","     *    element is made up of n channels. The value of n is given in cl_image_format descriptor.","     */","    elementSize: {","        get: function () {","            return this._getInfoWith(this.cl.imports.clGetImageInfo, \"size_t\", this.cl.defs.CL_IMAGE_ELEMENT_SIZE);","        }","    },","    //! size in bytes of a row of elements of the image object given by image","    rowPitch: {","        get: function () {","            return this._getInfoWith(this.cl.imports.clGetImageInfo, \"size_t\", this.cl.defs.CL_IMAGE_ROW_PITCH);","        }","    },","    /**","     *    size in bytes of a 2D slice for the 3D image object given by image.","     *","     *    For a 2D image object this value will be 0.","     */","    slicePitch: {","        get: function () {","            return this._getInfoWith(this.cl.imports.clGetImageInfo, \"size_t\", this.cl.defs.CL_IMAGE_SLICE_PITCH);","        }","    },","    //! width in pixels","    width: {","        get: function () {","            return this._getInfoWith(this.cl.imports.clGetImageInfo, \"size_t\", this.cl.defs.CL_IMAGE_WIDTH);","        }","    },","    //! height in pixels","    height: {","        get: function () {","            return this._getInfoWith(this.cl.imports.clGetImageInfo, \"size_t\", this.cl.defs.CL_IMAGE_HEIGHT);","        }","    },","    /**","     *    depth of the image in pixels","     *","     *    For a 2D image object, depth = 0","     */","    depth: {","        get: function () {","            return this._getInfoWith(this.cl.imports.clGetImageInfo, \"size_t\", this.cl.defs.CL_IMAGE_DEPTH);","        }","    },","    //! The target argument specified in CLImage2DGL, CLImage3DGL constructors","    textureTarget: {","        get: function () {","            return this._getInfoWith(this.cl.imports.clGetImageInfo, \"uint\", this.cl.defs.CL_GL_TEXTURE_TARGET);","        }","    },","    //! The miplevel argument specified in CLImage2DGL, CLImage3DGL constructors","    mipmapLevel: {","        get: function () {","            return this._getInfoWith(this.cl.imports.clGetImageInfo, \"int\", this.cl.defs.CL_GL_MIPMAP_LEVEL);","        }","    }","});","","module.exports = CLImage;"],"l":{"3":1,"4":1,"6":1,"7":0,"10":1,"12":1,"16":0,"25":0,"31":0,"41":0,"47":0,"53":0,"63":0,"69":0,"75":0,"80":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clImage3D.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clImage3D.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"CLImage3D","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":96}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"5":{"start":{"line":8,"column":0},"end":{"line":20,"column":1}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":43}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":30}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":29}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":33}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":24}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":27}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":187}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":23}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":40}},"15":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}},"16":{"start":{"line":24,"column":0},"end":{"line":24,"column":27}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":14},"end":{"line":10,"column":21}},{"start":{"line":10,"column":25},"end":{"line":10,"column":29}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":15},"end":{"line":11,"column":23}},{"start":{"line":11,"column":27},"end":{"line":11,"column":28}}]},"3":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":17},"end":{"line":12,"column":27}},{"start":{"line":12,"column":31},"end":{"line":12,"column":32}}]}},"code":["\"use strict\";","","var util = require(\"util\");","var CLImage = require(\"./clImage\");","var clUtils = require(\"./clUtils\");","var clPredef = require(\"./clPredef\");","","function CLImage3D(context, flags, format, width, height, depth, hostPtr, rowPitch, slicePitch) {","    format = clUtils.asImageFormat(format);","    hostPtr = hostPtr || null;","    rowPitch = rowPitch || 0;","    slicePitch = slicePitch || 0;","    var cl = context.cl;","","    var err = clPredef.err;","    var handle = cl.imports.clCreateImage3D(clUtils.toHandle(context, \"context\"), flags, format.ref(), width, height, depth, rowPitch, slicePitch, clUtils.toPtr(hostPtr, \"hostPtr\"), err);","    cl.checkError(err);","","    CLImage.call(this, context, handle);","}","","util.inherits(CLImage3D, CLImage);","","module.exports = CLImage3D;"],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"15":0,"16":0,"17":0,"19":0,"22":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clSampler.js":{"path":"/home/travis/build/npmtest/node-npmtest-nooocl/node_modules/nooocl/lib/clSampler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"createReleaseFunction","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":38},"end":{"line":10,"column":50}}},"3":{"name":"CLSampler","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":74}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":13},"end":{"line":36,"column":25}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":13},"end":{"line":41,"column":25}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":13},"end":{"line":47,"column":25}}},"7":{"name":"(anonymous_7)","line":53,"loc":{"start":{"line":53,"column":13},"end":{"line":53,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"6":{"start":{"line":9,"column":0},"end":{"line":13,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":12,"column":7}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":44}},"9":{"start":{"line":23,"column":0},"end":{"line":30,"column":1}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":24}},"11":{"start":{"line":25,"column":4},"end":{"line":25,"column":44}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":133}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":23}},"14":{"start":{"line":28,"column":4},"end":{"line":28,"column":72}},"15":{"start":{"line":29,"column":4},"end":{"line":29,"column":27}},"16":{"start":{"line":32,"column":0},"end":{"line":32,"column":36}},"17":{"start":{"line":34,"column":0},"end":{"line":57,"column":3}},"18":{"start":{"line":37,"column":12},"end":{"line":37,"column":38}},"19":{"start":{"line":42,"column":12},"end":{"line":42,"column":84}},"20":{"start":{"line":48,"column":12},"end":{"line":48,"column":104}},"21":{"start":{"line":54,"column":12},"end":{"line":54,"column":96}},"22":{"start":{"line":59,"column":0},"end":{"line":59,"column":27}}},"branchMap":{},"code":["\"use strict\";","","var CLWrapper = require(\"./clWrapper\");","var util = require(\"util\");","var fastcall = require(\"fastcall\");","var ref = fastcall.ref;","var clUtils = require(\"./clUtils\");","","function createReleaseFunction(cl, handle) {","    return CLWrapper._releaseFunction(function () {","        cl.imports.clReleaseSampler(handle);","    });","}","","/**"," *    creates a sampler object"," *"," *    Params:"," *        normalizedCoords= determines if the image coordinates specified are normalized"," *        addressingMode    = specifies how out-of-range image coordinates are handled when reading from an image"," *        filterMode        = specifies the type of filter that must be applied when reading an image"," */","function CLSampler(context, normalizedCoords, addressingMode, filterMode) {","    var cl = context.cl;","    var err = ref.alloc(cl.types.ErrorCode);","    var handle = cl.imports.clCreateSampler(clUtils.toHandle(context, \"context\"), normalizedCoords, addressingMode, filterMode, err);","    cl.checkError(err);","    CLWrapper.call(this, cl, handle, createReleaseFunction(cl, handle));","    this.context = context;","}","","util.inherits(CLSampler, CLWrapper);","","Object.defineProperties(CLSampler.prototype, {","    _classInfoFunction: {","        get: function () {","            return \"clGetSamplerInfo\";","        }","    },","    normalizedCoords: {","        get: function () {","            return this._getInfo(\"bool\", this.cl.defs.CL_SAMPLER_NORMALIZED_COORDS);","        }","    },","","    addressingMode: {","        get: function () {","            return this._getInfo(this.cl.types.AddressingMode, this.cl.defs.CL_SAMPLER_ADDRESSING_MODE);","        }","    },","","    filterMode: {","        get: function () {","            return this._getInfo(this.cl.types.FilterMode, this.cl.defs.CL_SAMPLER_FILTER_MODE);","        }","    }","});","","module.exports = CLSampler;"],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"11":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"32":1,"34":1,"37":0,"42":0,"48":0,"54":0,"59":1}}}